{"ast":null,"code":"import { useRef, useEffect } from 'react';\nconst useCombinedRefs = function () {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  const targetRef = useRef(null);\n  useEffect(() => {\n    refs.forEach(ref => {\n      if (!ref) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(targetRef.current);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current = targetRef.current;\n      }\n    });\n  }, [refs]);\n  return targetRef;\n};\nexport default useCombinedRefs;","map":{"version":3,"names":["useRef","useEffect","useCombinedRefs","_len","arguments","length","refs","Array","_key","targetRef","forEach","ref","current"],"sources":["../../src/utils/use-combined-refs.ts"],"sourcesContent":[null],"mappings":"AAAA,SAAyBA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzD,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAA0C;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAnCC,IAA+B,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAA/BF,IAA+B,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC5D,MAAMC,SAAS,GAAGT,MAAM,CAAI,IAAI,CAAC;EAEjCC,SAAS,CAAC,MAAK;IACbK,IAAI,CAACI,OAAO,CAACC,GAAG,IAAG;MACjB,IAAI,CAACA,GAAG,EAAE;QACR;;MAGF,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;QAC7BA,GAAG,CAACF,SAAS,CAACG,OAAO,CAAC;OACvB,MAAM;QACL;QACA;QACAD,GAAG,CAACC,OAAO,GAAGH,SAAS,CAACG,OAAO;;IAEnC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,OAAOG,SAAS;AAClB,CAAC;AAED,eAAeP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}