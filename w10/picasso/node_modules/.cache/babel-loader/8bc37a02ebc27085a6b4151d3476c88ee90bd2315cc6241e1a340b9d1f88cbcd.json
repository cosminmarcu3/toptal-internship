{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { forwardRef, useState } from 'react';\nimport cx from 'classnames';\nimport { Accordion as MUIAccordion } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ArrowDownMinor16 } from '../Icon';\nimport AccordionSummary from '../AccordionSummary';\nimport AccordionDetails from '../AccordionDetails';\nimport styles from './styles';\nimport ButtonAction from '../ButtonAction';\nconst useStyles = makeStyles(styles, {\n  name: 'PicassoAccordion'\n});\nconst EmptyAccordionSummary = _ref => {\n  let {\n    'data-testid': dataTestId\n  } = _ref;\n  return React.createElement(\"div\", {\n    \"data-testid\": dataTestId\n  });\n};\nconst decorateWithExpandIconClasses = (expandIcon, classes) => React.cloneElement(expandIcon, {\n  className: cx(expandIcon.props.className, classes)\n});\n/* eslint-disable complexity */\nexport const Accordion = forwardRef(function Accordion(props, ref) {\n  const {\n      children,\n      content,\n      expanded,\n      defaultExpanded,\n      expandIcon,\n      borders,\n      disabled,\n      className,\n      style,\n      onChange,\n      testIds,\n      transitionProps\n    } = props,\n    rest = __rest(props, [\"children\", \"content\", \"expanded\", \"defaultExpanded\", \"expandIcon\", \"borders\", \"disabled\", \"className\", \"style\", \"onChange\", \"testIds\", \"transitionProps\"]);\n  const classes = useStyles(props);\n  const borderClasses = {\n    all: classes.bordersAll,\n    middle: classes.bordersMiddle,\n    none: classes.bordersNone\n  };\n  const [summaryExpanded, setSummaryExpanded] = useState(defaultExpanded);\n  const [prevExpanded, setPrevExpanded] = useState(defaultExpanded);\n  // getDerivedStateFromProps implementation to allow expanded to be controlled\n  if (expanded !== undefined && expanded !== prevExpanded) {\n    setSummaryExpanded(expanded);\n    setPrevExpanded(expanded);\n  }\n  const handleSummaryClick = () => {\n    setSummaryExpanded(!summaryExpanded);\n  };\n  const expandIconClass = cx(classes.expandIcon, {\n    [classes.expandIconExpanded]: summaryExpanded\n  });\n  const appliedBorders = children || expanded ? borders : 'none';\n  return React.createElement(MUIAccordion, Object.assign({}, rest, {\n    ref: ref,\n    classes: {\n      root: cx(classes.root, borderClasses[appliedBorders])\n    },\n    className: className,\n    style: style,\n    elevation: 0,\n    expanded: summaryExpanded,\n    disabled: disabled,\n    onChange: onChange,\n    TransitionProps: transitionProps\n  }), children ? React.createElement(AccordionSummary, {\n    classes: {\n      root: classes.summary,\n      content: classes.content\n    },\n    expandIcon: null,\n    onClick: handleSummaryClick,\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.accordionSummary\n  }, children, expandIcon ? decorateWithExpandIconClasses(expandIcon, expandIconClass) : React.createElement(\"div\", {\n    className: classes.expandIconAlignTop\n  }, React.createElement(ButtonAction, {\n    icon: React.createElement(ArrowDownMinor16, {\n      className: expandIconClass\n    })\n  }))) : React.createElement(EmptyAccordionSummary, {\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.emptyAccordionSummary\n  }), React.createElement(AccordionDetails, {\n    classes: {\n      root: classes.details\n    }\n  }, content));\n});\nAccordion.defaultProps = {\n  borders: 'all',\n  defaultExpanded: false,\n  disabled: false,\n  expanded: undefined,\n  onChange: () => {}\n};\nAccordion.displayName = 'Accordion';\nexport default Accordion;","map":{"version":3,"names":["React","forwardRef","useState","cx","Accordion","MUIAccordion","makeStyles","ArrowDownMinor16","AccordionSummary","AccordionDetails","styles","ButtonAction","useStyles","name","EmptyAccordionSummary","_ref","dataTestId","createElement","decorateWithExpandIconClasses","expandIcon","classes","cloneElement","className","props","ref","children","content","expanded","defaultExpanded","borders","disabled","style","onChange","testIds","transitionProps","rest","__rest","borderClasses","all","bordersAll","middle","bordersMiddle","none","bordersNone","summaryExpanded","setSummaryExpanded","prevExpanded","setPrevExpanded","undefined","handleSummaryClick","expandIconClass","expandIconExpanded","appliedBorders","Object","assign","root","elevation","TransitionProps","summary","onClick","accordionSummary","expandIconAlignTop","icon","emptyAccordionSummary","details","defaultProps","displayName"],"sources":["../../src/Accordion/Accordion.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}