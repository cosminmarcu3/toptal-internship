{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport cx from 'classnames';\nimport Container from '../Container';\nimport Button from '../Button';\nimport styles from './styles';\n// Using { index: -1 } to inject CSS link to the bottom of the head\n// in order to prevent Button's styles to override ButtonAction's ones\n// Related Jira issue: https://toptal-core.atlassian.net/browse/FX-1520\nconst useStyles = makeStyles(styles, {\n  name: 'PicassoButtonControlLabel',\n  index: -1\n});\nconst ButtonControlLabel = _a => {\n  var {\n      children,\n      size = 'medium',\n      className,\n      checked,\n      onChange,\n      id,\n      control,\n      value,\n      disabled\n    } = _a,\n    props = __rest(_a, [\"children\", \"size\", \"className\", \"checked\", \"onChange\", \"id\", \"control\", \"value\", \"disabled\"]);\n  const classes = useStyles();\n  const contentLeftSpacing = size === 'large' ? 1 : 0.5;\n  return React.createElement(Button, Object.assign({}, props, {\n    className: cx(className, classes.root, classes[size]),\n    variant: 'secondary',\n    size: size,\n    as: 'label',\n    htmlFor: id,\n    disabled: disabled\n  }), React.cloneElement(control, {\n    id,\n    checked,\n    value,\n    onChange,\n    disabled\n  }), React.createElement(Container, {\n    className: classes.content,\n    left: contentLeftSpacing\n  }, children));\n};\nButtonControlLabel.defaultProps = {\n  size: 'medium'\n};\nexport default ButtonControlLabel;","map":{"version":3,"names":["React","makeStyles","cx","Container","Button","styles","useStyles","name","index","ButtonControlLabel","_a","children","size","className","checked","onChange","id","control","value","disabled","props","__rest","classes","contentLeftSpacing","createElement","Object","assign","root","variant","as","htmlFor","cloneElement","content","left","defaultProps"],"sources":["../../src/ButtonControlLabel/ButtonControlLabel.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,OAAOA,KAAkC,MAAM,OAAO;AAEtD,SAASC,UAAU,QAAe,mBAAmB;AACrD,OAAOC,EAAE,MAAM,YAAY;AAE3B,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,MAAM,MAAM,UAAU;AA8B7B;AACA;AACA;AACA,MAAMC,SAAS,GAAGL,UAAU,CAAQI,MAAM,EAAE;EAC1CE,IAAI,EAAE,2BAA2B;EACjCC,KAAK,EAAE,CAAC;CACT,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,EAWpB,IAAI;MAXgB;MAC1BC,QAAQ;MACRC,IAAI,GAAG,QAAQ;MACfC,SAAS;MACTC,OAAO;MACPC,QAAQ;MACRC,EAAE;MACFC,OAAO;MACPC,KAAK;MACLC;IAAQ,IAAAT,EAEF;IADHU,KAAK,GAAAC,MAAA,CAAAX,EAAA,EAVkB,8FAW3B,CADS;EAER,MAAMY,OAAO,GAAGhB,SAAS,EAAE;EAE3B,MAAMiB,kBAAkB,GAAGX,IAAI,KAAK,OAAO,GAAG,CAAC,GAAG,GAAG;EAErD,OACEZ,KAAA,CAAAwB,aAAA,CAACpB,MAAM,EAAAqB,MAAA,CAAAC,MAAA,KACDN,KAAK;IACTP,SAAS,EAAEX,EAAE,CAACW,SAAS,EAAES,OAAO,CAACK,IAAI,EAAEL,OAAO,CAACV,IAAI,CAAC,CAAC;IACrDgB,OAAO,EAAC,WAAW;IACnBhB,IAAI,EAAEA,IAAI;IACViB,EAAE,EAAC,OAAO;IACVC,OAAO,EAAEd,EAAE;IACXG,QAAQ,EAAEA;EAAQ,IAEjBnB,KAAK,CAAC+B,YAAY,CAACd,OAAO,EAAE;IAAED,EAAE;IAAEF,OAAO;IAAEI,KAAK;IAAEH,QAAQ;IAAEI;EAAQ,CAAE,CAAC,EACxEnB,KAAA,CAAAwB,aAAA,CAACrB,SAAS;IAACU,SAAS,EAAES,OAAO,CAACU,OAAO;IAAEC,IAAI,EAAEV;EAAkB,GAC5DZ,QAAQ,CACC,CACL;AAEb,CAAC;AAEDF,kBAAkB,CAACyB,YAAY,GAAG;EAChCtB,IAAI,EAAE;CACP;AAED,eAAeH,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}