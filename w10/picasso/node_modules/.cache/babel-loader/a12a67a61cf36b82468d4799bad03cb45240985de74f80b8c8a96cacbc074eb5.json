{"ast":null,"code":"import capitalize from '@material-ui/core/utils/capitalize';\nimport { createStyles } from '@material-ui/core/styles';\nimport { spacingToRem } from '@toptal/picasso-shared';\nimport kebabToCamelCase from '../utils/kebab-to-camel-case';\nconst textAlignVariants = ['inherit', 'left', 'center', 'right', 'justify'];\nconst alignItemsVariants = ['flex-start', 'flex-end', 'center', 'stretch', 'baseline'];\nconst justifyContentVariants = ['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly'];\nconst directionVariants = ['top', 'left', 'bottom', 'right'];\nconst spacingVariants = ['xsmall', 'small', 'medium', 'large', 'xlarge'];\nconst containerVariants = ['transparent', 'red', 'green', 'white', 'yellow', 'blue', 'grey'];\nconst paddings = spacingVariants.reduce((acc, variant) => {\n  acc[`${variant}Padding`] = {\n    padding: spacingToRem(variant)\n  };\n  return acc;\n}, Object.create(null));\nconst gaps = spacingVariants.reduce((acc, variant) => {\n  acc[`${variant}Gap`] = {\n    gap: spacingToRem(variant)\n  };\n  return acc;\n}, Object.create(null));\nconst colorVariant = colorOptions => {\n  var _a;\n  if (!colorOptions) {\n    return {};\n  }\n  return {\n    backgroundColor: (_a = colorOptions.lighter2) !== null && _a !== void 0 ? _a : colorOptions.lighter\n  };\n};\nconst marginClassDef = (direction, spacing) => ({\n  [`margin${capitalize(direction)}`]: spacingToRem(spacing)\n});\nconst marginClasses = direction => {\n  return {\n    [`${direction}${'xsmall'}Margin`]: marginClassDef(direction, 'xsmall'),\n    [`${direction}${'small'}Margin`]: marginClassDef(direction, 'small'),\n    [`${direction}${'medium'}Margin`]: marginClassDef(direction, 'medium'),\n    [`${direction}${'large'}Margin`]: marginClassDef(direction, 'large'),\n    [`${direction}${'xlarge'}Margin`]: marginClassDef(direction, 'xlarge')\n  };\n};\nconst margins = Object.assign(Object.assign(Object.assign(Object.assign({}, marginClasses('top')), marginClasses('left')), marginClasses('bottom')), marginClasses('right'));\nconst alignItems = {};\nalignItemsVariants.forEach(variant => {\n  alignItems[`${kebabToCamelCase(variant)}AlignItems`] = {\n    alignItems: variant\n  };\n});\nconst textAlignItems = {};\ntextAlignVariants.forEach(variant => {\n  textAlignItems[`${variant}TextAlign`] = {\n    textAlign: variant\n  };\n});\nconst justifyContent = {};\njustifyContentVariants.forEach(variant => {\n  justifyContent[`${kebabToCamelCase(variant)}JustifyContent`] = {\n    justifyContent: variant\n  };\n});\nexport default (_ref => {\n  let {\n    palette,\n    sizes: {\n      borderRadius\n    }\n  } = _ref;\n  return createStyles(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    bordered: {\n      border: `1px solid ${palette.grey.lighter2}`\n    },\n    rounded: {\n      borderRadius: borderRadius.medium\n    },\n    flex: {\n      display: 'flex',\n      '&$inline': {\n        display: 'inline-flex'\n      }\n    },\n    column: {\n      flexDirection: 'column'\n    },\n    rowReverse: {\n      flexDirection: 'row-reverse'\n    },\n    columnReverse: {\n      flexDirection: 'column-reverse'\n    },\n    inline: {\n      display: 'inline-block'\n    },\n    whiteVariant: {\n      backgroundColor: palette.common.white\n    },\n    redVariant: colorVariant(palette.red),\n    greenVariant: colorVariant(palette.green),\n    yellowVariant: colorVariant(palette.yellow),\n    blueVariant: colorVariant(palette.blue),\n    greyVariant: colorVariant(palette.grey)\n  }, paddings), margins), alignItems), justifyContent), textAlignItems), gaps));\n});","map":{"version":3,"names":["capitalize","createStyles","spacingToRem","kebabToCamelCase","textAlignVariants","alignItemsVariants","justifyContentVariants","directionVariants","spacingVariants","containerVariants","paddings","reduce","acc","variant","padding","Object","create","gaps","gap","colorVariant","colorOptions","backgroundColor","_a","lighter2","lighter","marginClassDef","direction","spacing","marginClasses","margins","assign","alignItems","forEach","textAlignItems","textAlign","justifyContent","_ref","palette","sizes","borderRadius","bordered","border","grey","rounded","medium","flex","display","column","flexDirection","rowReverse","columnReverse","inline","whiteVariant","common","white","redVariant","red","greenVariant","green","yellowVariant","yellow","blueVariant","blue","greyVariant"],"sources":["../../src/Container/styles.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}