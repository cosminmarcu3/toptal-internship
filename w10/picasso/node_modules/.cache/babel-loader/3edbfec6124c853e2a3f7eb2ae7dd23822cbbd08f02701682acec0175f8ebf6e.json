{"ast":null,"code":"import { createStyles } from '@material-ui/core/styles';\nconst baseButtonProps = {\n  transitionProperty: 'color, background',\n  '&:active, &$active, &:hover, &$hovered, &:focus, &$focused': {\n    // border overlap to keep proper border width, but on state change\n    // we need to move up overlapped border\n    zIndex: 1\n  }\n};\nconst firstButtonProps = {\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0,\n  marginLeft: '0rem'\n};\nconst middleButtonProps = {\n  borderRadius: 0,\n  // prevents border between 2 buttons to be wider then specified\n  marginLeft: '-1px'\n};\nconst lastButtonProps = {\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  // prevents border between 2 buttons to be wider then specified\n  marginLeft: '-1px'\n};\nexport default (() => createStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    // default case\n    '& [data-component-type=\"button\"]': Object.assign(Object.assign({}, baseButtonProps), {\n      // first item\n      '&:first-child:not(:last-child)': firstButtonProps,\n      // middle item\n      '&:not(:first-child):not(:last-child)': middleButtonProps,\n      // last item\n      '&:last-child:not(:first-child)': lastButtonProps\n    }),\n    // nested case when button is nested in first item in ButtonGroup\n    '& :first-child:not(:last-child) [data-component-type=\"button\"]': Object.assign(Object.assign({}, baseButtonProps), firstButtonProps),\n    // nested case when button is nested in middle item in ButtonGroup\n    '& :not(:first-child):not(:last-child) [data-component-type=\"button\"]': Object.assign(Object.assign({}, baseButtonProps), middleButtonProps),\n    // nested case when button is nested in last item in ButtonGroup\n    '& :last-child:not(:first-child) [data-component-type=\"button\"]': Object.assign(Object.assign({}, baseButtonProps), lastButtonProps)\n  },\n  active: {},\n  focused: {},\n  hovered: {}\n}));","map":{"version":3,"names":["createStyles","baseButtonProps","transitionProperty","zIndex","firstButtonProps","borderTopRightRadius","borderBottomRightRadius","marginLeft","middleButtonProps","borderRadius","lastButtonProps","borderTopLeftRadius","borderBottomLeftRadius","root","display","justifyContent","Object","assign","active","focused","hovered"],"sources":["../../src/ButtonGroup/styles.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,YAAY,QAAQ,0BAA0B;AAEvD,MAAMC,eAAe,GAAG;EACtBC,kBAAkB,EAAE,mBAAmB;EAEvC,4DAA4D,EAAE;IAC5D;IACA;IACAC,MAAM,EAAE;;CAEX;AAED,MAAMC,gBAAgB,GAAG;EACvBC,oBAAoB,EAAE,CAAC;EACvBC,uBAAuB,EAAE,CAAC;EAC1BC,UAAU,EAAE;CACb;AAED,MAAMC,iBAAiB,GAAG;EACxBC,YAAY,EAAE,CAAC;EACf;EACAF,UAAU,EAAE;CACb;AAED,MAAMG,eAAe,GAAG;EACtBC,mBAAmB,EAAE,CAAC;EACtBC,sBAAsB,EAAE,CAAC;EACzB;EACAL,UAAU,EAAE;CACb;AAED,gBAAe,MACbP,YAAY,CAAC;EACXa,IAAI,EAAE;IACJC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,YAAY;IAE5B;IACA,kCAAkC,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAC7BhB,eAAe;MAElB;MACA,gCAAgC,EAAEG,gBAAgB;MAClD;MACA,sCAAsC,EAAEI,iBAAiB;MACzD;MACA,gCAAgC,EAAEE;IAAe,EAClD;IAED;IACA,gEAAgE,EAAAM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAC3DhB,eAAe,GACfG,gBAAgB,CACpB;IAED;IACA,sEAAsE,EAAAY,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACjEhB,eAAe,GACfO,iBAAiB,CACrB;IAED;IACA,gEAAgE,EAAAQ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAC3DhB,eAAe,GACfS,eAAe;GAErB;EACDQ,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE;CACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}