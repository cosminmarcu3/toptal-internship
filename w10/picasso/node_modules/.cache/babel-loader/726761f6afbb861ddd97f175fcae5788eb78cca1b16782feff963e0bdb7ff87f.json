{"ast":null,"code":"import React from 'react';\n/**\n * Wraps the exotic generic functional component type returned by the `forwardRef`.\n * This function adopts the type of the exotic component to take `defaultProps` and\n * `displayName`.\n *\n * @see forwardRef\n *\n * @param component exotic component returned by `forwardRef`\n */\nexport const documentable = component => component;\n/**\n * Wrapper around React.forwardRef that preserves genericity of the passed `Component`.\n * @note If you need to set `defaultProps` and `displayName` properties, you need to wrap\n * result of this function into `documentable`,\n *\n * @see documentable\n *\n * @warning ⚠️ Use it only when you need to preserve genericity of the component as it\n * omits some type checks on the prop type of the component and IT DOESN'T ADD ref\n * property type to the list of props — you have to do it on your own. If you don't\n * care about genericity use React.forwardRef directly.\n *\n * @param component React component conforming to forwardRef type constraints\n */\nexport const forwardRef = component => React.forwardRef(component);","map":{"version":3,"names":["React","documentable","component","forwardRef"],"sources":["../../src/utils/forward-ref.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAOzB;;;;;;;;;AASA,OAAO,MAAMC,YAAY,GAAUC,SAAY,IAAsBA,SAAS;AAE9E;;;;;;;;;;;;;;AAcA,OAAO,MAAMC,UAAU,GACrBD,SAAqE,IAErEF,KAAK,CAACG,UAAU,CAACD,SAAS,CAEI"},"metadata":{},"sourceType":"module","externalDependencies":[]}