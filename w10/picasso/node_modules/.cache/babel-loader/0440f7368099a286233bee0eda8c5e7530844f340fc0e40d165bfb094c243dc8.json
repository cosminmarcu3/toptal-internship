{"ast":null,"code":"export const DEFAULT_CURRENCY = 'USD';\nexport const DEFAULT_LOCALE = 'en-US';\nexport const formatAmount = _ref => {\n  let {\n    amount,\n    currency = DEFAULT_CURRENCY,\n    locale = DEFAULT_LOCALE,\n    options\n  } = _ref;\n  const transformedAmount = typeof amount === 'string' ? Number(amount) : amount;\n  return Intl.NumberFormat(locale, {\n    style: 'currency',\n    minimumFractionDigits: options === null || options === void 0 ? void 0 : options.minimumFractionDigits,\n    maximumFractionDigits: options === null || options === void 0 ? void 0 : options.maximumFractionDigits,\n    currency\n  }).format(transformedAmount);\n};","map":{"version":3,"names":["DEFAULT_CURRENCY","DEFAULT_LOCALE","formatAmount","_ref","amount","currency","locale","options","transformedAmount","Number","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format"],"sources":["../../../src/utils/Formatters/format-amount.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,KAAK;AACrC,OAAO,MAAMC,cAAc,GAAG,OAAO;AAkBrC,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAKT;EAAA,IALU;IAC3BC,MAAM;IACNC,QAAQ,GAAGL,gBAAgB;IAC3BM,MAAM,GAAGL,cAAc;IACvBM;EAAO,CACM,GAAAJ,IAAA;EACb,MAAMK,iBAAiB,GAAG,OAAOJ,MAAM,KAAK,QAAQ,GAAGK,MAAM,CAACL,MAAM,CAAC,GAAGA,MAAM;EAE9E,OAAOM,IAAI,CAACC,YAAY,CAACL,MAAM,EAAE;IAC/BM,KAAK,EAAE,UAAU;IACjBC,qBAAqB,EAAEN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,qBAAqB;IACrDC,qBAAqB,EAAEP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,qBAAqB;IACrDT;GACD,CAAC,CAACU,MAAM,CAACP,iBAAiB,CAAC;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}