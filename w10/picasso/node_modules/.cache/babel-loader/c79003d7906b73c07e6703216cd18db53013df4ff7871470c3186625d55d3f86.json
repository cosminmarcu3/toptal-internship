{"ast":null,"code":"import { createStyles } from '@material-ui/core/styles';\nimport { PicassoProvider } from '@toptal/picasso-provider';\nimport toMuiVariant from './utils/to-mui-variant';\nconst getHeadingMedium = theme => ({\n  color: theme.palette.common.black,\n  fontWeight: theme.typography.fontWeights.semibold,\n  fontSize: '16px',\n  lineHeight: '24px'\n});\n// TODO: https://toptal-core.atlassian.net/browse/FX-2166\nPicassoProvider.override(theme => {\n  const {\n    palette,\n    typography\n  } = theme;\n  // Fundamental Typography styles across the MUI complex components\n  // Ex. DatePicker has a MUITypography inside, the styles will be overriden to match BASE\n  return {\n    MuiTypography: {\n      [toMuiVariant('heading', 'xlarge')]: {\n        color: palette.common.black,\n        fontWeight: typography.fontWeights.semibold,\n        fontSize: '28px',\n        lineHeight: '42px'\n      },\n      [toMuiVariant('heading', 'large')]: {\n        color: palette.common.black,\n        fontWeight: typography.fontWeights.semibold,\n        fontSize: '20px',\n        lineHeight: '30px'\n      },\n      [toMuiVariant('heading', 'medium')]: getHeadingMedium(theme),\n      [toMuiVariant('heading', 'small')]: {\n        color: palette.common.black,\n        fontWeight: typography.fontWeights.semibold,\n        fontSize: '14px',\n        lineHeight: '22px'\n      },\n      [toMuiVariant('body', 'medium')]: {\n        color: palette.text.primary,\n        fontWeight: typography.fontWeights.regular,\n        fontSize: '14px',\n        lineHeight: '22px'\n      }\n    }\n  };\n});\nexport default (theme => {\n  const {\n    palette,\n    typography\n  } = theme;\n  // All the body variants are mapped to the same MUI variant (body1) -> declaring styles via custom class names\n  return createStyles({\n    bodyXxsmall: {\n      color: palette.text.primary,\n      fontWeight: typography.fontWeights.regular,\n      fontSize: '11px',\n      lineHeight: '16px'\n    },\n    bodyXsmall: {\n      color: palette.text.primary,\n      fontWeight: typography.fontWeights.regular,\n      fontSize: '12px',\n      lineHeight: '18px'\n    },\n    bodySmall: {\n      color: palette.text.primary,\n      fontWeight: typography.fontWeights.regular,\n      fontSize: '13px',\n      lineHeight: '20px'\n    },\n    bodyMedium: {\n      color: palette.text.primary,\n      fontWeight: typography.fontWeights.regular,\n      fontSize: '14px',\n      lineHeight: '22px'\n    },\n    bodyLarge: {\n      color: palette.common.black,\n      fontWeight: typography.fontWeights.regular,\n      fontSize: '16px',\n      lineHeight: '24px'\n    },\n    bodyInherit: {\n      fontSize: '1em',\n      lineHeight: '1.5em',\n      fontWeight: typography.fontWeights.regular,\n      color: palette.text.primary\n    },\n    headingMedium: getHeadingMedium(theme),\n    regular: {\n      fontWeight: typography.fontWeights.regular\n    },\n    semibold: {\n      fontWeight: typography.fontWeights.semibold\n    },\n    inheritWeight: {\n      fontWeight: 'inherit'\n    },\n    green: {\n      color: palette.green.dark\n    },\n    red: {\n      color: palette.red.main\n    },\n    yellow: {\n      color: palette.yellow.main\n    },\n    lightGrey: {\n      color: palette.grey.light2\n    },\n    grey: {\n      color: palette.grey.main\n    },\n    'greyMain-2': {\n      color: palette.grey.main2\n    },\n    darkGrey: {\n      color: palette.text.primary\n    },\n    black: {\n      color: palette.common.black\n    },\n    lightBlue: {\n      color: palette.blue.light\n    },\n    invert: {\n      color: palette.common.white\n    },\n    inherit: {\n      color: 'inherit'\n    },\n    blue: {\n      color: palette.blue.main\n    },\n    solid: {\n      textDecoration: 'underline',\n      textDecorationStyle: 'solid'\n    },\n    dashed: {\n      textDecoration: 'underline',\n      textDecorationStyle: 'dashed'\n    },\n    lineThrough: {\n      textDecoration: 'line-through'\n    }\n  });\n});","map":{"version":3,"names":["createStyles","PicassoProvider","toMuiVariant","getHeadingMedium","theme","color","palette","common","black","fontWeight","typography","fontWeights","semibold","fontSize","lineHeight","override","MuiTypography","text","primary","regular","bodyXxsmall","bodyXsmall","bodySmall","bodyMedium","bodyLarge","bodyInherit","headingMedium","inheritWeight","green","dark","red","main","yellow","lightGrey","grey","light2","main2","darkGrey","lightBlue","blue","light","invert","white","inherit","solid","textDecoration","textDecorationStyle","dashed","lineThrough"],"sources":["../../src/Typography/styles.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}