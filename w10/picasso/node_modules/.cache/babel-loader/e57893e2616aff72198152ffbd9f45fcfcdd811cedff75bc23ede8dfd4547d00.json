{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar Truncate = function (_Component) {\n  _inherits(Truncate, _Component);\n  function Truncate() {\n    var _ref;\n    _classCallCheck(this, Truncate);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n    _this.state = {};\n    _this.styles = {\n      ellipsis: {\n        position: 'fixed',\n        visibility: 'hidden',\n        top: 0,\n        left: 0\n      }\n    };\n    _this.elements = {};\n    _this.onResize = _this.onResize.bind(_this);\n    _this.onTruncate = _this.onTruncate.bind(_this);\n    _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n    _this.measureWidth = _this.measureWidth.bind(_this);\n    _this.getLines = _this.getLines.bind(_this);\n    _this.renderLine = _this.renderLine.bind(_this);\n    return _this;\n  }\n  _createClass(Truncate, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var text = this.elements.text,\n        calcTargetWidth = this.calcTargetWidth,\n        onResize = this.onResize;\n      var canvas = document.createElement('canvas');\n      this.canvasContext = canvas.getContext('2d');\n      calcTargetWidth(function () {\n        // Node not needed in document tree to read its content\n        if (text) {\n          text.parentNode.removeChild(text);\n        }\n      });\n      window.addEventListener('resize', onResize);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // Render was based on outdated refs and needs to be rerun\n      if (this.props.children !== prevProps.children) {\n        this.forceUpdate();\n      }\n\n      // If the width prop has changed, recalculate size of contents\n      if (this.props.width !== prevProps.width) {\n        this.calcTargetWidth();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var ellipsis = this.elements.ellipsis,\n        onResize = this.onResize,\n        timeout = this.timeout;\n      ellipsis.parentNode.removeChild(ellipsis);\n      window.removeEventListener('resize', onResize);\n      window.cancelAnimationFrame(timeout);\n    }\n\n    // Shim innerText to consistently break lines at <br/> but not at \\n\n  }, {\n    key: 'innerText',\n    value: function innerText(node) {\n      var div = document.createElement('div');\n      var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n      div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n      var text = div[contentKey];\n      var test = document.createElement('div');\n      test.innerHTML = 'foo<br/>bar';\n      if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n        div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n        text = div[contentKey];\n      }\n      return text;\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize() {\n      this.calcTargetWidth();\n    }\n  }, {\n    key: 'onTruncate',\n    value: function onTruncate(didTruncate) {\n      var onTruncate = this.props.onTruncate;\n      if (typeof onTruncate === 'function') {\n        this.timeout = window.requestAnimationFrame(function () {\n          onTruncate(didTruncate);\n        });\n      }\n    }\n  }, {\n    key: 'calcTargetWidth',\n    value: function calcTargetWidth(callback) {\n      var target = this.elements.target,\n        calcTargetWidth = this.calcTargetWidth,\n        canvasContext = this.canvasContext,\n        width = this.props.width;\n\n      // Calculation is no longer relevant, since node has been removed\n\n      if (!target) {\n        return;\n      }\n      var targetWidth = width ||\n      // Floor the result to deal with browser subpixel precision\n      Math.floor(target.parentNode.getBoundingClientRect().width);\n\n      // Delay calculation until parent node is inserted to the document\n      // Mounting order in React is ChildComponent, ParentComponent\n      if (!targetWidth) {\n        return window.requestAnimationFrame(function () {\n          return calcTargetWidth(callback);\n        });\n      }\n      var style = window.getComputedStyle(target);\n      var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n      canvasContext.font = font;\n      this.setState({\n        targetWidth: targetWidth\n      }, callback);\n    }\n  }, {\n    key: 'measureWidth',\n    value: function measureWidth(text) {\n      return this.canvasContext.measureText(text).width;\n    }\n  }, {\n    key: 'ellipsisWidth',\n    value: function ellipsisWidth(node) {\n      return node.offsetWidth;\n    }\n  }, {\n    key: 'trimRight',\n    value: function trimRight(text) {\n      return text.replace(/\\s+$/, '');\n    }\n  }, {\n    key: 'getLines',\n    value: function getLines() {\n      var elements = this.elements,\n        _props = this.props,\n        numLines = _props.lines,\n        ellipsis = _props.ellipsis,\n        trimWhitespace = _props.trimWhitespace,\n        targetWidth = this.state.targetWidth,\n        innerText = this.innerText,\n        measureWidth = this.measureWidth,\n        onTruncate = this.onTruncate,\n        trimRight = this.trimRight;\n      var lines = [];\n      var text = innerText(elements.text);\n      var textLines = text.split('\\n').map(function (line) {\n        return line.split(' ');\n      });\n      var didTruncate = true;\n      var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n      for (var line = 1; line <= numLines; line++) {\n        var textWords = textLines[0];\n\n        // Handle newline\n        if (textWords.length === 0) {\n          lines.push();\n          textLines.shift();\n          line--;\n          continue;\n        }\n        var resultLine = textWords.join(' ');\n        if (measureWidth(resultLine) <= targetWidth) {\n          if (textLines.length === 1) {\n            // Line is end of text and fits without truncating\n            didTruncate = false;\n            lines.push(resultLine);\n            break;\n          }\n        }\n        if (line === numLines) {\n          // Binary search determining the longest possible line inluding truncate string\n          var textRest = textWords.join(' ');\n          var lower = 0;\n          var upper = textRest.length - 1;\n          while (lower <= upper) {\n            var middle = Math.floor((lower + upper) / 2);\n            var testLine = textRest.slice(0, middle + 1);\n            if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n              lower = middle + 1;\n            } else {\n              upper = middle - 1;\n            }\n          }\n          var lastLineText = textRest.slice(0, lower);\n          if (trimWhitespace) {\n            lastLineText = trimRight(lastLineText);\n\n            // Remove blank lines from the end of text\n            while (!lastLineText.length && lines.length) {\n              var prevLine = lines.pop();\n              lastLineText = trimRight(prevLine);\n            }\n          }\n          resultLine = React.createElement('span', null, lastLineText, ellipsis);\n        } else {\n          // Binary search determining when the line breaks\n          var _lower = 0;\n          var _upper = textWords.length - 1;\n          while (_lower <= _upper) {\n            var _middle = Math.floor((_lower + _upper) / 2);\n            var _testLine = textWords.slice(0, _middle + 1).join(' ');\n            if (measureWidth(_testLine) <= targetWidth) {\n              _lower = _middle + 1;\n            } else {\n              _upper = _middle - 1;\n            }\n          }\n\n          // The first word of this line is too long to fit it\n          if (_lower === 0) {\n            // Jump to processing of last line\n            line = numLines - 1;\n            continue;\n          }\n          resultLine = textWords.slice(0, _lower).join(' ');\n          textLines[0].splice(0, _lower);\n        }\n        lines.push(resultLine);\n      }\n      onTruncate(didTruncate);\n      return lines;\n    }\n  }, {\n    key: 'renderLine',\n    value: function renderLine(line, i, arr) {\n      if (i === arr.length - 1) {\n        return React.createElement('span', {\n          key: i\n        }, line);\n      } else {\n        var br = React.createElement('br', {\n          key: i + 'br'\n        });\n        if (line) {\n          return [React.createElement('span', {\n            key: i\n          }, line), br];\n        } else {\n          return br;\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var target = this.elements.target,\n        _props2 = this.props,\n        children = _props2.children,\n        ellipsis = _props2.ellipsis,\n        lines = _props2.lines,\n        spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n        targetWidth = this.state.targetWidth,\n        getLines = this.getLines,\n        renderLine = this.renderLine,\n        onTruncate = this.onTruncate;\n      var text = void 0;\n      var mounted = !!(target && targetWidth);\n      if (typeof window !== 'undefined' && mounted) {\n        if (lines > 0) {\n          text = getLines().map(renderLine);\n        } else {\n          text = children;\n          onTruncate(false);\n        }\n      }\n      delete spanProps.onTruncate;\n      delete spanProps.trimWhitespace;\n      return React.createElement('span', _extends({}, spanProps, {\n        ref: function ref(targetEl) {\n          _this2.elements.target = targetEl;\n        }\n      }), React.createElement('span', null, text), React.createElement('span', {\n        ref: function ref(textEl) {\n          _this2.elements.text = textEl;\n        }\n      }, children), React.createElement('span', {\n        ref: function ref(ellipsisEl) {\n          _this2.elements.ellipsis = ellipsisEl;\n        },\n        style: this.styles.ellipsis\n      }, ellipsis));\n    }\n  }]);\n  return Truncate;\n}(Component);\nTruncate.propTypes = {\n  children: PropTypes.node,\n  ellipsis: PropTypes.node,\n  lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n  trimWhitespace: PropTypes.bool,\n  width: PropTypes.number,\n  onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n  children: '',\n  ellipsis: '…',\n  lines: 1,\n  trimWhitespace: false,\n  width: 0\n};\nexport default Truncate;\n;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","React","Component","PropTypes","Truncate","_Component","_ref","_len","args","Array","_key","_this","getPrototypeOf","apply","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","componentDidMount","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","componentDidUpdate","prevProps","children","forceUpdate","width","componentWillUnmount","timeout","removeEventListener","cancelAnimationFrame","innerText","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","ellipsisWidth","offsetWidth","trimRight","_props","numLines","lines","trimWhitespace","textLines","split","map","line","textWords","push","shift","resultLine","textRest","lower","upper","middle","testLine","slice","lastLineText","prevLine","pop","_lower","_upper","_middle","_testLine","splice","arr","br","render","_this2","_props2","spanProps","mounted","ref","targetEl","textEl","ellipsisEl","propTypes","oneOfType","oneOf","number","bool","func","defaultProps"],"sources":["/home/marcucosmin3/bootcamp/w10/picasso/node_modules/react-truncate/lib/Truncate.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}