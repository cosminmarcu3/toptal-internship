{"ast":null,"code":"import { useCallback } from 'react';\nimport { actions as toolbarActions } from '../../store/toolbar';\nimport { convertBoldFromEditorValue, convertItalicFromEditorValue, convertListFromEditorValue, convertHeaderFromEditorValue, convertLinkFromEditorValue } from '../../utils/convertFormat';\nconst useOnTextFormat = _ref => {\n  let {\n    dispatch\n  } = _ref;\n  const handleTextFormat = useCallback(e => {\n    switch (e.formatName) {\n      case 'bold':\n        {\n          const boldValue = convertBoldFromEditorValue(e.value);\n          return toolbarActions.setBold(dispatch)(boldValue);\n        }\n      case 'italic':\n        {\n          const italicValue = convertItalicFromEditorValue(e.value);\n          return toolbarActions.setItalic(dispatch)(italicValue);\n        }\n      case 'list':\n        {\n          const listValue = convertListFromEditorValue(e.value);\n          return toolbarActions.setList(dispatch)(listValue);\n        }\n      case 'header':\n        {\n          const headerValue = convertHeaderFromEditorValue(e.value);\n          return toolbarActions.setHeader(dispatch)(headerValue);\n        }\n      case 'link':\n        {\n          const linkValue = convertLinkFromEditorValue(e.value);\n          return toolbarActions.setLink(dispatch)(linkValue);\n        }\n      default:\n        throw Error(`TextEditor - useOnTextFormat is not implemented for ${e}`);\n    }\n  }, [dispatch]);\n  return {\n    handleTextFormat\n  };\n};\nexport default useOnTextFormat;","map":{"version":3,"names":["useCallback","actions","toolbarActions","convertBoldFromEditorValue","convertItalicFromEditorValue","convertListFromEditorValue","convertHeaderFromEditorValue","convertLinkFromEditorValue","useOnTextFormat","_ref","dispatch","handleTextFormat","e","formatName","boldValue","value","setBold","italicValue","setItalic","listValue","setList","headerValue","setHeader","linkValue","setLink","Error"],"sources":["../../../../src/RichTextEditor/hooks/useOnTextFormat/useOnTextFormat.tsx"],"sourcesContent":[null],"mappings":"AAAA,SAAmBA,WAAW,QAAQ,OAAO;AAG7C,SAASC,OAAO,IAAIC,cAAc,QAAQ,qBAAqB;AAE/D,SACEC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,0BAA0B,QACrB,2BAA2B;AAMlC,MAAMC,eAAe,GAAGC,IAAA,IAAwB;EAAA,IAAvB;IAAEC;EAAQ,CAAS,GAAAD,IAAA;EAC1C,MAAME,gBAAgB,GAAGX,WAAW,CACjCY,CAAyB,IAAI;IAC5B,QAAQA,CAAC,CAACC,UAAU;MAClB,KAAK,MAAM;QAAE;UACX,MAAMC,SAAS,GAAGX,0BAA0B,CAACS,CAAC,CAACG,KAAK,CAAC;UAErD,OAAOb,cAAc,CAACc,OAAO,CAACN,QAAQ,CAAC,CAACI,SAAS,CAAC;;MAEpD,KAAK,QAAQ;QAAE;UACb,MAAMG,WAAW,GAAGb,4BAA4B,CAACQ,CAAC,CAACG,KAAK,CAAC;UAEzD,OAAOb,cAAc,CAACgB,SAAS,CAACR,QAAQ,CAAC,CAACO,WAAW,CAAC;;MAExD,KAAK,MAAM;QAAE;UACX,MAAME,SAAS,GAAGd,0BAA0B,CAACO,CAAC,CAACG,KAAK,CAAC;UAErD,OAAOb,cAAc,CAACkB,OAAO,CAACV,QAAQ,CAAC,CAACS,SAAS,CAAC;;MAEpD,KAAK,QAAQ;QAAE;UACb,MAAME,WAAW,GAAGf,4BAA4B,CAACM,CAAC,CAACG,KAAK,CAAC;UAEzD,OAAOb,cAAc,CAACoB,SAAS,CAACZ,QAAQ,CAAC,CAACW,WAAW,CAAC;;MAExD,KAAK,MAAM;QAAE;UACX,MAAME,SAAS,GAAGhB,0BAA0B,CAACK,CAAC,CAACG,KAAK,CAAC;UAErD,OAAOb,cAAc,CAACsB,OAAO,CAACd,QAAQ,CAAC,CAACa,SAAS,CAAC;;MAEpD;QACE,MAAME,KAAK,CACT,uDAAuDb,CAAC,EAAE,CAC3D;IAAA;EAEP,CAAC,EACD,CAACF,QAAQ,CAAC,CACX;EAED,OAAO;IAAEC;EAAgB,CAAE;AAC7B,CAAC;AAED,eAAeH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}