{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport { useTitleCase } from '@toptal/picasso-shared';\nimport styles from './styles';\nimport toTitleCase from '../utils/to-title-case';\nconst useStyles = makeStyles(styles, {\n  name: 'PicassoFormLabel'\n});\nexport const FormLabel = forwardRef(function FormLabel(props, ref) {\n  const {\n      children,\n      disabled,\n      htmlFor,\n      className,\n      style,\n      inline,\n      as: Component = 'label',\n      titleCase: propsTitleCase,\n      requiredDecoration,\n      size = 'medium'\n    } = props,\n    rest = __rest(props, [\"children\", \"disabled\", \"htmlFor\", \"className\", \"style\", \"inline\", \"as\", \"titleCase\", \"requiredDecoration\", \"size\"]);\n  const classes = useStyles(props);\n  const isInline = inline || Component === 'span';\n  const titleCase = useTitleCase(propsTitleCase);\n  return React.createElement(Component, Object.assign({}, rest, {\n    ref: ref,\n    htmlFor: htmlFor,\n    className: cx(classes.root, {\n      [classes.disabled]: disabled,\n      [classes.inline]: isInline\n    }, className),\n    style: style\n  }), React.createElement(\"span\", {\n    className: classes[size]\n  }, requiredDecoration === 'asterisk' && React.createElement(\"span\", {\n    className: classes.asterisk\n  }, \"*\"), titleCase ? toTitleCase(children) : children, requiredDecoration === 'optional' && ' (optional)'));\n});\nFormLabel.defaultProps = {\n  as: 'label',\n  inline: false,\n  size: 'medium'\n};\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","map":{"version":3,"names":["React","forwardRef","makeStyles","cx","useTitleCase","styles","toTitleCase","useStyles","name","FormLabel","props","ref","children","disabled","htmlFor","className","style","inline","as","Component","titleCase","propsTitleCase","requiredDecoration","size","rest","__rest","classes","isInline","createElement","Object","assign","root","asterisk","defaultProps","displayName"],"sources":["../../src/FormLabel/FormLabel.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAmC,OAAO;AACpE,SAASC,UAAU,QAAe,0BAA0B;AAC5D,OAAOC,EAAE,MAAM,YAAY;AAC3B,SACEC,YAAY,QAIP,wBAAwB;AAE/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,wBAAwB;AAyBhD,MAAMC,SAAS,GAAGL,UAAU,CAAeG,MAAM,EAAE;EAAEG,IAAI,EAAE;AAAkB,CAAE,CAAC;AAEhF,OAAO,MAAMC,SAAS,GAAGR,UAAU,CAA0B,SAASQ,SAASA,CAC7EC,KAAK,EACLC,GAAG;EAEH,MAAM;MACJC,QAAQ;MACRC,QAAQ;MACRC,OAAO;MACPC,SAAS;MACTC,KAAK;MACLC,MAAM;MACNC,EAAE,EAAEC,SAAS,GAAG,OAAO;MACvBC,SAAS,EAAEC,cAAc;MACzBC,kBAAkB;MAClBC,IAAI,GAAG;IAAQ,IAEbb,KAAK;IADJc,IAAI,GAAAC,MAAA,CACLf,KAAK,EAZH,oHAYL,CAAQ;EAET,MAAMgB,OAAO,GAAGnB,SAAS,CAACG,KAAK,CAAC;EAEhC,MAAMiB,QAAQ,GAAGV,MAAM,IAAIE,SAAS,KAAK,MAAM;EAC/C,MAAMC,SAAS,GAAGhB,YAAY,CAACiB,cAAc,CAAC;EAE9C,OACErB,KAAA,CAAA4B,aAAA,CAACT,SAAS,EAAAU,MAAA,CAAAC,MAAA,KACJN,IAAI;IACRb,GAAG,EAAEA,GAAG;IACRG,OAAO,EAAEA,OAAO;IAChBC,SAAS,EAAEZ,EAAE,CACXuB,OAAO,CAACK,IAAI,EACZ;MACE,CAACL,OAAO,CAACb,QAAQ,GAAGA,QAAQ;MAC5B,CAACa,OAAO,CAACT,MAAM,GAAGU;KACnB,EACDZ,SAAS,CACV;IACDC,KAAK,EAAEA;EAAK,IAEZhB,KAAA,CAAA4B,aAAA;IAAMb,SAAS,EAAEW,OAAO,CAACH,IAAI;EAAC,GAC3BD,kBAAkB,KAAK,UAAU,IAChCtB,KAAA,CAAA4B,aAAA;IAAMb,SAAS,EAAEW,OAAO,CAACM;EAAQ,OAClC,EAEAZ,SAAS,GAAGd,WAAW,CAACM,QAAQ,CAAC,GAAGA,QAAQ,EAC5CU,kBAAkB,KAAK,UAAU,IAAI,aAAa,CAC9C,CACG;AAEhB,CAAC,CAAC;AAEFb,SAAS,CAACwB,YAAY,GAAG;EACvBf,EAAE,EAAE,OAAO;EACXD,MAAM,EAAE,KAAK;EACbM,IAAI,EAAE;CACP;AAEDd,SAAS,CAACyB,WAAW,GAAG,WAAW;AAEnC,eAAezB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}