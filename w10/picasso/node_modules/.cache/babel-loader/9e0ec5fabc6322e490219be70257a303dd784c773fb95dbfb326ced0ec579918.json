{"ast":null,"code":"import React, { useState } from 'react';\nimport { zoomTransform, select } from 'd3';\nconst treeContextValue = {\n  state: {},\n  updateState: () => {}\n};\nexport const TreeViewContext = React.createContext(treeContextValue);\nexport const TreeViewContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState({});\n  const updateState = newState => {\n    setState(Object.assign(Object.assign({}, state), newState));\n  };\n  const zoomHandler = step => {\n    if (!state.ref || !state.zoom) {\n      return;\n    }\n    select(state.ref).transition().call(state.zoom.scaleTo, function (datum, index, groups) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const defaultExtent = state.zoom.extent();\n      const k0 = zoomTransform(this).k;\n      // @ts-ignore\n      const extent = defaultExtent.apply(this, [datum, index, groups]);\n      const width = extent[1][0];\n      // support backward compatibility for the `step` argument\n      const k1 = step > 1 ? step - 1 : -step;\n      return (width * k0 + width * k1) / width;\n    });\n  };\n  return React.createElement(TreeViewContext.Provider, {\n    value: {\n      state: Object.assign(Object.assign({}, state), {\n        zoomHandler\n      }),\n      updateState\n    }\n  }, children);\n};","map":{"version":3,"names":["React","useState","zoomTransform","select","treeContextValue","state","updateState","TreeViewContext","createContext","TreeViewContainer","_ref","children","setState","newState","Object","assign","zoomHandler","step","ref","zoom","transition","call","scaleTo","datum","index","groups","defaultExtent","extent","k0","k","apply","width","k1","createElement","Provider","value"],"sources":["../../src/TreeView/TreeViewContainer.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,SAASC,aAAa,EAAEC,MAAM,QAAQ,IAAI;AAS1C,MAAMC,gBAAgB,GAAyB;EAC7CC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAEA,CAAA,KAAK,CAAE;CACrB;AAED,OAAO,MAAMC,eAAe,GAC1BP,KAAK,CAACQ,aAAa,CAAuBJ,gBAAgB,CAAC;AAE7D,OAAO,MAAMK,iBAAiB,GAAGC,IAAA,IAA0C;EAAA,IAAzC;IAAEC;EAAQ,CAA2B,GAAAD,IAAA;EACrE,MAAM,CAACL,KAAK,EAAEO,QAAQ,CAAC,GAAGX,QAAQ,CAAuB,EAAE,CAAC;EAE5D,MAAMK,WAAW,GAAIO,QAAuC,IAAI;IAC9DD,QAAQ,CAAAE,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACHV,KAAK,GACLQ,QAAQ,EACX;EACJ,CAAC;EAED,MAAMG,WAAW,GAAIC,IAAY,IAAI;IACnC,IAAI,CAACZ,KAAK,CAACa,GAAG,IAAI,CAACb,KAAK,CAACc,IAAI,EAAE;MAC7B;;IAGFhB,MAAM,CAACE,KAAK,CAACa,GAAG,CAAC,CACdE,UAAU,EAAE,CACZC,IAAI,CACHhB,KAAK,CAACc,IAAI,CAACG,OAAO,EAClB,UAEEC,KAAc,EACdC,KAAa,EACbC,MAAW;MAEX;MACA,MAAMC,aAAa,GAAGrB,KAAK,CAACc,IAAK,CAACQ,MAAM,EAAE;MAC1C,MAAMC,EAAE,GAAG1B,aAAa,CAAC,IAAI,CAAC,CAAC2B,CAAC;MAChC;MACA,MAAMF,MAAM,GAAGD,aAAa,CAACI,KAAK,CAAC,IAAI,EAAE,CAACP,KAAK,EAAEC,KAAK,EAAEC,MAAM,CAAC,CAAC;MAChE,MAAMM,KAAK,GAAGJ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B;MACA,MAAMK,EAAE,GAAGf,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAACA,IAAI;MAEtC,OAAO,CAACc,KAAK,GAAGH,EAAE,GAAGG,KAAK,GAAGC,EAAE,IAAID,KAAK;IAC1C,CAAC,CACF;EACL,CAAC;EAED,OACE/B,KAAA,CAAAiC,aAAA,CAAC1B,eAAe,CAAC2B,QAAQ;IACvBC,KAAK,EAAE;MACL9B,KAAK,EAAAS,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACAV,KAAK;QACRW;MAAW,EACZ;MACDV;;EACD,GAEAK,QAAQ,CACgB;AAE/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}