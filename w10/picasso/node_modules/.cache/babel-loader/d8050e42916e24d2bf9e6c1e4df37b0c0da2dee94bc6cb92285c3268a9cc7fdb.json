{"ast":null,"code":"export const findExtremeNodes = nodes => {\n  if (nodes.length === 0) {\n    return;\n  }\n  let topMostNode = nodes[0];\n  let leftMostNode = nodes[0];\n  for (const node of nodes) {\n    if (node.y < topMostNode.y) {\n      topMostNode = node;\n    }\n    if (node.x < leftMostNode.x) {\n      leftMostNode = node;\n    }\n  }\n  return {\n    topMostNode,\n    leftMostNode\n  };\n};","map":{"version":3,"names":["findExtremeNodes","nodes","length","topMostNode","leftMostNode","node","y","x"],"sources":["../../../src/StaticTreeView/utils/findExtremeNodes.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAC3BC,KAAU,IAMI;EACd,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB;;EAEF,IAAIC,WAAW,GAAGF,KAAK,CAAC,CAAC,CAAC;EAC1B,IAAIG,YAAY,GAAGH,KAAK,CAAC,CAAC,CAAC;EAE3B,KAAK,MAAMI,IAAI,IAAIJ,KAAK,EAAE;IACxB,IAAII,IAAI,CAACC,CAAC,GAAGH,WAAW,CAACG,CAAC,EAAE;MAC1BH,WAAW,GAAGE,IAAI;;IAEpB,IAAIA,IAAI,CAACE,CAAC,GAAGH,YAAY,CAACG,CAAC,EAAE;MAC3BH,YAAY,GAAGC,IAAI;;;EAIvB,OAAO;IAAEF,WAAW;IAAEC;EAAY,CAAE;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}