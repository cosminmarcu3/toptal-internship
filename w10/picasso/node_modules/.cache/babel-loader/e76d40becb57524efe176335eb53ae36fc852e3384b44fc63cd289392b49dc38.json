{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../../_lib/tzIntlTimeZoneName/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../../_lib/tzParseTimezone/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar MILLISECONDS_IN_MINUTE = 60 * 1000;\nvar formatters = {\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, options._originalDate || date);\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, options._originalDate || date);\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, options._originalDate || date);\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return (0, _index.default)('short', originalDate, options);\n      // Long\n\n      case 'zzzz':\n      default:\n        return (0, _index.default)('long', originalDate, options);\n    }\n  }\n};\nfunction getTimeZoneOffset(timeZone, originalDate) {\n  var timeZoneOffset = timeZone ? (0, _index2.default)(timeZone, originalDate, true) / MILLISECONDS_IN_MINUTE : originalDate.getTimezoneOffset();\n  if (Number.isNaN(timeZoneOffset)) {\n    throw new RangeError('Invalid time zone specified: ' + timeZone);\n  }\n  return timeZoneOffset;\n}\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}\nfunction formatTimezone(offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(Math.floor(absOffset % 60), 2);\n  return sign + hours + delimeter + minutes;\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimeter);\n}\nfunction formatTimezoneShort(offset, dirtyDelimeter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimeter = dirtyDelimeter || '';\n  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2);\n}\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_index","_interopRequireDefault","require","_index2","obj","__esModule","MILLISECONDS_IN_MINUTE","formatters","X","date","token","localize","options","timezoneOffset","getTimeZoneOffset","timeZone","_originalDate","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","originalDate","timeZoneOffset","getTimezoneOffset","Number","isNaN","RangeError","addLeadingZeros","number","targetLength","sign","output","Math","abs","toString","length","offset","dirtyDelimeter","delimeter","absOffset","hours","floor","minutes","String","_default","module"],"sources":["/home/marcucosmin3/bootcamp/w10/picasso/node_modules/date-fns-tz/format/formatters/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = _interopRequireDefault(require(\"../../_lib/tzIntlTimeZoneName/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../../_lib/tzParseTimezone/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_MINUTE = 60 * 1000;\nvar formatters = {\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, options._originalDate || date);\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, options._originalDate || date);\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, options._originalDate || date);\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return (0, _index.default)('short', originalDate, options);\n      // Long\n\n      case 'zzzz':\n      default:\n        return (0, _index.default)('long', originalDate, options);\n    }\n  }\n};\n\nfunction getTimeZoneOffset(timeZone, originalDate) {\n  var timeZoneOffset = timeZone ? (0, _index2.default)(timeZone, originalDate, true) / MILLISECONDS_IN_MINUTE : originalDate.getTimezoneOffset();\n\n  if (Number.isNaN(timeZoneOffset)) {\n    throw new RangeError('Invalid time zone specified: ' + timeZone);\n  }\n\n  return timeZoneOffset;\n}\n\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}\n\nfunction formatTimezone(offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(Math.floor(absOffset % 60), 2);\n  return sign + hours + delimeter + minutes;\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimeter);\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimeter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimeter = dirtyDelimeter || '';\n  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2);\n}\n\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}