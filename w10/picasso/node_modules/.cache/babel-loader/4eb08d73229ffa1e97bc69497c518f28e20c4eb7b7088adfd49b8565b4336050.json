{"ast":null,"code":"/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} initialIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @returns {number} The new index after the move.\n */\n// eslint-disable-next-line complexity\nconst getNextWrappingIndex = (moveAmount, initialIndex, itemCount) => {\n  const itemsLastIndex = itemCount - 1;\n  if (typeof initialIndex !== 'number' || initialIndex < 0 || initialIndex >= itemCount) {\n    initialIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n  const newIndex = initialIndex + moveAmount;\n  if (newIndex < 0) {\n    return itemsLastIndex;\n  }\n  if (newIndex > itemsLastIndex) {\n    return 0;\n  }\n  return newIndex;\n};\nexport default getNextWrappingIndex;","map":{"version":3,"names":["getNextWrappingIndex","moveAmount","initialIndex","itemCount","itemsLastIndex","newIndex"],"sources":["../../../../src/SelectBase/utils/get-next-wrapping-index/get-next-wrapping-index.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;AASA;AACA,MAAMA,oBAAoB,GAAGA,CAC3BC,UAAkB,EAClBC,YAA2B,EAC3BC,SAAiB,KACf;EACF,MAAMC,cAAc,GAAGD,SAAS,GAAG,CAAC;EAEpC,IACE,OAAOD,YAAY,KAAK,QAAQ,IAChCA,YAAY,GAAG,CAAC,IAChBA,YAAY,IAAIC,SAAS,EACzB;IACAD,YAAY,GAAGD,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGG,cAAc,GAAG,CAAC;;EAGzD,MAAMC,QAAQ,GAAGH,YAAY,GAAGD,UAAU;EAE1C,IAAII,QAAQ,GAAG,CAAC,EAAE;IAChB,OAAOD,cAAc;;EAGvB,IAAIC,QAAQ,GAAGD,cAAc,EAAE;IAC7B,OAAO,CAAC;;EAGV,OAAOC,QAAQ;AACjB,CAAC;AAED,eAAeL,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}