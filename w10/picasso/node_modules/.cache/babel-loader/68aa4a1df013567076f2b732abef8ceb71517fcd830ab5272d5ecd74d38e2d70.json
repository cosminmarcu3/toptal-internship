{"ast":null,"code":"import { useCallback, useState } from 'react';\nconst CLOSE_TO_LIMIT = 10;\nconst defaultMinLengthMessage = (minLength, currLength, isError) => {\n  if (isError) {\n    return `${minLength} characters required, current count is ${currLength}`;\n  }\n  return `${currLength} characters entered`;\n};\nconst defaultMaxLengthMessage = (maxLength, currLength, isError) => {\n  if (isError) {\n    return `${currLength - maxLength} over the limit`;\n  }\n  return `${maxLength - currLength} characters left`;\n};\nconst getInitialCounterMessage = _ref => {\n  let {\n    minLength,\n    maxLength,\n    minLengthMessage = defaultMinLengthMessage,\n    maxLengthMessage = defaultMaxLengthMessage\n  } = _ref;\n  if (minLength) {\n    return minLengthMessage(minLength, 0, true);\n  }\n  if (maxLength) {\n    return maxLengthMessage(maxLength, 0, false);\n  }\n  return '';\n};\nconst useCounter = _ref2 => {\n  let {\n    minLength,\n    maxLength,\n    minLengthMessage = defaultMinLengthMessage,\n    maxLengthMessage = defaultMaxLengthMessage\n  } = _ref2;\n  const [message, setMesssage] = useState(() => getInitialCounterMessage({\n    minLength,\n    maxLength,\n    minLengthMessage,\n    maxLengthMessage\n  }));\n  const [isError, setIsError] = useState(!!minLength);\n  const handleCounterMessage = useCallback(currLength => {\n    if (minLength) {\n      if (currLength < minLength) {\n        setMesssage(minLengthMessage(minLength, currLength, true));\n        setIsError(true);\n        return;\n      } else if (!maxLength) {\n        setMesssage(minLengthMessage(minLength, currLength, false));\n        setIsError(false);\n        return;\n      }\n    }\n    if (maxLength) {\n      if (maxLength - currLength <= CLOSE_TO_LIMIT && maxLength - currLength >= 0) {\n        setMesssage(maxLengthMessage(maxLength, currLength, false));\n        setIsError(true);\n        return;\n      }\n      if (currLength < maxLength) {\n        setMesssage(maxLengthMessage(maxLength, currLength, false));\n        setIsError(false);\n        return;\n      }\n      setMesssage(maxLengthMessage(maxLength, currLength, true));\n      setIsError(true);\n    }\n  }, [minLength, maxLength, minLengthMessage, maxLengthMessage]);\n  return {\n    counterMessage: message,\n    counterError: isError,\n    handleCounterMessage\n  };\n};\nexport default useCounter;","map":{"version":3,"names":["useCallback","useState","CLOSE_TO_LIMIT","defaultMinLengthMessage","minLength","currLength","isError","defaultMaxLengthMessage","maxLength","getInitialCounterMessage","_ref","minLengthMessage","maxLengthMessage","useCounter","_ref2","message","setMesssage","setIsError","handleCounterMessage","counterMessage","counterError"],"sources":["../../../../src/RichTextEditor/hooks/useCounter/useCounter.tsx"],"sourcesContent":[null],"mappings":"AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAY7C,MAAMC,cAAc,GAAG,EAAE;AACzB,MAAMC,uBAAuB,GAAyBA,CACpDC,SAAS,EACTC,UAAU,EACVC,OAAO,KACL;EACF,IAAIA,OAAO,EAAE;IACX,OAAO,GAAGF,SAAS,0CAA0CC,UAAU,EAAE;;EAG3E,OAAO,GAAGA,UAAU,qBAAqB;AAC3C,CAAC;AAED,MAAME,uBAAuB,GAAyBA,CACpDC,SAAS,EACTH,UAAU,EACVC,OAAO,KACL;EACF,IAAIA,OAAO,EAAE;IACX,OAAO,GAAGD,UAAU,GAAGG,SAAS,iBAAiB;;EAGnD,OAAO,GAAGA,SAAS,GAAGH,UAAU,kBAAkB;AACpD,CAAC;AAED,MAAMI,wBAAwB,GAAGC,IAAA,IAKrB;EAAA,IALsB;IAChCN,SAAS;IACTI,SAAS;IACTG,gBAAgB,GAAGR,uBAAuB;IAC1CS,gBAAgB,GAAGL;EAAuB,CACpC,GAAAG,IAAA;EACN,IAAIN,SAAS,EAAE;IACb,OAAOO,gBAAgB,CAACP,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC;;EAG7C,IAAII,SAAS,EAAE;IACb,OAAOI,gBAAgB,CAACJ,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC;;EAG9C,OAAO,EAAE;AACX,CAAC;AAED,MAAMK,UAAU,GAAGC,KAAA,IAKP;EAAA,IALQ;IAClBV,SAAS;IACTI,SAAS;IACTG,gBAAgB,GAAGR,uBAAuB;IAC1CS,gBAAgB,GAAGL;EAAuB,CACpC,GAAAO,KAAA;EACN,MAAM,CAACC,OAAO,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,MACtCQ,wBAAwB,CAAC;IACvBL,SAAS;IACTI,SAAS;IACTG,gBAAgB;IAChBC;GACD,CAAC,CACH;EACD,MAAM,CAACN,OAAO,EAAEW,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAACG,SAAS,CAAC;EAEnD,MAAMc,oBAAoB,GAA4BlB,WAAW,CAC/DK,UAAU,IAAG;IACX,IAAID,SAAS,EAAE;MACb,IAAIC,UAAU,GAAGD,SAAS,EAAE;QAC1BY,WAAW,CAACL,gBAAgB,CAACP,SAAS,EAAEC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC1DY,UAAU,CAAC,IAAI,CAAC;QAEhB;OACD,MAAM,IAAI,CAACT,SAAS,EAAE;QACrBQ,WAAW,CAACL,gBAAgB,CAACP,SAAS,EAAEC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC3DY,UAAU,CAAC,KAAK,CAAC;QAEjB;;;IAIJ,IAAIT,SAAS,EAAE;MACb,IACEA,SAAS,GAAGH,UAAU,IAAIH,cAAc,IACxCM,SAAS,GAAGH,UAAU,IAAI,CAAC,EAC3B;QACAW,WAAW,CAACJ,gBAAgB,CAACJ,SAAS,EAAEH,UAAU,EAAE,KAAK,CAAC,CAAC;QAC3DY,UAAU,CAAC,IAAI,CAAC;QAEhB;;MAGF,IAAIZ,UAAU,GAAGG,SAAS,EAAE;QAC1BQ,WAAW,CAACJ,gBAAgB,CAACJ,SAAS,EAAEH,UAAU,EAAE,KAAK,CAAC,CAAC;QAC3DY,UAAU,CAAC,KAAK,CAAC;QAEjB;;MAGFD,WAAW,CAACJ,gBAAgB,CAACJ,SAAS,EAAEH,UAAU,EAAE,IAAI,CAAC,CAAC;MAC1DY,UAAU,CAAC,IAAI,CAAC;;EAEpB,CAAC,EACD,CAACb,SAAS,EAAEI,SAAS,EAAEG,gBAAgB,EAAEC,gBAAgB,CAAC,CAC3D;EAED,OAAO;IACLO,cAAc,EAAEJ,OAAO;IACvBK,YAAY,EAAEd,OAAO;IACrBY;GACD;AACH,CAAC;AAED,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}