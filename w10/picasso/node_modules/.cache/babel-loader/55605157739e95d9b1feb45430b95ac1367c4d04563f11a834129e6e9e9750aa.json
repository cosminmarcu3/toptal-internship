{"ast":null,"code":"import { MuiThemeProvider, StylesProvider, createGenerateClassName } from '@material-ui/core/styles';\nimport React from 'react';\nimport CssBaseline from '../../CssBaseline';\nimport { generateRandomStringOrGetEmptyInTest } from '../utils';\nimport { PicassoBreakpoints } from '../config';\nimport PicassoProvider from '../PicassoProvider';\nimport PicassoRootNode from '../PicassoRootNode';\nimport PicassoGlobalStylesProvider from '../PicassoGlobalStylesProvider';\nconst PicassoLight = _ref => {\n  let {\n    reset,\n    responsive,\n    environment = 'development',\n    children,\n    RootComponent = PicassoRootNode,\n    titleCase,\n    theme,\n    disableTransitions,\n    disableClassNamePrefix,\n    injectFirst\n  } = _ref;\n  if (theme) {\n    PicassoProvider.extendTheme(theme);\n  }\n  if (!responsive) {\n    PicassoProvider.disableResponsiveStyle();\n    PicassoBreakpoints.disableMobileBreakpoints();\n  }\n  const generateClassName = createGenerateClassName({\n    // if there are multiples instances of Picasso\n    // on the page we want each set of styles to be unique\n    seed: disableClassNamePrefix ? '' : generateRandomStringOrGetEmptyInTest()\n  });\n  return React.createElement(StylesProvider, {\n    generateClassName: generateClassName,\n    injectFirst: injectFirst\n  }, React.createElement(MuiThemeProvider, {\n    theme: PicassoProvider.theme\n  }, React.createElement(PicassoGlobalStylesProvider, {\n    RootComponent: RootComponent,\n    environment: environment,\n    titleCase: titleCase,\n    disableTransitions: disableTransitions\n  }, reset && React.createElement(CssBaseline, null), children)));\n};\nPicassoLight.defaultProps = {\n  environment: 'development',\n  responsive: true,\n  reset: true,\n  injectFirst: undefined,\n  RootComponent: PicassoRootNode\n};\nexport default PicassoLight;","map":{"version":3,"names":["MuiThemeProvider","StylesProvider","createGenerateClassName","React","CssBaseline","generateRandomStringOrGetEmptyInTest","PicassoBreakpoints","PicassoProvider","PicassoRootNode","PicassoGlobalStylesProvider","PicassoLight","_ref","reset","responsive","environment","children","RootComponent","titleCase","theme","disableTransitions","disableClassNamePrefix","injectFirst","extendTheme","disableResponsiveStyle","disableMobileBreakpoints","generateClassName","seed","createElement","defaultProps","undefined"],"sources":["../../../src/Picasso/PicassoLight/PicassoLight.tsx"],"sourcesContent":[null],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,cAAc,EACdC,uBAAuB,QAClB,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,oCAAoC,QAAQ,UAAU;AAC/D,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,OAAOC,eAAe,MAAM,oBAAoB;AAEhD,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,2BAA2B,MAAM,gCAAgC;AAOxE,MAAMC,YAAY,GAAGC,IAAA,IAWG;EAAA,IAXF;IACpBC,KAAK;IACLC,UAAU;IACVC,WAAW,GAAG,aAAa;IAC3BC,QAAQ;IACRC,aAAa,GAAGR,eAAe;IAC/BS,SAAS;IACTC,KAAK;IACLC,kBAAkB;IAClBC,sBAAsB;IACtBC;EAAW,CACO,GAAAV,IAAA;EAClB,IAAIO,KAAK,EAAE;IACTX,eAAe,CAACe,WAAW,CAACJ,KAAK,CAAC;;EAGpC,IAAI,CAACL,UAAU,EAAE;IACfN,eAAe,CAACgB,sBAAsB,EAAE;IACxCjB,kBAAkB,CAACkB,wBAAwB,EAAE;;EAG/C,MAAMC,iBAAiB,GAAGvB,uBAAuB,CAAC;IAChD;IACA;IACAwB,IAAI,EAAEN,sBAAsB,GAAG,EAAE,GAAGf,oCAAoC;GACzE,CAAC;EAEF,OACEF,KAAA,CAAAwB,aAAA,CAAC1B,cAAc;IACbwB,iBAAiB,EAAEA,iBAAiB;IACpCJ,WAAW,EAAEA;EAAW,GAExBlB,KAAA,CAAAwB,aAAA,CAAC3B,gBAAgB;IAACkB,KAAK,EAAEX,eAAe,CAACW;EAAK,GAC5Cf,KAAA,CAAAwB,aAAA,CAAClB,2BAA2B;IAC1BO,aAAa,EAAEA,aAAa;IAC5BF,WAAW,EAAEA,WAAW;IACxBG,SAAS,EAAEA,SAAS;IACpBE,kBAAkB,EAAEA;EAAkB,GAErCP,KAAK,IAAIT,KAAA,CAAAwB,aAAA,CAACvB,WAAW,OAAG,EACxBW,QAAQ,CACmB,CACb,CACJ;AAErB,CAAC;AAEDL,YAAY,CAACkB,YAAY,GAAG;EAC1Bd,WAAW,EAAE,aAAa;EAC1BD,UAAU,EAAE,IAAI;EAChBD,KAAK,EAAE,IAAI;EACXS,WAAW,EAAEQ,SAAS;EACtBb,aAAa,EAAER;CAChB;AAED,eAAeE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}