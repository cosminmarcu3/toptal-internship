{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { useMemo } from 'react';\nimport Select from '../Select';\nimport { documentable, forwardRef } from '../utils/forward-ref';\nconst OPTIONS = [{\n  value: 1,\n  text: 'January'\n}, {\n  value: 2,\n  text: 'February'\n}, {\n  value: 3,\n  text: 'March'\n}, {\n  value: 4,\n  text: 'April'\n}, {\n  value: 5,\n  text: 'May'\n}, {\n  value: 6,\n  text: 'June'\n}, {\n  value: 7,\n  text: 'July'\n}, {\n  value: 8,\n  text: 'August'\n}, {\n  value: 9,\n  text: 'September'\n}, {\n  value: 10,\n  text: 'October'\n}, {\n  value: 11,\n  text: 'November'\n}, {\n  value: 12,\n  text: 'December'\n}];\nconst getFilteredOptions = (from, to) => {\n  return OPTIONS.slice(from - 1, to);\n};\nconst FIRST_MONTH = 1;\nconst LAST_MONTH = 12;\nexport const MonthSelect = documentable(forwardRef((_a, ref) => {\n  var {\n      from = FIRST_MONTH,\n      to = LAST_MONTH\n    } = _a,\n    rest = __rest(_a, [\"from\", \"to\"]);\n  if (from < FIRST_MONTH || from > LAST_MONTH || to < FIRST_MONTH || to > LAST_MONTH || to < from) {\n    throw new Error(`Invalid range. Please check the values you have passed: from: ${from}, to: ${to}`);\n  }\n  const options = useMemo(() => getFilteredOptions(from, to), [from, to]);\n  return React.createElement(Select, Object.assign({}, rest, {\n    ref: ref,\n    options: options\n  }));\n}));\nMonthSelect.defaultProps = {\n  from: 1,\n  to: 12\n};\nMonthSelect.displayName = 'MonthSelect';\nexport default MonthSelect;","map":{"version":3,"names":["React","useMemo","Select","documentable","forwardRef","OPTIONS","value","text","getFilteredOptions","from","to","slice","FIRST_MONTH","LAST_MONTH","MonthSelect","_a","ref","rest","__rest","Error","options","createElement","Object","assign","defaultProps","displayName"],"sources":["../../src/MonthSelect/MonthSelect.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAa,OAAO;AAE3C,OAAOC,MAAuB,MAAM,WAAW;AAC/C,SAASC,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAsB/D,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAS,CAAE,EAC7B;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAE,EAC9B;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAE,EAC3B;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAE,EAC3B;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAK,CAAE,EACzB;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAM,CAAE,EAC1B;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAM,CAAE,EAC1B;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAE,EAC5B;EAAED,KAAK,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAE,EAC/B;EAAED,KAAK,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAS,CAAE,EAC9B;EAAED,KAAK,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAU,CAAE,EAC/B;EAAED,KAAK,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAU,CAAE,CAChC;AAED,MAAMC,kBAAkB,GAAGA,CAACC,IAAY,EAAEC,EAAU,KAAI;EACtD,OAAOL,OAAO,CAACM,KAAK,CAACF,IAAI,GAAG,CAAC,EAAEC,EAAE,CAAC;AACpC,CAAC;AAED,MAAME,WAAW,GAAG,CAAC;AACrB,MAAMC,UAAU,GAAG,EAAE;AAErB,OAAO,MAAMC,WAAW,GAAGX,YAAY,CACrCC,UAAU,CACR,CACEW,EAA0D,EAC1DC,GAA0B,KACxB;MAFF;MAAEP,IAAI,GAAGG,WAAW;MAAEF,EAAE,GAAGG;IAAU,IAAAE,EAAqB;IAAhBE,IAAI,GAAAC,MAAA,CAAAH,EAAA,EAA9C,cAAgD,CAAF;EAG9C,IACEN,IAAI,GAAGG,WAAW,IAClBH,IAAI,GAAGI,UAAU,IACjBH,EAAE,GAAGE,WAAW,IAChBF,EAAE,GAAGG,UAAU,IACfH,EAAE,GAAGD,IAAI,EACT;IACA,MAAM,IAAIU,KAAK,CACb,iEAAiEV,IAAI,SAASC,EAAE,EAAE,CACnF;;EAGH,MAAMU,OAAO,GAAGnB,OAAO,CAAC,MAAMO,kBAAkB,CAACC,IAAI,EAAEC,EAAE,CAAC,EAAE,CAACD,IAAI,EAAEC,EAAE,CAAC,CAAC;EAEvE,OAAOV,KAAA,CAAAqB,aAAA,CAACnB,MAAM,EAAAoB,MAAA,CAAAC,MAAA,KAAKN,IAAI;IAAED,GAAG,EAAEA,GAAG;IAAEI,OAAO,EAAEA;EAAO,GAAI;AACzD,CAAC,CACF,CACF;AAEDN,WAAW,CAACU,YAAY,GAAG;EACzBf,IAAI,EAAE,CAAC;EACPC,EAAE,EAAE;CACL;AAEDI,WAAW,CAACW,WAAW,GAAG,aAAa;AAEvC,eAAeX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}