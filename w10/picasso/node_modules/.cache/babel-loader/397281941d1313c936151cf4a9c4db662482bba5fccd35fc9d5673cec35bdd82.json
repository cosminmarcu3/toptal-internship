{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { actions as toolbarActions } from '../../store/toolbar';\nconst useOnFocus = _ref => {\n  let {\n    autoFocus,\n    editorRef,\n    toolbarRef,\n    wrapperRef,\n    onFocus,\n    onBlur,\n    dispatch\n  } = _ref;\n  const [isEditorFocused, setIsEditorFocused] = useState(autoFocus);\n  const handleFocus = useCallback(e => {\n    if (!editorRef.current || !toolbarRef.current || !wrapperRef) {\n      return;\n    }\n    toolbarActions.setDisabled(dispatch)(false);\n    const focusElement = e.target;\n    const isFocusElementInToolbar = toolbarRef.current.contains(focusElement);\n    if (isFocusElementInToolbar) {\n      return;\n    }\n    setIsEditorFocused(true);\n    onFocus();\n  }, [dispatch, onFocus, editorRef, toolbarRef, wrapperRef]);\n  const handleBlur = useCallback(e => {\n    if (!toolbarRef.current || !editorRef.current) {\n      return;\n    }\n    const focusElement = e.relatedTarget;\n    const isFocusElementInToolbar = toolbarRef.current.contains(focusElement);\n    const isFocusElementInEditor = editorRef.current.contains(focusElement);\n    const isFocusElementWrapper = wrapperRef.current === focusElement;\n    if (isFocusElementInToolbar || isFocusElementInEditor || isFocusElementWrapper) {\n      return;\n    }\n    toolbarActions.setDisabled(dispatch)(true);\n    toolbarActions.resetFormat(dispatch)();\n    setIsEditorFocused(false);\n    onBlur();\n  }, [dispatch, onBlur, toolbarRef, editorRef, wrapperRef]);\n  return {\n    isEditorFocused,\n    handleFocus,\n    handleBlur\n  };\n};\nexport default useOnFocus;","map":{"version":3,"names":["useCallback","useState","actions","toolbarActions","useOnFocus","_ref","autoFocus","editorRef","toolbarRef","wrapperRef","onFocus","onBlur","dispatch","isEditorFocused","setIsEditorFocused","handleFocus","e","current","setDisabled","focusElement","target","isFocusElementInToolbar","contains","handleBlur","relatedTarget","isFocusElementInEditor","isFocusElementWrapper","resetFormat"],"sources":["../../../../src/RichTextEditor/hooks/useOnFocus/useOnFocus.tsx"],"sourcesContent":[null],"mappings":"AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,OAAO,IAAIC,cAAc,QAAQ,qBAAqB;AAa/D,MAAMC,UAAU,GAAGC,IAAA,IAQP;EAAA,IARQ;IAClBC,SAAS;IACTC,SAAS;IACTC,UAAU;IACVC,UAAU;IACVC,OAAO;IACPC,MAAM;IACNC;EAAQ,CACF,GAAAP,IAAA;EACN,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAACK,SAAS,CAAC;EAEjE,MAAMS,WAAW,GAAGf,WAAW,CAC5BgB,CAAmC,IAAI;IACtC,IAAI,CAACT,SAAS,CAACU,OAAO,IAAI,CAACT,UAAU,CAACS,OAAO,IAAI,CAACR,UAAU,EAAE;MAC5D;;IAGFN,cAAc,CAACe,WAAW,CAACN,QAAQ,CAAC,CAAC,KAAK,CAAC;IAE3C,MAAMO,YAAY,GAAGH,CAAC,CAACI,MAAc;IACrC,MAAMC,uBAAuB,GAAGb,UAAU,CAACS,OAAO,CAACK,QAAQ,CAACH,YAAY,CAAC;IAEzE,IAAIE,uBAAuB,EAAE;MAC3B;;IAGFP,kBAAkB,CAAC,IAAI,CAAC;IAExBJ,OAAO,EAAE;EACX,CAAC,EACD,CAACE,QAAQ,EAAEF,OAAO,EAAEH,SAAS,EAAEC,UAAU,EAAEC,UAAU,CAAC,CACvD;EAED,MAAMc,UAAU,GAAGvB,WAAW,CAC3BgB,CAAmC,IAAI;IACtC,IAAI,CAACR,UAAU,CAACS,OAAO,IAAI,CAACV,SAAS,CAACU,OAAO,EAAE;MAC7C;;IAGF,MAAME,YAAY,GAAGH,CAAC,CAACQ,aAAqB;IAE5C,MAAMH,uBAAuB,GAAGb,UAAU,CAACS,OAAO,CAACK,QAAQ,CAACH,YAAY,CAAC;IACzE,MAAMM,sBAAsB,GAAGlB,SAAS,CAACU,OAAO,CAACK,QAAQ,CAACH,YAAY,CAAC;IACvE,MAAMO,qBAAqB,GAAGjB,UAAU,CAACQ,OAAO,KAAKE,YAAY;IAEjE,IACEE,uBAAuB,IACvBI,sBAAsB,IACtBC,qBAAqB,EACrB;MACA;;IAGFvB,cAAc,CAACe,WAAW,CAACN,QAAQ,CAAC,CAAC,IAAI,CAAC;IAE1CT,cAAc,CAACwB,WAAW,CAACf,QAAQ,CAAC,EAAE;IAEtCE,kBAAkB,CAAC,KAAK,CAAC;IAEzBH,MAAM,EAAE;EACV,CAAC,EACD,CAACC,QAAQ,EAAED,MAAM,EAAEH,UAAU,EAAED,SAAS,EAAEE,UAAU,CAAC,CACtD;EAED,OAAO;IACLI,eAAe;IACfE,WAAW;IACXQ;GACD;AACH,CAAC;AAED,eAAenB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}