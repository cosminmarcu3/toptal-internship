{"ast":null,"code":"/* eslint-disable complexity, max-statements */ // Squiggly lines makes code difficult to work with\nimport { useState, useEffect, useMemo } from 'react';\nexport const EMPTY_INPUT_VALUE = '';\nexport const INITIAL_HIGHLIGHT_INDEX = 0;\nexport const normalizeInitialIndex = _ref => {\n  let {\n    initialIndex,\n    itemCount,\n    moveAmount\n  } = _ref;\n  const outOfBounds = initialIndex < 0 || initialIndex >= itemCount;\n  if (outOfBounds) {\n    const lastIndex = itemCount - 1;\n    return moveAmount > 0 ? -1 : lastIndex + 1;\n  }\n  return initialIndex;\n};\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} initialIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @returns {number} The new index after the move.\n */\nexport const getNextWrappingIndex = (moveAmount, initialIndex, itemCount) => {\n  const lastIndex = itemCount - 1;\n  const normalizedInitialIndex = normalizeInitialIndex({\n    initialIndex,\n    itemCount,\n    moveAmount\n  });\n  const newIndex = normalizedInitialIndex + moveAmount;\n  if (newIndex < 0) {\n    return lastIndex;\n  }\n  if (newIndex > lastIndex) {\n    return 0;\n  }\n  return newIndex;\n};\nexport const useAutocomplete = _ref2 => {\n  let {\n    value,\n    options = [],\n    closeOnSelect = true,\n    onChange = () => {},\n    onKeyDown = () => {},\n    onFocus = () => {},\n    onBlur = () => {},\n    onSelect = () => {},\n    onOtherOptionSelect = () => {},\n    onResetClick = () => {},\n    getDisplayValue,\n    enableReset,\n    showOtherOption,\n    disabled = false,\n    ref\n  } = _ref2;\n  const [isOpen, setOpen] = useState(false);\n  const [highlightedIndex, setHighlightedIndex] = useState(INITIAL_HIGHLIGHT_INDEX);\n  const selectedIndex = useMemo(() => value && Array.isArray(options) ? options.findIndex(option => getDisplayValue(option) === value) : null, [getDisplayValue, options, value]);\n  useEffect(() => {\n    if (!isOpen) {\n      const newHighlightedIndex = selectedIndex && selectedIndex !== -1 ? selectedIndex : 0;\n      if (newHighlightedIndex !== highlightedIndex) {\n        setHighlightedIndex(newHighlightedIndex);\n      }\n    }\n  }, [isOpen, selectedIndex, highlightedIndex]);\n  useEffect(() => {\n    if (typeof ref === 'function' || !isOpen || !(ref === null || ref === void 0 ? void 0 : ref.current)) {\n      return;\n    }\n    if (document.activeElement !== ref.current) {\n      ref.current.focus();\n    }\n  }, [isOpen, ref]);\n  const shouldShowOtherOption = Boolean(showOtherOption) && selectedIndex === -1;\n  const handleChange = function (newValue) {\n    let isSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (newValue !== value) {\n      onChange(newValue, {\n        isSelected\n      });\n    }\n  };\n  const handleSelect = (item, event) => {\n    const displayValue = getDisplayValue(item);\n    if (item === null || displayValue === null) {\n      return;\n    }\n    onSelect(item, event);\n  };\n  const getBaseItemProps = index => ({\n    role: 'option',\n    'aria-selected': highlightedIndex === index,\n    selected: highlightedIndex === index,\n    onMouseMove: () => {\n      if (index === highlightedIndex) {\n        return;\n      }\n      setHighlightedIndex(index);\n    },\n    onMouseDown: event => {\n      // This prevents the activeElement from being changed\n      // to the item so it can remain with the current activeElement\n      // which is a more common use case.\n      event.preventDefault();\n    }\n  });\n  const getItemProps = (index, item) => Object.assign(Object.assign({}, getBaseItemProps(index)), {\n    onClick: event => {\n      if (closeOnSelect) {\n        setOpen(false);\n      }\n      handleChange(getDisplayValue(item), true);\n      handleSelect(item, event);\n    }\n  });\n  const getOtherItemProps = (index, newValue) => Object.assign(Object.assign({}, getBaseItemProps(index)), {\n    onClick: event => {\n      if (closeOnSelect) {\n        setOpen(false);\n      }\n      onOtherOptionSelect(newValue, event);\n    }\n  });\n  const handleClick = () => {\n    if (isOpen || disabled) {\n      return;\n    }\n    setOpen(true);\n  };\n  const handleBlur = event => {\n    setOpen(false);\n    onBlur(event);\n  };\n  const getInputProps = () => ({\n    'aria-autocomplete': 'list',\n    onFocus,\n    onClick: handleClick,\n    onChange: event => {\n      setOpen(true);\n      handleChange(event.target.value);\n    },\n    onKeyDown: event => {\n      var _a;\n      onKeyDown(event, value);\n      const optionsCount = (options === null || options === void 0 ? void 0 : options.length) || 0;\n      const otherOptionsCount = shouldShowOtherOption ? 1 : 0;\n      const itemsCount = optionsCount + otherOptionsCount;\n      if (event.key === 'ArrowUp') {\n        event.preventDefault();\n        setOpen(true);\n        setHighlightedIndex(getNextWrappingIndex(-1, highlightedIndex, itemsCount));\n      }\n      if (event.key === 'ArrowDown') {\n        event.preventDefault();\n        setOpen(true);\n        setHighlightedIndex(getNextWrappingIndex(1, highlightedIndex, itemsCount));\n      }\n      if (event.key === 'Backspace') {\n        if (value !== EMPTY_INPUT_VALUE) {\n          return;\n        }\n        if (closeOnSelect) {\n          setOpen(false);\n        }\n        handleChange(getDisplayValue(null));\n      }\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        if (!isOpen) {\n          setOpen(true);\n          return;\n        }\n        if (closeOnSelect) {\n          setOpen(false);\n        }\n        const findSelectedItemUsingIndex = () => highlightedIndex === null ? undefined : options === null || options === void 0 ? void 0 : options[highlightedIndex];\n        const findSelectedItemUsingValue = () => options === null || options === void 0 ? void 0 : options.find(option => option.text === value);\n        const selectedItem = (_a = findSelectedItemUsingIndex()) !== null && _a !== void 0 ? _a : findSelectedItemUsingValue();\n        if (selectedItem) {\n          handleChange(getDisplayValue(selectedItem), true);\n          handleSelect(selectedItem, event);\n        } else if (value) {\n          onOtherOptionSelect(value, event);\n        }\n      }\n      if (event.key === 'Escape') {\n        event.preventDefault();\n        setOpen(false);\n        handleChange(getDisplayValue(null));\n      }\n    },\n    onBlur: handleBlur,\n    enableReset,\n    onResetClick: event => {\n      event.stopPropagation();\n      handleChange(getDisplayValue(null));\n      onResetClick(event);\n    }\n  });\n  return {\n    getItemProps,\n    getOtherItemProps,\n    getInputProps,\n    isOpen,\n    highlightedIndex,\n    shouldShowOtherOption\n  };\n};","map":{"version":3,"names":["useState","useEffect","useMemo","EMPTY_INPUT_VALUE","INITIAL_HIGHLIGHT_INDEX","normalizeInitialIndex","_ref","initialIndex","itemCount","moveAmount","outOfBounds","lastIndex","getNextWrappingIndex","normalizedInitialIndex","newIndex","useAutocomplete","_ref2","value","options","closeOnSelect","onChange","onKeyDown","onFocus","onBlur","onSelect","onOtherOptionSelect","onResetClick","getDisplayValue","enableReset","showOtherOption","disabled","ref","isOpen","setOpen","highlightedIndex","setHighlightedIndex","selectedIndex","Array","isArray","findIndex","option","newHighlightedIndex","current","document","activeElement","focus","shouldShowOtherOption","Boolean","handleChange","newValue","isSelected","arguments","length","undefined","handleSelect","item","event","displayValue","getBaseItemProps","index","role","selected","onMouseMove","onMouseDown","preventDefault","getItemProps","Object","assign","onClick","getOtherItemProps","handleClick","handleBlur","getInputProps","target","optionsCount","otherOptionsCount","itemsCount","key","findSelectedItemUsingIndex","findSelectedItemUsingValue","find","text","selectedItem","_a","stopPropagation"],"sources":["../../../src/Autocomplete/use-autocomplete/use-autocomplete.ts"],"sourcesContent":[null],"mappings":"AAAA,gDAAgD;AAEhD,SAGEA,QAAQ,EAIRC,SAAS,EACTC,OAAO,QACF,OAAO;AAId,OAAO,MAAMC,iBAAiB,GAAG,EAAE;AACnC,OAAO,MAAMC,uBAAuB,GAAG,CAAC;AAExC,OAAO,MAAMC,qBAAqB,GAAGC,IAAA,IAQhC;EAAA,IARiC;IACpCC,YAAY;IACZC,SAAS;IACTC;EAAU,CAKX,GAAAH,IAAA;EACC,MAAMI,WAAW,GAAGH,YAAY,GAAG,CAAC,IAAIA,YAAY,IAAIC,SAAS;EAEjE,IAAIE,WAAW,EAAE;IACf,MAAMC,SAAS,GAAGH,SAAS,GAAG,CAAC;IAE/B,OAAOC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGE,SAAS,GAAG,CAAC;;EAG5C,OAAOJ,YAAY;AACrB,CAAC;AAED;;;;;;;;;AAUA,OAAO,MAAMK,oBAAoB,GAAGA,CAClCH,UAAkB,EAClBF,YAAoB,EACpBC,SAAiB,KACf;EACF,MAAMG,SAAS,GAAGH,SAAS,GAAG,CAAC;EAE/B,MAAMK,sBAAsB,GAAGR,qBAAqB,CAAC;IACnDE,YAAY;IACZC,SAAS;IACTC;GACD,CAAC;EAEF,MAAMK,QAAQ,GAAGD,sBAAsB,GAAGJ,UAAU;EAEpD,IAAIK,QAAQ,GAAG,CAAC,EAAE;IAChB,OAAOH,SAAS;;EAGlB,IAAIG,QAAQ,GAAGH,SAAS,EAAE;IACxB,OAAO,CAAC;;EAGV,OAAOG,QAAQ;AACjB,CAAC;AA4BD,OAAO,MAAMC,eAAe,GAAGC,KAAA,IAgBnB;EAAA,IAhBoB;IAC9BC,KAAK;IACLC,OAAO,GAAG,EAAE;IACZC,aAAa,GAAG,IAAI;IACpBC,QAAQ,GAAGA,CAAA,KAAK,CAAE,CAAC;IACnBC,SAAS,GAAGA,CAAA,KAAK,CAAE,CAAC;IACpBC,OAAO,GAAGA,CAAA,KAAK,CAAE,CAAC;IAClBC,MAAM,GAAGA,CAAA,KAAK,CAAE,CAAC;IACjBC,QAAQ,GAAGA,CAAA,KAAK,CAAE,CAAC;IACnBC,mBAAmB,GAAGA,CAAA,KAAK,CAAE,CAAC;IAC9BC,YAAY,GAAGA,CAAA,KAAK,CAAE,CAAC;IACvBC,eAAe;IACfC,WAAW;IACXC,eAAe;IACfC,QAAQ,GAAG,KAAK;IAChBC;EAAG,CACG,GAAAf,KAAA;EACN,MAAM,CAACgB,MAAM,EAAEC,OAAO,CAAC,GAAGjC,QAAQ,CAAU,KAAK,CAAC;EAClD,MAAM,CAACkC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CACtDI,uBAAuB,CACxB;EAED,MAAMgC,aAAa,GAAGlC,OAAO,CAC3B,MACEe,KAAK,IAAIoB,KAAK,CAACC,OAAO,CAACpB,OAAO,CAAC,GAC3BA,OAAO,CAACqB,SAAS,CAACC,MAAM,IAAIb,eAAe,CAACa,MAAM,CAAC,KAAKvB,KAAK,CAAC,GAC9D,IAAI,EACV,CAACU,eAAe,EAAET,OAAO,EAAED,KAAK,CAAC,CAClC;EAEDhB,SAAS,CAAC,MAAK;IACb,IAAI,CAAC+B,MAAM,EAAE;MACX,MAAMS,mBAAmB,GACvBL,aAAa,IAAIA,aAAa,KAAK,CAAC,CAAC,GAAGA,aAAa,GAAG,CAAC;MAE3D,IAAIK,mBAAmB,KAAKP,gBAAgB,EAAE;QAC5CC,mBAAmB,CAACM,mBAAmB,CAAC;;;EAG9C,CAAC,EAAE,CAACT,MAAM,EAAEI,aAAa,EAAEF,gBAAgB,CAAC,CAAC;EAE7CjC,SAAS,CAAC,MAAK;IACb,IAAI,OAAO8B,GAAG,KAAK,UAAU,IAAI,CAACC,MAAM,IAAI,EAACD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEW,OAAO,GAAE;MACzD;;IAEF,IAAIC,QAAQ,CAACC,aAAa,KAAKb,GAAG,CAACW,OAAO,EAAE;MAC1CX,GAAG,CAACW,OAAO,CAACG,KAAK,EAAE;;EAEvB,CAAC,EAAE,CAACb,MAAM,EAAED,GAAG,CAAC,CAAC;EAEjB,MAAMe,qBAAqB,GAAGC,OAAO,CAAClB,eAAe,CAAC,IAAIO,aAAa,KAAK,CAAC,CAAC;EAE9E,MAAMY,YAAY,GAAG,SAAAA,CAACC,QAAgB,EAAwB;IAAA,IAAtBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IACxD,IAAIF,QAAQ,KAAKhC,KAAK,EAAE;MACtBG,QAAQ,CAAC6B,QAAQ,EAAE;QAAEC;MAAU,CAAE,CAAC;;EAEtC,CAAC;EAED,MAAMI,YAAY,GAAGA,CACnBC,IAAiB,EACjBC,KAAiC,KAC/B;IACF,MAAMC,YAAY,GAAG9B,eAAe,CAAC4B,IAAI,CAAC;IAE1C,IAAIA,IAAI,KAAK,IAAI,IAAIE,YAAY,KAAK,IAAI,EAAE;MAC1C;;IAGFjC,QAAQ,CAAC+B,IAAI,EAAEC,KAAK,CAAC;EACvB,CAAC;EAED,MAAME,gBAAgB,GAAIC,KAAa,KAAM;IAC3CC,IAAI,EAAE,QAAQ;IACd,eAAe,EAAE1B,gBAAgB,KAAKyB,KAAK;IAC3CE,QAAQ,EAAE3B,gBAAgB,KAAKyB,KAAK;IACpCG,WAAW,EAAEA,CAAA,KAAK;MAChB,IAAIH,KAAK,KAAKzB,gBAAgB,EAAE;QAC9B;;MAGFC,mBAAmB,CAACwB,KAAK,CAAC;IAC5B,CAAC;IACDI,WAAW,EAAGP,KAAuB,IAAI;MACvC;MACA;MACA;MACAA,KAAK,CAACQ,cAAc,EAAE;IACxB;GACD,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAACN,KAAa,EAAEJ,IAAU,KAAKW,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAC/CT,gBAAgB,CAACC,KAAK,CAAC;IAC1BS,OAAO,EAAGZ,KAAiB,IAAI;MAC7B,IAAIrC,aAAa,EAAE;QACjBc,OAAO,CAAC,KAAK,CAAC;;MAEhBe,YAAY,CAACrB,eAAe,CAAC4B,IAAI,CAAC,EAAE,IAAI,CAAC;MACzCD,YAAY,CAACC,IAAI,EAAEC,KAAK,CAAC;IAC3B;EAAC,EACD;EAEF,MAAMa,iBAAiB,GAAGA,CAACV,KAAa,EAAEV,QAAgB,KAAKiB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAC1DT,gBAAgB,CAACC,KAAK,CAAC;IAC1BS,OAAO,EAAGZ,KAAiB,IAAI;MAC7B,IAAIrC,aAAa,EAAE;QACjBc,OAAO,CAAC,KAAK,CAAC;;MAEhBR,mBAAmB,CAACwB,QAAQ,EAAEO,KAAK,CAAC;IACtC;EAAC,EACD;EAEF,MAAMc,WAAW,GAAGA,CAAA,KAAK;IACvB,IAAItC,MAAM,IAAIF,QAAQ,EAAE;MACtB;;IAGFG,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMsC,UAAU,GAAwCf,KAAK,IAAG;IAC9DvB,OAAO,CAAC,KAAK,CAAC;IACdV,MAAM,CAACiC,KAAK,CAAC;EACf,CAAC;EAED,MAAMgB,aAAa,GAAGA,CAAA,MAAO;IAC3B,mBAAmB,EAAE,MAAmD;IACxElD,OAAO;IACP8C,OAAO,EAAEE,WAAW;IACpBlD,QAAQ,EACNoC,KAEC,IACC;MACFvB,OAAO,CAAC,IAAI,CAAC;MACbe,YAAY,CAACQ,KAAK,CAACiB,MAAM,CAACxD,KAAK,CAAC;IAClC,CAAC;IAEDI,SAAS,EAAGmC,KAAsC,IAAI;;MACpDnC,SAAS,CAACmC,KAAK,EAAEvC,KAAK,CAAC;MAEvB,MAAMyD,YAAY,GAAG,CAAAxD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEkC,MAAM,KAAI,CAAC;MACzC,MAAMuB,iBAAiB,GAAG7B,qBAAqB,GAAG,CAAC,GAAG,CAAC;MACvD,MAAM8B,UAAU,GAAGF,YAAY,GAAGC,iBAAiB;MAEnD,IAAInB,KAAK,CAACqB,GAAG,KAAK,SAAS,EAAE;QAC3BrB,KAAK,CAACQ,cAAc,EAAE;QAEtB/B,OAAO,CAAC,IAAI,CAAC;QACbE,mBAAmB,CACjBvB,oBAAoB,CAAC,CAAC,CAAC,EAAEsB,gBAAgB,EAAE0C,UAAU,CAAC,CACvD;;MAGH,IAAIpB,KAAK,CAACqB,GAAG,KAAK,WAAW,EAAE;QAC7BrB,KAAK,CAACQ,cAAc,EAAE;QAEtB/B,OAAO,CAAC,IAAI,CAAC;QACbE,mBAAmB,CACjBvB,oBAAoB,CAAC,CAAC,EAAEsB,gBAAgB,EAAE0C,UAAU,CAAC,CACtD;;MAGH,IAAIpB,KAAK,CAACqB,GAAG,KAAK,WAAW,EAAE;QAC7B,IAAI5D,KAAK,KAAKd,iBAAiB,EAAE;UAC/B;;QAGF,IAAIgB,aAAa,EAAE;UACjBc,OAAO,CAAC,KAAK,CAAC;;QAEhBe,YAAY,CAACrB,eAAe,CAAC,IAAI,CAAC,CAAC;;MAGrC,IAAI6B,KAAK,CAACqB,GAAG,KAAK,OAAO,EAAE;QACzBrB,KAAK,CAACQ,cAAc,EAAE;QAEtB,IAAI,CAAChC,MAAM,EAAE;UACXC,OAAO,CAAC,IAAI,CAAC;UAEb;;QAGF,IAAId,aAAa,EAAE;UACjBc,OAAO,CAAC,KAAK,CAAC;;QAGhB,MAAM6C,0BAA0B,GAAGA,CAAA,KACjC5C,gBAAgB,KAAK,IAAI,GAAGmB,SAAS,GAAGnC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGgB,gBAAgB,CAAC;QAErE,MAAM6C,0BAA0B,GAAGA,CAAA,KACjC7D,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE8D,IAAI,CAACxC,MAAM,IAAIA,MAAM,CAACyC,IAAI,KAAKhE,KAAK,CAAC;QAEhD,MAAMiE,YAAY,GAChB,CAAAC,EAAA,GAAAL,0BAA0B,EAAE,cAAAK,EAAA,cAAAA,EAAA,GAAIJ,0BAA0B,EAAE;QAE9D,IAAIG,YAAY,EAAE;UAChBlC,YAAY,CAACrB,eAAe,CAACuD,YAAY,CAAC,EAAE,IAAI,CAAC;UACjD5B,YAAY,CAAC4B,YAAY,EAAE1B,KAAK,CAAC;SAClC,MAAM,IAAIvC,KAAK,EAAE;UAChBQ,mBAAmB,CAACR,KAAK,EAAEuC,KAAK,CAAC;;;MAIrC,IAAIA,KAAK,CAACqB,GAAG,KAAK,QAAQ,EAAE;QAC1BrB,KAAK,CAACQ,cAAc,EAAE;QAEtB/B,OAAO,CAAC,KAAK,CAAC;QACde,YAAY,CAACrB,eAAe,CAAC,IAAI,CAAC,CAAC;;IAEvC,CAAC;IAEDJ,MAAM,EAAEgD,UAAU;IAClB3C,WAAW;IACXF,YAAY,EACV8B,KAAwD,IACtD;MACFA,KAAK,CAAC4B,eAAe,EAAE;MACvBpC,YAAY,CAACrB,eAAe,CAAC,IAAI,CAAC,CAAC;MACnCD,YAAY,CAAC8B,KAAK,CAAC;IACrB;GACD,CAAC;EAEF,OAAO;IACLS,YAAY;IACZI,iBAAiB;IACjBG,aAAa;IACbxC,MAAM;IACNE,gBAAgB;IAChBY;GACD;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}