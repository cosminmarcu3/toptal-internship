{"ast":null,"code":"import { useIsomorphicLayoutEffect } from '../hooks';\nconst PROXIMA_NOVA_FONT = 'https://use.typekit.net/rlr4crj.css';\n// Feature check for rel='preload' as soon it's not supported by FF and IE\n// https://www.w3.org/TR/preload/#link-type-preload\nconst DOMTokenListSupports = function (tokenList, token) {\n  if (!tokenList || !tokenList.supports) {\n    return;\n  }\n  try {\n    return tokenList.supports(token);\n  } catch (e) {\n    if (e instanceof TypeError) {\n      window.console.log(\"The DOMTokenList doesn't have a supported tokens list\");\n    } else {\n      window.console.error(\"That shouldn't have happened\");\n    }\n  }\n};\n// After the file is loaded to apply it\n// we have to change rel to 'stylesheet'\n// https://alligator.io/html/preload-prefetch\nconst applyLoadedFont = e => {\n  const target = e.target;\n  // this handler needs to be removed from the link tag\n  // because of the issue with the infinite loop of\n  // loading fonts in IE11 and Edge\n  target.removeEventListener('load', applyLoadedFont);\n  target.rel = 'stylesheet';\n};\nconst findFontsLoader = () => {\n  const links = Array.from(document.getElementsByTagName('link'));\n  return links.find(link => link.as === 'style' && link.href === PROXIMA_NOVA_FONT && (link.rel === 'stylesheet' || link.rel === 'preload'));\n};\nconst FontsLoader = () => {\n  useIsomorphicLayoutEffect(() => {\n    const existingFontLoader = findFontsLoader();\n    if (!existingFontLoader) {\n      const linkSupportsPreload = DOMTokenListSupports(document.createElement('link').relList, 'preload');\n      const link = document.createElement('link');\n      link.as = 'style';\n      link.href = PROXIMA_NOVA_FONT;\n      link.rel = linkSupportsPreload ? 'preload' : 'stylesheet';\n      link.addEventListener('load', applyLoadedFont);\n      document.body.appendChild(link);\n    }\n  }, []);\n  return null;\n};\nexport default FontsLoader;","map":{"version":3,"names":["useIsomorphicLayoutEffect","PROXIMA_NOVA_FONT","DOMTokenListSupports","tokenList","token","supports","e","TypeError","window","console","log","error","applyLoadedFont","target","removeEventListener","rel","findFontsLoader","links","Array","from","document","getElementsByTagName","find","link","as","href","FontsLoader","existingFontLoader","linkSupportsPreload","createElement","relList","addEventListener","body","appendChild"],"sources":["../../src/Picasso/FontsLoader.tsx"],"sourcesContent":[null],"mappings":"AAAA,SAASA,yBAAyB,QAAQ,UAAU;AAEpD,MAAMC,iBAAiB,GAAG,qCAAqC;AAE/D;AACA;AACA,MAAMC,oBAAoB,GAAG,SAAAA,CAAUC,SAAuB,EAAEC,KAAa;EAC3E,IAAI,CAACD,SAAS,IAAI,CAACA,SAAS,CAACE,QAAQ,EAAE;IACrC;;EAEF,IAAI;IACF,OAAOF,SAAS,CAACE,QAAQ,CAACD,KAAK,CAAC;GACjC,CAAC,OAAOE,CAAC,EAAE;IACV,IAAIA,CAAC,YAAYC,SAAS,EAAE;MAC1BC,MAAM,CAACC,OAAO,CAACC,GAAG,CAChB,uDAAuD,CACxD;KACF,MAAM;MACLF,MAAM,CAACC,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAC;;;AAG1D,CAAC;AAED;AACA;AACA;AACA,MAAMC,eAAe,GAAIN,CAAQ,IAAI;EACnC,MAAMO,MAAM,GAAGP,CAAC,CAACO,MAAyB;EAE1C;EACA;EACA;EACAA,MAAM,CAACC,mBAAmB,CAAC,MAAM,EAAEF,eAAe,CAAC;EACnDC,MAAM,CAACE,GAAG,GAAG,YAAY;AAC3B,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAK;EAC3B,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC;EAE/D,OAAOJ,KAAK,CAACK,IAAI,CACfC,IAAI,IACFA,IAAI,CAACC,EAAE,KAAK,OAAO,IACnBD,IAAI,CAACE,IAAI,KAAKxB,iBAAiB,KAC9BsB,IAAI,CAACR,GAAG,KAAK,YAAY,IAAIQ,IAAI,CAACR,GAAG,KAAK,SAAS,CAAC,CACxD;AACH,CAAC;AAED,MAAMW,WAAW,GAAGA,CAAA,KAAK;EACvB1B,yBAAyB,CAAC,MAAK;IAC7B,MAAM2B,kBAAkB,GAAGX,eAAe,EAAE;IAE5C,IAAI,CAACW,kBAAkB,EAAE;MACvB,MAAMC,mBAAmB,GAAG1B,oBAAoB,CAC9CkB,QAAQ,CAACS,aAAa,CAAC,MAAM,CAAC,CAACC,OAAO,EACtC,SAAS,CACV;MAED,MAAMP,IAAI,GAAGH,QAAQ,CAACS,aAAa,CAAC,MAAM,CAAC;MAE3CN,IAAI,CAACC,EAAE,GAAG,OAAO;MACjBD,IAAI,CAACE,IAAI,GAAGxB,iBAAiB;MAC7BsB,IAAI,CAACR,GAAG,GAAGa,mBAAmB,GAAG,SAAS,GAAG,YAAY;MACzDL,IAAI,CAACQ,gBAAgB,CAAC,MAAM,EAAEnB,eAAe,CAAC;MAE9CQ,QAAQ,CAACY,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;;EAEnC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb,CAAC;AAED,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}