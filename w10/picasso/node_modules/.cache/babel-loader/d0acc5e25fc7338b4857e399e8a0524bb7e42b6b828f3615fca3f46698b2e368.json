{"ast":null,"code":"var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js');\nfunction buildFormatLocale() {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var meridiemUppercase = ['AM', 'PM'];\n  var meridiemLowercase = ['am', 'pm'];\n  var meridiemFull = ['a.m.', 'p.m.'];\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()];\n    },\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()];\n    },\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()];\n    },\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()];\n    },\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()];\n    },\n    // AM, PM\n    'A': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemUppercase[1] : meridiemUppercase[0];\n    },\n    // am, pm\n    'a': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemLowercase[1] : meridiemLowercase[0];\n    },\n    // a.m., p.m.\n    'aa': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemFull[1] : meridiemFull[0];\n    }\n  };\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W'];\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date));\n    };\n  });\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  };\n}\nfunction ordinal(number) {\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n}\nmodule.exports = buildFormatLocale;","map":{"version":3,"names":["buildFormattingTokensRegExp","require","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","MMM","date","getMonth","MMMM","dd","getDay","ddd","dddd","A","getHours","a","aa","ordinalFormatters","forEach","formatterToken","ordinal","formattingTokensRegExp","number","rem100","module","exports"],"sources":["/home/marcucosmin3/bootcamp/w10/picasso/node_modules/simple-react-calendar/node_modules/date-fns/locale/en/build_format_locale/index.js"],"sourcesContent":["var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}