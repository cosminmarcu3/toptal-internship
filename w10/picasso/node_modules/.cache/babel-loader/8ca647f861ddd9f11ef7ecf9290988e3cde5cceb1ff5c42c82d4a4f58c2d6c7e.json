{"ast":null,"code":"/* eslint-disable max-lines */\n/* eslint-disable complexity, max-statements, max-lines-per-function */ // Squiggly lines makes code difficult to work with\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { forwardRef, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport capitalize from '@material-ui/core/utils/capitalize';\nimport cx from 'classnames';\nimport { isForwardRef } from '@toptal/picasso-shared';\nimport Input from '../Input';\nimport { MenuCompound as Menu } from '../MenuCompound';\nimport Container from '../Container';\nimport Loader from '../Loader';\nimport SelectOptions from '../SelectOptions';\nimport Popper from '../Popper';\nimport InputAdornment from '../InputAdornment';\nimport PoweredByGoogle from './PoweredByGoogle';\nimport NoOptionsMenuItem from './NoOptionsMenuItem';\nimport OtherOptionMenuItem from './OtherOptionMenuItem';\nimport { useAutocomplete, EMPTY_INPUT_VALUE } from './use-autocomplete';\nimport styles from './styles';\nimport unsafeErrorLog from '../utils/unsafe-error-log';\nimport { usePropDeprecationWarning } from '../utils/use-deprecation-warnings';\nconst useStyles = makeStyles(styles, {\n  name: 'PicassoAutocomplete'\n});\nconst getItemText = item => item && item.text || EMPTY_INPUT_VALUE;\nexport const Autocomplete = forwardRef(function Autocomplete(props, customRef) {\n  const {\n      autoComplete,\n      className,\n      enableAutofill,\n      enableReset,\n      endAdornment,\n      error,\n      status,\n      getDisplayValue = getItemText,\n      getKey: customGetKey,\n      icon,\n      inputComponent,\n      loading,\n      menuWidth,\n      name,\n      noOptionsText = 'No options',\n      closeOnSelect,\n      onBlur,\n      onChange,\n      onFocus,\n      onKeyDown,\n      onOtherOptionSelect,\n      onResetClick,\n      onSelect,\n      options,\n      otherOptionText = 'Other option: ',\n      placeholder,\n      popperContainer,\n      popperOptions,\n      poweredByGoogle,\n      renderOption,\n      renderOtherOption,\n      showOtherOption,\n      style,\n      testIds,\n      value,\n      width = 'auto',\n      disabled = false\n    } = props,\n    rest = __rest(props, [\"autoComplete\", \"className\", \"enableAutofill\", \"enableReset\", \"endAdornment\", \"error\", \"status\", \"getDisplayValue\", \"getKey\", \"icon\", \"inputComponent\", \"loading\", \"menuWidth\", \"name\", \"noOptionsText\", \"closeOnSelect\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onOtherOptionSelect\", \"onResetClick\", \"onSelect\", \"options\", \"otherOptionText\", \"placeholder\", \"popperContainer\", \"popperOptions\", \"poweredByGoogle\", \"renderOption\", \"renderOtherOption\", \"showOtherOption\", \"style\", \"testIds\", \"value\", \"width\", \"disabled\"]);\n  const inputRef = useRef(null);\n  let ref = customRef || inputRef;\n  if (inputComponent && !isForwardRef(inputComponent)) {\n    ref = undefined;\n    unsafeErrorLog('You provided `inputComponent` prop to Autocomplete without using React.forwardRef wrapper. This is not supported and may cause unexpected behavior. Consider wrapping your input component with React.forwardRef.');\n  }\n  usePropDeprecationWarning({\n    props,\n    name: 'error',\n    componentName: 'Autocomplete',\n    description: 'Use the `status` prop instead. `error` is deprecated and will be removed in the next major release.'\n  });\n  const classes = useStyles();\n  const getKey = item => {\n    if (customGetKey) {\n      return customGetKey(item);\n    }\n    const displayValue = getDisplayValue(item);\n    if (!displayValue) {\n      unsafeErrorLog('Autocomplete expects you to provide key prop value with getKey or Item.value!');\n    }\n    return displayValue;\n  };\n  const {\n    highlightedIndex,\n    isOpen,\n    shouldShowOtherOption,\n    getItemProps,\n    getOtherItemProps,\n    getInputProps\n  } = useAutocomplete({\n    value,\n    disabled,\n    options,\n    closeOnSelect,\n    getDisplayValue,\n    onSelect,\n    onOtherOptionSelect,\n    onResetClick,\n    onChange,\n    onKeyDown,\n    onFocus,\n    onBlur,\n    enableReset,\n    showOtherOption,\n    ref\n  });\n  const optionsLength = options ? options.length : 0;\n  const optionsMenu = options && React.createElement(SelectOptions, {\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.scrollMenu,\n    selectedIndex: highlightedIndex,\n    fixedFooter: optionsLength > 0 && poweredByGoogle && React.createElement(PoweredByGoogle, {\n      classes: classes\n    })\n  }, options === null || options === void 0 ? void 0 : options.map((option, index) => React.createElement(Menu.Item, Object.assign({\n    \"data-testid\": (testIds === null || testIds === void 0 ? void 0 : testIds.menuItem) ? `${testIds === null || testIds === void 0 ? void 0 : testIds.menuItem}-${index}` : undefined,\n    key: getKey(option)\n  }, getItemProps(index, option), {\n    titleCase: false,\n    description: option.description,\n    className: classes.option\n  }), renderOption ? renderOption(option, index) : getDisplayValue(option))), shouldShowOtherOption && React.createElement(OtherOptionMenuItem, Object.assign({\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.otherOption,\n    value: value,\n    classes: classes,\n    renderOtherOption: renderOtherOption,\n    otherOptionText: otherOptionText\n  }, getOtherItemProps(optionsLength, value))), !optionsLength && !shouldShowOtherOption && noOptionsText && React.createElement(NoOptionsMenuItem, {\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.noOptions\n  }, noOptionsText));\n  const InputComponent = inputComponent || Input;\n  const loadingComponent = React.createElement(InputAdornment, {\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.loadingAdornment,\n    position: 'end',\n    disablePointerEvents: true\n  }, React.createElement(Loader, {\n    size: 'small'\n  }));\n  const inputWrapperRef = useRef(null);\n  const inputProps = getInputProps();\n  return React.createElement(\"div\", {\n    className: cx(classes.root, className, classes[`root${capitalize(width)}`]),\n    style: style,\n    role: 'combobox',\n    \"aria-expanded\": isOpen,\n    \"aria-haspopup\": 'listbox'\n  }, React.createElement(Container, {\n    flex: true,\n    ref: inputWrapperRef,\n    onClick: inputProps.onClick\n  }, !enableAutofill && name && React.createElement(\"input\", {\n    type: 'hidden',\n    value: value,\n    name: name,\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.disableAutofillInput\n  }), React.createElement(InputComponent, Object.assign({}, rest, inputProps, {\n    status: error ? 'error' : status,\n    icon: icon,\n    disabled: disabled,\n    defaultValue: undefined,\n    value: value,\n    ref: ref,\n    placeholder: placeholder,\n    inputProps: rest.inputProps,\n    endAdornment: loading ? loadingComponent : endAdornment,\n    width: width,\n    name: enableAutofill ? name : undefined,\n    autoComplete: enableAutofill ? autoComplete : autoComplete || 'off',\n    testIds: testIds,\n    \"data-testid\": testIds === null || testIds === void 0 ? void 0 : testIds.input\n  }))), React.createElement(\"div\", {\n    role: 'listbox'\n  }, isOpen && inputWrapperRef.current && optionsMenu && React.createElement(Popper, {\n    autoWidth: true,\n    width: menuWidth,\n    placement: 'bottom-start',\n    open: isOpen && !loading,\n    anchorEl: inputWrapperRef.current,\n    container: popperContainer,\n    popperOptions: popperOptions\n  }, optionsMenu)));\n});\nAutocomplete.defaultProps = {\n  enableAutofill: false,\n  getDisplayValue: getItemText,\n  loading: false,\n  noOptionsText: 'No options',\n  onChange: () => {},\n  onKeyDown: () => {},\n  onFocus: () => {},\n  onBlur: () => {},\n  onOtherOptionSelect: () => {},\n  onResetClick: () => {},\n  onSelect: () => {},\n  options: [],\n  otherOptionText: 'Other option: ',\n  showOtherOption: false,\n  width: 'auto',\n  enableReset: true,\n  poweredByGoogle: false,\n  disabled: false,\n  status: 'default'\n};\nAutocomplete.displayName = 'Autocomplete';\nexport default Autocomplete;","map":{"version":3,"names":["React","forwardRef","useRef","makeStyles","capitalize","cx","isForwardRef","Input","MenuCompound","Menu","Container","Loader","SelectOptions","Popper","InputAdornment","PoweredByGoogle","NoOptionsMenuItem","OtherOptionMenuItem","useAutocomplete","EMPTY_INPUT_VALUE","styles","unsafeErrorLog","usePropDeprecationWarning","useStyles","name","getItemText","item","text","Autocomplete","props","customRef","autoComplete","className","enableAutofill","enableReset","endAdornment","error","status","getDisplayValue","getKey","customGetKey","icon","inputComponent","loading","menuWidth","noOptionsText","closeOnSelect","onBlur","onChange","onFocus","onKeyDown","onOtherOptionSelect","onResetClick","onSelect","options","otherOptionText","placeholder","popperContainer","popperOptions","poweredByGoogle","renderOption","renderOtherOption","showOtherOption","style","testIds","value","width","disabled","rest","__rest","inputRef","ref","undefined","componentName","description","classes","displayValue","highlightedIndex","isOpen","shouldShowOtherOption","getItemProps","getOtherItemProps","getInputProps","optionsLength","length","optionsMenu","createElement","scrollMenu","selectedIndex","fixedFooter","map","option","index","Item","Object","assign","menuItem","key","titleCase","otherOption","noOptions","InputComponent","loadingComponent","loadingAdornment","position","disablePointerEvents","size","inputWrapperRef","inputProps","root","role","flex","onClick","type","disableAutofillInput","defaultValue","input","current","autoWidth","placement","open","anchorEl","container","defaultProps","displayName"],"sources":["../../src/Autocomplete/Autocomplete.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}