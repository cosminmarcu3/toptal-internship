{"ast":null,"code":"import { useCallback } from 'react';\nimport { normalizeArrowKey, focusRef } from '../../../utils';\nconst useSelectKeyDownHandler = _ref => {\n  let {\n    selectProps: {\n      onKeyDown,\n      native\n    },\n    searchInputRef,\n    selectState: {\n      isOpen,\n      showSearch\n    },\n    handleArrowsKeyDown,\n    handleEnterOrSpaceKeyDown,\n    handleEscapeKeyDown\n  } = _ref;\n  return (\n    // eslint-disable-next-line complexity\n    useCallback(\n    // eslint-disable-next-line complexity\n    event => {\n      if (native) {\n        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n        // for the native select we don't want to prevent defaults for the event\n        // and don't need any manual operations for keydown event\n        return;\n      }\n      const key = normalizeArrowKey(event);\n      const isCharacterKey = key.length === 1;\n      if (key === 'ArrowUp' || key === 'ArrowDown') {\n        handleArrowsKeyDown(key, event);\n      } else if (key === 'Enter' || key === ' ') {\n        handleEnterOrSpaceKeyDown(event);\n      } else if (key === 'Escape') {\n        handleEscapeKeyDown(event);\n      } else if (key === 'Tab' && isOpen && showSearch) {\n        event.preventDefault();\n        focusRef(searchInputRef);\n      } else if (isCharacterKey || key === 'Backspace') {\n        focusRef(searchInputRef);\n      }\n      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n    }, [native, onKeyDown, searchInputRef, isOpen, showSearch, handleArrowsKeyDown, handleEnterOrSpaceKeyDown, handleEscapeKeyDown])\n  );\n};\nexport default useSelectKeyDownHandler;","map":{"version":3,"names":["useCallback","normalizeArrowKey","focusRef","useSelectKeyDownHandler","_ref","selectProps","onKeyDown","native","searchInputRef","selectState","isOpen","showSearch","handleArrowsKeyDown","handleEnterOrSpaceKeyDown","handleEscapeKeyDown","event","key","isCharacterKey","length","preventDefault"],"sources":["../../../../../src/SelectBase/hooks/use-select-props/use-select-keydown-handler/use-select-keydown-handler.ts"],"sourcesContent":[null],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,OAAO;AAGlD,SAASC,iBAAiB,EAAEC,QAAQ,QAAQ,gBAAgB;AAK5D,MAAMC,uBAAuB,GAAGC,IAAA;EAAA,IAG9B;IACAC,WAAW,EAAE;MAAEC,SAAS;MAAEC;IAAM,CAAE;IAClCC,cAAc;IACdC,WAAW,EAAE;MAAEC,MAAM;MAAEC;IAAU,CAAE;IACnCC,mBAAmB;IACnBC,yBAAyB;IACzBC;EAAmB,CAKpB,GAAAV,IAAA;EAAA;IACC;IACAJ,WAAW;IACT;IACCe,KAAsC,IAAI;MACzC,IAAIR,MAAM,EAAE;QACVD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGS,KAAK,CAAC;QAElB;QACA;QACA;;MAGF,MAAMC,GAAG,GAAGf,iBAAiB,CAACc,KAAK,CAAC;MACpC,MAAME,cAAc,GAAGD,GAAG,CAACE,MAAM,KAAK,CAAC;MAEvC,IAAIF,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,WAAW,EAAE;QAC5CJ,mBAAmB,CAACI,GAAG,EAAED,KAAK,CAAC;OAChC,MAAM,IAAIC,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,GAAG,EAAE;QACzCH,yBAAyB,CAACE,KAAK,CAAC;OACjC,MAAM,IAAIC,GAAG,KAAK,QAAQ,EAAE;QAC3BF,mBAAmB,CAACC,KAAK,CAAC;OAC3B,MAAM,IAAIC,GAAG,KAAK,KAAK,IAAIN,MAAM,IAAIC,UAAU,EAAE;QAChDI,KAAK,CAACI,cAAc,EAAE;QACtBjB,QAAQ,CAACM,cAAc,CAAC;OACzB,MAAM,IAAIS,cAAc,IAAID,GAAG,KAAK,WAAW,EAAE;QAChDd,QAAQ,CAACM,cAAc,CAAC;;MAG1BF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGS,KAAK,CAAC;IACpB,CAAC,EACD,CACER,MAAM,EACND,SAAS,EACTE,cAAc,EACdE,MAAM,EACNC,UAAU,EACVC,mBAAmB,EACnBC,yBAAyB,EACzBC,mBAAmB,CACpB;EACF;AAAA;AAEH,eAAeX,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}