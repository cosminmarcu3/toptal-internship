{"ast":null,"code":"/**\n * When we write block format and enter new empty line, we have unformated text format.\n * We need to send this information to the state\n */\nconst handleNewLineAfterBlock = _ref => {\n  let {\n    quill,\n    onSelectionChange,\n    latestDelta\n  } = _ref;\n  var _a, _b;\n  const latestAttributes = (_b = (_a = latestDelta.ops) === null || _a === void 0 ? void 0 : _a[latestDelta.ops.length - 1]) === null || _b === void 0 ? void 0 : _b.attributes;\n  const isHeaderFormatRemoved = (latestAttributes === null || latestAttributes === void 0 ? void 0 : latestAttributes.header) === null;\n  const isListFormatRemoved = (latestAttributes === null || latestAttributes === void 0 ? void 0 : latestAttributes.list) === null;\n  if (isHeaderFormatRemoved || isListFormatRemoved) {\n    const format = quill.getFormat();\n    onSelectionChange(Object.assign(Object.assign({}, format), {\n      header: undefined,\n      list: undefined\n    }));\n  }\n};\nconst isDeleteOperationOfSelection = delta => {\n  var _a;\n  const delOperation = (_a = delta.ops) === null || _a === void 0 ? void 0 : _a[0].delete;\n  return delOperation && delOperation > 1;\n};\nconst getEditorChangeHandler = (quill, onSelectionChange) => {\n  const handler = function (name) {\n    if (name === 'text-change') {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      const [latestDelta,, source] = args;\n      const isFromApi = source === 'api';\n      const isFromUser = source === 'user';\n      if (isFromApi) {\n        // this event is triggered when format of block element is changed\n        // for example from p > h3 | h3 > ol\n        onSelectionChange(quill.getFormat());\n      } else if (isFromUser) {\n        handleNewLineAfterBlock({\n          latestDelta,\n          quill,\n          onSelectionChange\n        });\n        if (isDeleteOperationOfSelection(latestDelta)) {\n          onSelectionChange(quill.getFormat());\n        }\n      }\n    }\n  };\n  return handler;\n};\nexport default getEditorChangeHandler;","map":{"version":3,"names":["handleNewLineAfterBlock","_ref","quill","onSelectionChange","latestDelta","latestAttributes","_b","_a","ops","length","attributes","isHeaderFormatRemoved","header","isListFormatRemoved","list","format","getFormat","Object","assign","undefined","isDeleteOperationOfSelection","delta","delOperation","delete","getEditorChangeHandler","handler","name","_len","arguments","args","Array","_key","source","isFromApi","isFromUser"],"sources":["../../../../src/QuillEditor/utils/getEditorChangeHandler/getEditorChangeHandler.tsx"],"sourcesContent":[null],"mappings":"AAOA;;;;AAIA,MAAMA,uBAAuB,GAAGC,IAAA,IAQ3B;EAAA,IAR4B;IAC/BC,KAAK;IACLC,iBAAiB;IACjBC;EAAW,CAKZ,GAAAH,IAAA;;EACC,MAAMI,gBAAgB,GACpB,CAAAC,EAAA,IAAAC,EAAA,GAAAH,WAAW,CAACI,GAAG,cAAAD,EAAA,uBAAAA,EAAA,CAAGH,WAAW,CAACI,GAAG,CAACC,MAAM,GAAG,CAAC,CAAC,cAAAH,EAAA,uBAAAA,EAAA,CAAEI,UAAU;EAE3D,MAAMC,qBAAqB,GAAG,CAAAN,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEO,MAAM,MAAK,IAAI;EAC/D,MAAMC,mBAAmB,GAAG,CAAAR,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAES,IAAI,MAAK,IAAI;EAE3D,IAAIH,qBAAqB,IAAIE,mBAAmB,EAAE;IAChD,MAAME,MAAM,GAAGb,KAAK,CAACc,SAAS,EAAgB;IAE9Cb,iBAAiB,CAAAc,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMH,MAAM;MAAEH,MAAM,EAAEO,SAAS;MAAEL,IAAI,EAAEK;IAAS,GAAG;;AAExE,CAAC;AAED,MAAMC,4BAA4B,GAAIC,KAAkB,IAAI;;EAC1D,MAAMC,YAAY,GAAG,CAAAf,EAAA,GAAAc,KAAK,CAACb,GAAG,cAAAD,EAAA,uBAAAA,EAAA,CAAG,CAAC,EAAEgB,MAAM;EAE1C,OAAOD,YAAY,IAAIA,YAAY,GAAG,CAAC;AACzC,CAAC;AAED,MAAME,sBAAsB,GAAGA,CAC7BtB,KAAY,EACZC,iBAA+C,KAC7C;EACF,MAAMsB,OAAO,GAAG,SAAAA,CACdC,IAAwC,EAEtC;IACF,IAAIA,IAAI,KAAK,aAAa,EAAE;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAnB,MAAA,EAFzBoB,IAA0C,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAA1CF,IAA0C,CAAAE,IAAA,QAAAH,SAAA,CAAAG,IAAA;MAAA;MAG3C,MAAM,CAAC3B,WAAW,GAAI4B,MAAM,CAAC,GAAGH,IAAsB;MAEtD,MAAMI,SAAS,GAAGD,MAAM,KAAK,KAAK;MAClC,MAAME,UAAU,GAAGF,MAAM,KAAK,MAAM;MAEpC,IAAIC,SAAS,EAAE;QACb;QACA;QACA9B,iBAAiB,CAACD,KAAK,CAACc,SAAS,EAAgB,CAAC;OACnD,MAAM,IAAIkB,UAAU,EAAE;QACrBlC,uBAAuB,CAAC;UAAEI,WAAW;UAAEF,KAAK;UAAEC;QAAiB,CAAE,CAAC;QAElE,IAAIiB,4BAA4B,CAAChB,WAAW,CAAC,EAAE;UAC7CD,iBAAiB,CAACD,KAAK,CAACc,SAAS,EAAgB,CAAC;;;;EAI1D,CAAC;EAED,OAAOS,OAAO;AAChB,CAAC;AAED,eAAeD,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}