{"ast":null,"code":"/* eslint-disable complexity */\nimport { useState, useEffect, useCallback } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { isBrowser } from '../../utils';\nclass BreakpointProvider {\n  constructor() {\n    this.breakpoints = {\n      values: {\n        xs: 0,\n        sm: 576,\n        md: 768,\n        lg: 992,\n        xl: 1920\n      }\n    };\n    const {\n      sm,\n      md,\n      lg\n    } = this.breakpoints.values;\n    this.mediaQueries = {\n      small: `(max-width: ${sm}px)`,\n      medium: `(min-width: ${sm}px) and (max-width: ${md}px)`,\n      large: `(min-width: ${md}px) and (max-width: ${lg}px)`,\n      'extra-large': `(min-width: ${lg}px)`\n    };\n  }\n  disableMobileBreakpoints() {\n    this.breakpoints.values.xs = 768;\n    this.breakpoints.values.sm = 768;\n    this.mediaQueries.small = '';\n    this.mediaQueries.medium = '';\n  }\n}\nexport const PicassoBreakpoints = new BreakpointProvider();\nexport const breakpointsList = {\n  small: PicassoBreakpoints.breakpoints.values.sm,\n  medium: PicassoBreakpoints.breakpoints.values.md,\n  large: PicassoBreakpoints.breakpoints.values.lg,\n  'extra-large': PicassoBreakpoints.breakpoints.values.xl\n};\nexport const screens = function () {\n  for (var _len = arguments.length, sizes = new Array(_len), _key = 0; _key < _len; _key++) {\n    sizes[_key] = arguments[_key];\n  }\n  const validSizes = sizes.filter(size => PicassoBreakpoints.mediaQueries[size]);\n  if (validSizes.length === 0) {\n    return '';\n  }\n  const mediaQueries = validSizes.map(size => PicassoBreakpoints.mediaQueries[size]).join(', ');\n  return `@media ${mediaQueries}`;\n};\nconst screenSizeToBreakpointKey = size => {\n  /**\n   * Gets a screen size nickname that corresponds to the given screen size.\n   *\n   * For the list of breakpoint names and pixel-values we use in designs, check\n   * https://picasso.toptal.net/?path=/story/utils-folder--breakpoints\n   *\n   * @param {number} size Screen size\n   */\n  const {\n    sm,\n    md,\n    lg\n  } = PicassoBreakpoints.breakpoints.values;\n  if (size < sm) {\n    return 'small';\n  } else if (size >= sm && size < md) {\n    return 'medium';\n  } else if (size >= md && size < lg) {\n    return 'large';\n  }\n  return 'extra-large';\n};\nexport const isScreenSize = (size, currentSize) => {\n  const sizeToUse = currentSize || window.innerWidth;\n  const foundBreakpoint = screenSizeToBreakpointKey(sizeToUse);\n  return size === foundBreakpoint;\n};\nexport const useScreenSize = () => {\n  const [size, setSize] = useState(isBrowser() ? window.innerWidth : 0);\n  const updateSize = () => setSize(window.innerWidth);\n  useEffect(() => {\n    window.addEventListener('resize', updateSize);\n    return () => {\n      window.removeEventListener('resize', updateSize);\n    };\n  }, []);\n  return size;\n};\nexport const useBreakpoint = sizes => {\n  const mediaQueryString = screens(...[].concat(sizes));\n  const mediaQuery = useMediaQuery(mediaQueryString, {\n    noSsr: true\n  });\n  if (!mediaQueryString) {\n    return false;\n  }\n  return mediaQuery;\n};\n/**\n * Returns a function that picks a value from a {screenSize=>anyValue} object map.\n *\n * The function returned accepts 2 arguments:\n * 1. An object mapping values to screen size nicknames, e.g.\n *   {small: 'secondary', large: 'positive'}\n * 2. A default value to use if no keys match in the object\n *\n * The function returns a value from the first argument that corresponds to the current\n * screen size, or the default value, if no corresponding key found.\n *\n * The returned function is memoized per screen size name.\n *\n * @example <caption>Varying both `variant` prop and button text with using the hook</caption>\n * const screens = useScreens()\n * <Button\n *   variant={screens(\n *     {\n *       small: 'secondary',\n *       large: 'positive'\n *     },\n *     'primary'\n *   )}\n * >\n * {screens(\n *   {\n *     small: 'small (secondary)',\n *     large: 'large (positive)'\n *   },\n *   'default (primary)'\n * )}\n * </Button>\n */\nexport const useScreens = () => {\n  // Get current screen size in pixels, e.g. 800\n  const currentSize = useScreenSize();\n  // Convert the retrieved screen size in pixels (e.g. 800)\n  // to its corresponding screen size name (e.g. 'large')\n  const screenKey = screenSizeToBreakpointKey(currentSize);\n  // For every screenKey value, memoize the instance of a function\n  // that picks a property from an object by screen name,\n  // and return this memoized version of the function.\n  return useCallback(function (valuesByScreen) {\n    let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    if (screenKey in valuesByScreen) {\n      return valuesByScreen[screenKey];\n    }\n    return defaultValue;\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [screenKey]);\n};\nexport default PicassoBreakpoints.breakpoints;","map":{"version":3,"names":["useState","useEffect","useCallback","useMediaQuery","isBrowser","BreakpointProvider","constructor","breakpoints","values","xs","sm","md","lg","xl","mediaQueries","small","medium","large","disableMobileBreakpoints","PicassoBreakpoints","breakpointsList","screens","_len","arguments","length","sizes","Array","_key","validSizes","filter","size","map","join","screenSizeToBreakpointKey","isScreenSize","currentSize","sizeToUse","window","innerWidth","foundBreakpoint","useScreenSize","setSize","updateSize","addEventListener","removeEventListener","useBreakpoint","mediaQueryString","concat","mediaQuery","noSsr","useScreens","screenKey","valuesByScreen","defaultValue","undefined"],"sources":["../../../src/Picasso/config/breakpoints.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}