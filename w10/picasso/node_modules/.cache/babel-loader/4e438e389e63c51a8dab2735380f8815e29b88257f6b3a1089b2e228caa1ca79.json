{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = utcToZonedTime;\nvar _index = _interopRequireDefault(require(\"../_lib/tzParseTimezone/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * @name utcToZonedTime\n * @category Time Zone Helpers\n * @summary Get a date/time representing local time in a given time zone from the UTC date\n *\n * @description\n * Returns a date instance with values representing the local time in the time zone\n * specified of the UTC time from the date provided. In other words, when the new date\n * is formatted it will show the equivalent hours in the target time zone regardless\n * of the current system time zone.\n *\n * @param {Date|String|Number} date - the date with the relevant UTC time\n * @param {String} timeZone - the time zone to get local time for, can be an offset or IANA time zone\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the equivalent time in the time zone\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am UTC is 6am in New York (-04:00)\n * const result = utcToZonedTime('2014-06-25T10:00:00.000Z', 'America/New_York')\n * //=> Jun 25 2014 06:00:00\n */\nfunction utcToZonedTime(dirtyDate, timeZone, options) {\n  var date = (0, _index2.default)(dirtyDate, options);\n  var offsetMilliseconds = (0, _index.default)(timeZone, date, true);\n  var d = new Date(date.getTime() - offsetMilliseconds);\n  var resultDate = new Date(0);\n  resultDate.setFullYear(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());\n  resultDate.setHours(d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());\n  return resultDate;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","utcToZonedTime","_index","_interopRequireDefault","require","_index2","obj","__esModule","dirtyDate","timeZone","options","date","offsetMilliseconds","d","Date","getTime","resultDate","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","module"],"sources":["/home/marcucosmin3/bootcamp/w10/picasso/node_modules/date-fns-tz/utcToZonedTime/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = utcToZonedTime;\n\nvar _index = _interopRequireDefault(require(\"../_lib/tzParseTimezone/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name utcToZonedTime\n * @category Time Zone Helpers\n * @summary Get a date/time representing local time in a given time zone from the UTC date\n *\n * @description\n * Returns a date instance with values representing the local time in the time zone\n * specified of the UTC time from the date provided. In other words, when the new date\n * is formatted it will show the equivalent hours in the target time zone regardless\n * of the current system time zone.\n *\n * @param {Date|String|Number} date - the date with the relevant UTC time\n * @param {String} timeZone - the time zone to get local time for, can be an offset or IANA time zone\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the equivalent time in the time zone\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am UTC is 6am in New York (-04:00)\n * const result = utcToZonedTime('2014-06-25T10:00:00.000Z', 'America/New_York')\n * //=> Jun 25 2014 06:00:00\n */\nfunction utcToZonedTime(dirtyDate, timeZone, options) {\n  var date = (0, _index2.default)(dirtyDate, options);\n  var offsetMilliseconds = (0, _index.default)(timeZone, date, true);\n  var d = new Date(date.getTime() - offsetMilliseconds);\n  var resultDate = new Date(0);\n  resultDate.setFullYear(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());\n  resultDate.setHours(d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());\n  return resultDate;\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,cAAc;AAEhC,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,kCAAkC,CAAC,CAAC;AAEhF,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAEnE,SAASD,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEN,OAAO,EAAEM;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,cAAcA,CAACO,SAAS,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACpD,IAAIC,IAAI,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACL,OAAO,EAAEQ,SAAS,EAAEE,OAAO,CAAC;EACnD,IAAIE,kBAAkB,GAAG,CAAC,CAAC,EAAEV,MAAM,CAACF,OAAO,EAAES,QAAQ,EAAEE,IAAI,EAAE,IAAI,CAAC;EAClE,IAAIE,CAAC,GAAG,IAAIC,IAAI,CAACH,IAAI,CAACI,OAAO,EAAE,GAAGH,kBAAkB,CAAC;EACrD,IAAII,UAAU,GAAG,IAAIF,IAAI,CAAC,CAAC,CAAC;EAC5BE,UAAU,CAACC,WAAW,CAACJ,CAAC,CAACK,cAAc,EAAE,EAAEL,CAAC,CAACM,WAAW,EAAE,EAAEN,CAAC,CAACO,UAAU,EAAE,CAAC;EAC3EJ,UAAU,CAACK,QAAQ,CAACR,CAAC,CAACS,WAAW,EAAE,EAAET,CAAC,CAACU,aAAa,EAAE,EAAEV,CAAC,CAACW,aAAa,EAAE,EAAEX,CAAC,CAACY,kBAAkB,EAAE,CAAC;EAClG,OAAOT,UAAU;AACnB;AAEAU,MAAM,CAAC5B,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}