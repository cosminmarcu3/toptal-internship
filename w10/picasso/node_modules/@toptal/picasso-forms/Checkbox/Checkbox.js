var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useContext } from 'react';
import { Checkbox as PicassoCheckbox } from '@toptal/picasso';
import { Field, } from 'react-final-form';
import PicassoField from '../Field';
import { CheckboxGroupContext } from '../CheckboxGroup';
import { useFormConfig } from '../FormConfig';
export const Checkbox = (_a) => {
    var { name, value, required, label, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    defaultValue } = _a, restProps = __rest(_a, ["name", "value", "required", "label", "defaultValue"]);
    const formConfig = useFormConfig();
    const groupName = useContext(CheckboxGroupContext);
    const isCheckboxInGroup = Boolean(groupName);
    if (isCheckboxInGroup) {
        return (
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        React.createElement(Field, { type: 'checkbox', name: name || groupName, value: value }, (_a) => {
            var 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            _b = _a.input, 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            { value: inputValue, type } = _b, restInput = __rest(_b, ["value", "type"]);
            return React.createElement(PicassoCheckbox, Object.assign({}, restProps, restInput, { label: label }));
        }));
    }
    const showAsterisk = required && formConfig.requiredVariant === 'asterisk';
    const requiredDecoration = showAsterisk ? 'asterisk' : undefined;
    return (React.createElement(PicassoField, Object.assign({ type: 'checkbox', required: required }, restProps, { 
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        name: name }), (input) => (React.createElement(PicassoCheckbox, Object.assign({}, input, { label: label, titleCase: restProps.titleCase, requiredDecoration: requiredDecoration })))));
};
Checkbox.displayName = 'Checkbox';
export default Checkbox;
//# sourceMappingURL=Checkbox.js.map