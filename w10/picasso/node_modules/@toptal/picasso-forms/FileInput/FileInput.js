import React from 'react';
import { FileInput as PicassoFileInput } from '@toptal/picasso';
import PicassoField from '../Field';
import FieldLabel from '../FieldLabel';
export const FileInput = (props) => {
    const handleChange = (event, value = [], finalFormOnChange) => {
        if (!event.target || !event.target.files || !event.target.files.length) {
            return null;
        }
        const newFiles = Array.from(event.target.files).map(file => ({
            file,
            uploading: false,
        }));
        finalFormOnChange([...value, ...newFiles]);
        // reset input
        event.target.value = '';
    };
    const handleRemove = (fileIndex, value = [], finalFormOnChange) => {
        const updatedFiles = value.filter((_, index) => index !== fileIndex);
        finalFormOnChange(updatedFiles);
    };
    return (React.createElement(PicassoField, Object.assign({}, props, { label: props.label ? (React.createElement(FieldLabel, { name: props.name, required: props.required, label: props.label, titleCase: props.titleCase })) : null }), inputProps => (React.createElement(PicassoFileInput, Object.assign({}, inputProps, { onChange: (event) => {
            handleChange(event, inputProps.value, inputProps.onChange);
        }, onRemove: (_, index) => {
            handleRemove(index, inputProps.value, inputProps.onChange);
        } })))));
};
FileInput.defaultProps = {};
FileInput.displayName = 'FileInput';
export default FileInput;
//# sourceMappingURL=FileInput.js.map