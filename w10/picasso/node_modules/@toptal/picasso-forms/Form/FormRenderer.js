var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useCallback } from 'react';
import { Form, Container } from '@toptal/picasso';
export const FormRenderer = (props) => {
    const { onSubmit, setActiveFieldTouched, children, validateOnBlur } = props, rest = __rest(props, ["onSubmit", "setActiveFieldTouched", "children", "validateOnBlur"]);
    const handleNativeSubmit = useCallback((event) => {
        if (validateOnBlur) {
            // force validation for active field
            setActiveFieldTouched();
        }
        onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(event);
    }, [onSubmit, setActiveFieldTouched, validateOnBlur]);
    return (React.createElement(Container, null,
        React.createElement(Form, Object.assign({}, rest, { onSubmit: handleNativeSubmit }), children)));
};
FormRenderer.defaultProps = {};
FormRenderer.displayName = 'FormRenderer';
export default FormRenderer;
//# sourceMappingURL=FormRenderer.js.map