var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/* eslint-disable react/jsx-props-no-spreading */
import React from 'react';
import { Checkbox as PicassoCheckbox, } from '@toptal/picasso';
import PicassoField from '../Field';
import FieldLabel from '../FieldLabel';
import CheckboxGroupContext from './CheckboxGroupContext';
export const CheckboxGroup = (props) => {
    const { children, titleCase, label, initialValue } = props, rest = __rest(props, ["children", "titleCase", "label", "initialValue"]);
    return (React.createElement(CheckboxGroupContext.Provider, { value: props.name },
        React.createElement(PicassoField, Object.assign({}, rest, { initialValue: initialValue, type: 'checkbox', label: label ? (React.createElement(FieldLabel, { name: props.name, required: props.required, label: label, titleCase: titleCase })) : null }), () => (React.createElement(PicassoCheckbox.Group, Object.assign({}, rest), children)))));
};
CheckboxGroup.displayName = 'CheckboxGroup';
export default CheckboxGroup;
//# sourceMappingURL=CheckboxGroup.js.map