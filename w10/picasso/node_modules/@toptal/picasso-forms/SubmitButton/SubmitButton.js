var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Button } from '@toptal/picasso';
import { useFormState } from 'react-final-form';
export const SubmitButton = (_a) => {
    var { buttonType, variant } = _a, restOfProps = __rest(_a, ["buttonType", "variant"]);
    /* eslint-disable react/jsx-props-no-spreading */
    const { submitting } = useFormState({ subscription: { submitting: true } });
    const submitButtonProps = {
        type: 'submit',
        loading: submitting,
    };
    const resultComponentProps = Object.assign(Object.assign({}, submitButtonProps), restOfProps);
    switch (buttonType) {
        case 'circular':
            return (React.createElement(Button.Circular, Object.assign({}, resultComponentProps, { variant: variant })));
        case 'action':
            return React.createElement(Button.Action, Object.assign({}, resultComponentProps));
        default:
            return (React.createElement(Button, Object.assign({}, resultComponentProps, { variant: variant })));
    }
};
SubmitButton.defaultProps = {
    buttonType: 'rectangular',
};
SubmitButton.displayName = 'SubmitButton';
export default SubmitButton;
//# sourceMappingURL=SubmitButton.js.map