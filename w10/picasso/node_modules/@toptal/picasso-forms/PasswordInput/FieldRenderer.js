var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useCallback } from 'react';
import { PasswordInput as PicassoPasswordInput, } from '@toptal/picasso';
const FieldRenderer = (props) => {
    const { onFocus, onBlur, onShowContent, onHideContent } = props, rest = __rest(props, ["onFocus", "onBlur", "onShowContent", "onHideContent"]);
    const handleFocus = useCallback((event) => {
        onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);
        onShowContent();
    }, [onFocus, onShowContent]);
    const handleBlur = useCallback((event) => {
        onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);
        onHideContent();
    }, [onBlur, onHideContent]);
    return (React.createElement(PicassoPasswordInput, Object.assign({}, rest, { onFocus: handleFocus, onBlur: handleBlur })));
};
export default FieldRenderer;
//# sourceMappingURL=FieldRenderer.js.map