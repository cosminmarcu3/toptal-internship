var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { TimePicker as PicassoTimePicker, } from '@toptal/picasso';
import InputField from '../InputField';
import FieldLabel from '../FieldLabel';
export const TimePicker = (props) => {
    const { label, titleCase } = props, rest = __rest(props, ["label", "titleCase"]);
    return (React.createElement(InputField, Object.assign({}, rest, { label: label ? (React.createElement(FieldLabel, { name: props.name, required: props.required, label: label, titleCase: titleCase })) : null }), (inputProps) => {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const { enableReset, onResetClick } = inputProps, rest = __rest(inputProps, ["enableReset", "onResetClick"]);
        return React.createElement(PicassoTimePicker, Object.assign({}, rest));
    }));
};
TimePicker.displayName = 'TimePicker';
export default TimePicker;
//# sourceMappingURL=TimePicker.js.map