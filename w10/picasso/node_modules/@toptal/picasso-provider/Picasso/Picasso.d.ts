import { ThemeOptions } from '@material-ui/core/styles';
import React, { ReactNode } from 'react';
import { EnvironmentType, TextLabelProps } from '../types';
import { PicassoGlobalStylesProviderProps } from './PicassoGlobalStylesProvider';
export interface PicassoProps extends TextLabelProps {
    children?: ReactNode;
    /** Whether to load fonts file to the page */
    loadFonts?: boolean;
    /** Whether to specify favicons in the head */
    loadFavicon?: boolean;
    /** current environment */
    environment?: EnvironmentType<'test' | 'temploy'>;
    /** Whether to apply Picasso CSS reset */
    reset?: boolean;
    /** Sets a minimum width of the page */
    responsive?: boolean;
    /** Whether to load viewport fix or not */
    fixViewport?: boolean;
    /** Notification DOMNode for createPortal */
    notificationContainer?: HTMLElement;
    /** Component that is used to render root node  */
    RootComponent?: PicassoGlobalStylesProviderProps['RootComponent'];
    theme?: ThemeOptions;
    /** Disables usage of `<HelmetProvider>` component from `react-helmet-async` package */
    disableHelmet?: boolean;
    /** Disables transitions for components like Loader, to make testing easier */
    disableTransitions?: boolean;
    /** Disables unique prefix for styles class names */
    disableClassNamePrefix?: boolean;
    /**
     * By default, the styles are injected last in the <head> element of the page.
     * As a result, they gain more specificity than any other style sheet.
     * If you want to override Picasso's styles, set this prop.
     */
    injectFirst?: boolean;
}
declare const Picasso: {
    ({ loadFonts, loadFavicon, reset, responsive, environment, children, fixViewport, notificationContainer, RootComponent, titleCase, theme, disableHelmet, disableTransitions, disableClassNamePrefix, injectFirst, }: PicassoProps): JSX.Element;
    defaultProps: {
        environment: string;
        loadFonts: boolean;
        loadFavicon: boolean;
        responsive: boolean;
        reset: boolean;
        fixViewport: boolean;
        injectFirst: undefined;
        RootComponent: React.ForwardRefExoticComponent<import("./PicassoRootNode").PicassoRootNodeProps & React.RefAttributes<HTMLDivElement>>;
    };
};
export default Picasso;
