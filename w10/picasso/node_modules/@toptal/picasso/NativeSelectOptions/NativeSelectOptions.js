import React from 'react';
import { isOptionsType, } from '../SelectBase';
const renderOptions = ({ options, getItemProps, renderOption, selection, }) => {
    return (React.createElement(React.Fragment, null, options.map((option, index) => {
        var _a;
        return (React.createElement("option", Object.assign({ key: ((_a = option === null || option === void 0 ? void 0 : option.key) !== null && _a !== void 0 ? _a : option.value).toString(), value: option.value.toString(), "aria-selected": 
            // aria-selected should be undefined for non-selectable options
            option.disabled ? undefined : selection.isOptionSelected(option), disabled: option.disabled }, getItemProps(option, index)), renderOption(option, index)));
    })));
};
const NativeSelectOptions = ({ options, renderOption, getItemProps, selection, }) => {
    if (isOptionsType(options)) {
        return renderOptions({ options, getItemProps, renderOption, selection });
    }
    return (React.createElement(React.Fragment, null, Object.keys(options).map(group => (React.createElement("optgroup", { key: group, label: group }, renderOptions({
        options: options[group],
        getItemProps,
        renderOption,
        selection,
    }))))));
};
NativeSelectOptions.displayName = 'NativeSelectOptions';
export default NativeSelectOptions;
//# sourceMappingURL=NativeSelectOptions.js.map