import React, { ReactNode } from 'react';
import { BaseProps } from '@toptal/picasso-shared';
import { CalendarProps, MonthHeaderProps, DayProps } from './types';
export declare type DateOrDateRangeType = Date | DateRangeType;
export declare type DateRangeType = [Date, Date];
export type { DayProps };
export interface Props extends BaseProps, Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onBlur'> {
    onChange: (value: DateOrDateRangeType) => void;
    onBlur?: (event: React.FocusEvent<HTMLDivElement>) => void;
    renderDay?: (args: DayProps) => ReactNode;
    minDate?: Date;
    maxDate?: Date;
    range?: boolean;
    value?: DateOrDateRangeType;
    activeMonth?: Date;
    disabledIntervals?: {
        start: Date;
        end: Date;
    }[];
    indicatedIntervals?: {
        start: Date;
        end: Date;
    }[];
    weekStartsOn?: number;
    renderMonthHeader?: (props: MonthHeaderProps) => JSX.Element | null;
    renderRoot?: (props: CalendarProps) => JSX.Element;
    hasFooter?: boolean;
}
export declare const Calendar: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export default Calendar;
