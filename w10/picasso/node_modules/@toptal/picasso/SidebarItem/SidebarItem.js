import React, { forwardRef, memo } from 'react';
import noop from '../utils/noop';
import { SidebarItemBasic } from './SidebarItemBasic';
import { SidebarItemCompact } from './SidebarItemCompact';
import { SidebarItemAccordion } from './SidebarItemAccordion';
export const getSelectedSubMenu = (sidebarItem) => {
    const menu = sidebarItem.props.menu;
    if (!menu) {
        return null;
    }
    const subMenuItems = React.Children.toArray(menu.props.children);
    return subMenuItems.find(menuChild => menuChild.props.selected);
};
export const SidebarItem = memo(forwardRef(function SidebarItem(props, ref) {
    const { compact, collapsible, menu } = props;
    const hasMenu = menu != null;
    let SidebarItemImpl = SidebarItemBasic;
    if (hasMenu && compact) {
        SidebarItemImpl = SidebarItemCompact;
    }
    else if (hasMenu && collapsible) {
        SidebarItemImpl = SidebarItemAccordion;
    }
    return React.createElement(SidebarItemImpl, Object.assign({}, props, { ref: ref }));
}));
SidebarItem.defaultProps = {
    collapsible: false,
    onClick: noop,
    selected: false,
    expand: noop,
    variant: 'light',
    compact: false,
};
SidebarItem.displayName = 'SidebarItem';
export default SidebarItem;
//# sourceMappingURL=SidebarItem.js.map