import React, { createContext, useContext, useState } from 'react';
const Context = createContext({
    isIndicatorVisible: false,
    handleDecoratedItemMount: () => { },
    handleDecoratedItemUnmount: () => { },
});
export const ParentItemContextProvider = ({ children, isOpened }) => {
    const [countItemsWithBadgeOrTag, updateCount] = useState(0);
    const isIndicatorVisible = countItemsWithBadgeOrTag > 0 && !isOpened;
    const handleDecoratedItemMount = () => updateCount(count => count + 1);
    const handleDecoratedItemUnmount = () => updateCount(count => count - 1);
    const value = {
        isIndicatorVisible,
        handleDecoratedItemMount,
        handleDecoratedItemUnmount,
    };
    return React.createElement(Context.Provider, { value: value }, children);
};
export const useParentItemContext = () => useContext(Context);
//# sourceMappingURL=ParentItemContextProvider.js.map