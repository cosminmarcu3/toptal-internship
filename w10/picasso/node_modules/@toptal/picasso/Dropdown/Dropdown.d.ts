import React, { HTMLAttributes, ReactNode } from 'react';
import { PopperPlacementType } from '@material-ui/core/Popper';
import { PopperOptions } from 'popper.js';
import { SpacingType, StandardProps } from '@toptal/picasso-shared';
import { StyleProps } from './styles';
declare type ContentOverflowType = 'scroll' | 'visible';
export interface Props extends StandardProps, HTMLAttributes<HTMLDivElement>, StyleProps {
    /** Anchor element that opens content on click */
    children: ReactNode;
    /** Content element that opens when anchor is clicked */
    content: ReactNode;
    /** Offset of content element relative to anchor element */
    offset?: {
        top?: SpacingType;
        bottom?: SpacingType;
        left?: SpacingType;
        right?: SpacingType;
    };
    /** The placement of the content element relative to anchor element. */
    placement?: PopperPlacementType;
    /** Disable auto focus of first item in list or item */
    disableAutoFocus?: boolean;
    /** Disable close on generic close events */
    disableAutoClose?: boolean;
    /** Disable the portal behavior. The children stay within it's parent DOM hierarchy. */
    disablePortal?: boolean;
    popperOptions?: PopperOptions;
    popperProps?: HTMLAttributes<HTMLDivElement>;
    /** Always keep Popper's children in the DOM */
    keepMounted?: boolean;
    /** Callback invoked when component is opened */
    onOpen?: () => void;
    /** Callback invoked when component is closed */
    onClose?: () => void;
    /** Sets the desired behavior for an element's overflow */
    contentOverflow?: ContentOverflowType;
    popperContainer?: HTMLElement;
}
export interface ContextProps {
    close: () => void;
}
export declare const useDropdownContext: () => ContextProps;
export declare const Dropdown: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export default Dropdown;
