import { useRef, useState } from 'react';
import isPointerDevice from '../utils/is-pointer-device';
const getTooltipOpenState = ({ isOpen, isOpenExternally, isControlled, isTouchDevice, followCursor, }) => {
    // We don't support `followCursor` prop when this prop is enabled on the touch device. Same as in `@material-ui@5`
    if (isTouchDevice && followCursor) {
        return false;
    }
    if (isControlled) {
        return isOpenExternally;
    }
    return isOpen;
};
export const useTooltipState = ({ externalOpen, followCursor, }) => {
    const isTouchDevice = !isPointerDevice();
    const isTooltipControlled = typeof externalOpen !== 'undefined';
    const [isOpen, setIsOpen] = useState(isTooltipControlled ? externalOpen : false);
    const targetHoveredRef = useRef(false);
    const openTooltip = () => {
        setIsOpen(true);
    };
    const closeTooltip = () => {
        setIsOpen(false);
    };
    return {
        isOpen: getTooltipOpenState({
            isOpen,
            isOpenExternally: !!externalOpen,
            isControlled: isTooltipControlled,
            isTouchDevice,
            followCursor,
        }),
        isControlled: isTooltipControlled,
        isTouchDevice,
        targetHoveredRef,
        openTooltip,
        closeTooltip,
    };
};
//# sourceMappingURL=useTooltipState.js.map