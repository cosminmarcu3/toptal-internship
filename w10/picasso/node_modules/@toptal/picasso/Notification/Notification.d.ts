import React, { ReactNode, MouseEvent, ReactElement, HTMLAttributes } from 'react';
import { StandardProps } from '@toptal/picasso-shared';
export declare type VariantType = 'red' | 'green' | 'white' | 'yellow';
export interface PrivateProps extends StandardProps, HTMLAttributes<HTMLDivElement> {
    /** Main content of the Notification */
    children: ReactNode;
    /** Callback invoked when close is clicked */
    onClose?: (event: MouseEvent<HTMLButtonElement>) => void;
    /** Style variant of Notification */
    variant?: VariantType;
    /** Add <Icon /> before Notification content  */
    icon?: ReactElement;
    /** Enable elevated appearance for Notification */
    elevated?: boolean;
    testIds?: {
        closeButton?: string;
        notification?: string;
        content?: string;
    };
}
/** `elevated` and `icon` props are omitted from the public declaration, since they're only for internal use */
export declare type PublicProps = Omit<PrivateProps, 'elevated' | 'icon'>;
export declare const Notification: React.ForwardRefExoticComponent<PrivateProps & React.RefAttributes<HTMLElement>>;
export default Notification;
