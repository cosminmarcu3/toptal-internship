import React, { ReactElement, ReactNode } from 'react';
import { BaseProps, SizeType } from '@toptal/picasso-shared';
export interface Props extends BaseProps {
    /** Show the control initially as checked */
    checked?: boolean;
    /** Show button in the active state (left mouse button down) */
    active?: boolean;
    /** Disables button */
    disabled?: boolean;
    /** Set focused style for the button */
    focused?: boolean;
    /** Set hovered style for the button */
    hovered?: boolean;
    /** A button can have different sizes */
    size?: SizeType<'small' | 'medium' | 'large'>;
    /** HTML Value of Button component */
    value?: string;
    /** Callback invoked when value is changed */
    onChange?: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;
    /** Button text */
    children: ReactNode;
    /** The id of the input element */
    id?: string;
    /** A control element. For instance, it can be be a Radio or a Checkbox */
    control: ReactElement;
}
declare const ButtonControlLabel: {
    ({ children, size, className, checked, onChange, id, control, value, disabled, ...props }: Props): JSX.Element;
    defaultProps: {
        size: string;
    };
};
export default ButtonControlLabel;
