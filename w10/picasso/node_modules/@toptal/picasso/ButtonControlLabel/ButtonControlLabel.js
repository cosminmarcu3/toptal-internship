var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { makeStyles } from '@material-ui/core';
import cx from 'classnames';
import Container from '../Container';
import Button from '../Button';
import styles from './styles';
// Using { index: -1 } to inject CSS link to the bottom of the head
// in order to prevent Button's styles to override ButtonAction's ones
// Related Jira issue: https://toptal-core.atlassian.net/browse/FX-1520
const useStyles = makeStyles(styles, {
    name: 'PicassoButtonControlLabel',
    index: -1,
});
const ButtonControlLabel = (_a) => {
    var { children, size = 'medium', className, checked, onChange, id, control, value, disabled } = _a, props = __rest(_a, ["children", "size", "className", "checked", "onChange", "id", "control", "value", "disabled"]);
    const classes = useStyles();
    const contentLeftSpacing = size === 'large' ? 1 : 0.5;
    return (React.createElement(Button, Object.assign({}, props, { className: cx(className, classes.root, classes[size]), variant: 'secondary', size: size, as: 'label', htmlFor: id, disabled: disabled }),
        React.cloneElement(control, { id, checked, value, onChange, disabled }),
        React.createElement(Container, { className: classes.content, left: contentLeftSpacing }, children)));
};
ButtonControlLabel.defaultProps = {
    size: 'medium',
};
export default ButtonControlLabel;
//# sourceMappingURL=ButtonControlLabel.js.map