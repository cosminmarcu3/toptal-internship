import React from 'react';
import { BaseProps } from '@toptal/picasso-shared';
import { FileUpload, DropzoneOptions } from './types';
export interface Props extends BaseProps {
    /**
     * Set accepted file types. See https://github.com/okonet/attr-accept for more information.
     */
    accept?: DropzoneOptions['accept'];
    /** Enable/disable the dropzone */
    disabled?: boolean;
    /** Maximum file size (in bytes) */
    maxSize?: number;
    /** Minimum file size (in bytes) */
    minSize?: number;
    /** Allow drag 'n' drop (or selection from the file dialog) of multiple files */
    multiple?: boolean;
    /** The text of the hint */
    hint?: string;
    /** Hide/Show the content text */
    hideContentText?: boolean;
    /** Callback invoked when a file item is removed */
    onRemove?: (fileName: string, index: number) => void;
    /** Callback for when the drop event occurs */
    onDropAccepted?: DropzoneOptions['onDropAccepted'];
    /** callback for when the drop event occurs */
    onDropRejected?: DropzoneOptions['onDropRejected'];
    /** callback for when the drop event occurs */
    onDrop?: DropzoneOptions['onDrop'];
    /** Custom validation function */
    validator?: DropzoneOptions['validator'];
    /** Value uses the File interface. */
    value?: FileUpload[];
    /**
     * @deprecated **Use value[n].error instead.**
     * Provide reasons why files couldn't be dropped into dropzone
     */
    errorMessages?: string[];
    focused?: boolean;
    hovered?: boolean;
}
export declare const Dropzone: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLInputElement>>;
export default Dropzone;
