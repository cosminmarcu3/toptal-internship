import actionTypes from './actionTypes';
import initialState from './initialState';
const reducer = (state = initialState, action) => {
    switch (action.type) {
        case actionTypes.bold:
            return Object.assign(Object.assign({}, state), { format: Object.assign(Object.assign({}, state.format), { bold: action.payload }) });
        case actionTypes.italic:
            return Object.assign(Object.assign({}, state), { format: Object.assign(Object.assign({}, state.format), { italic: action.payload }) });
        case actionTypes.header:
            return Object.assign(Object.assign({}, state), { format: Object.assign(Object.assign({}, state.format), { header: action.payload }) });
        case actionTypes.list:
            return Object.assign(Object.assign({}, state), { format: Object.assign(Object.assign({}, state.format), { list: action.payload }) });
        case actionTypes.link:
            return Object.assign(Object.assign({}, state), { format: Object.assign(Object.assign({}, state.format), { link: action.payload }) });
        case actionTypes.disabled:
            return Object.assign(Object.assign({}, state), { disabled: action.payload });
        case actionTypes.resetFormat:
            return Object.assign(Object.assign({}, state), { format: initialState.format });
        default:
            return state;
    }
};
export default reducer;
//# sourceMappingURL=reducer.js.map