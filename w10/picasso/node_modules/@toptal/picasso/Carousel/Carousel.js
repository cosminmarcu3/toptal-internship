import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import cx from 'classnames';
import 'glider-js/glider.css';
import styles from './styles';
import Container from '../Container';
import CarouselGradient from '../CarouselGradient';
import useCarousel from './hooks/useCarousel';
import CarouselNavigation from '../CarouselNavigation';
const useStyles = makeStyles(styles, { name: 'Carousel' });
const testIdsDefault = {};
export const Carousel = ({ autoplay = false, autoplayDelay = 3000, className, children, hasArrows = false, hasDots = false, onSlide, rewind = false, slidesToScroll = 1, slidesToShow = 1, testIds = testIdsDefault, }) => {
    const { isLastPage, getContainerProps, getCarouselProps, getDotsProps, getNextProps, getPrevProps, } = useCarousel({
        autoplay,
        autoplayDelay,
        onSlide,
        rewind,
        slidesToScroll,
        slidesToShow,
        slidesCount: React.Children.count(children),
        hasDots,
    });
    const classes = useStyles();
    return (React.createElement(Container, Object.assign({ className: cx(classes.root, className), "data-testid": testIds.root }, getContainerProps()),
        React.createElement(Container, { className: classes.container },
            React.createElement(Container, Object.assign({}, getCarouselProps(), { "data-testid": testIds.carousel }), children),
            !Number.isInteger(slidesToShow) && (React.createElement(CarouselGradient, { slidesToShow: slidesToShow, isLastPage: isLastPage }))),
        React.createElement(CarouselNavigation, { hasArrows: hasArrows, hasDots: hasDots, getDotsProps: getDotsProps, getPrevProps: getPrevProps, getNextProps: getNextProps, testIds: testIds })));
};
Carousel.defaultProps = {
    hasArrows: false,
    hasDots: false,
    rewind: false,
    autoplay: false,
    autoplayDelay: 3000,
    slidesToScroll: 1,
    slidesToShow: 1,
};
Carousel.displayName = 'Carousel';
export default Carousel;
//# sourceMappingURL=Carousel.js.map