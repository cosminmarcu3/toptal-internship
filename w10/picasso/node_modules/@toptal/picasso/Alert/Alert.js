import React, { forwardRef } from 'react';
import { makeStyles } from '@material-ui/core';
import Container from '../Container';
import Typography from '../Typography';
import ButtonCircular from '../ButtonCircular';
import { CloseMinor16, Exclamation16, Done16, Info16 } from '../Icon';
import styles from './styles';
const renderAlertCloseButton = ({ onClose }) => (React.createElement(Container, { left: 'small' },
    React.createElement(ButtonCircular, { variant: 'transparent', onClick: onClose, title: 'Close alert', icon: React.createElement(CloseMinor16, { color: 'dark-grey' }) })));
const icons = {
    red: React.createElement(Exclamation16, { color: 'red' }),
    green: React.createElement(Done16, { color: 'dark-green' }),
    blue: React.createElement(Info16, { color: 'light-blue' }),
    yellow: React.createElement(Exclamation16, { color: 'yellow' }),
};
const useStyles = makeStyles(styles, {
    name: 'PicassoAlert',
});
export const Alert = forwardRef(function Alert(props, ref) {
    const classes = useStyles();
    const { children, variant, onClose, className } = props;
    const icon = icons[variant];
    return (React.createElement(Container, { flex: true, justifyContent: 'space-between', rounded: true, padded: 'small', role: 'alert', ref: ref, variant: variant, className: className },
        React.createElement(Container, { inline: true, flex: true, ref: ref, className: classes.root },
            React.createElement(Container, { right: 'small', flex: true, alignItems: 'center', className: classes.iconWrapper }, icon),
            React.createElement(Typography, { size: 'medium', as: 'div', weight: 'regular', color: 'black' }, children)),
        onClose && renderAlertCloseButton({ onClose })));
});
Alert.defaultProps = {
    variant: 'yellow',
};
Alert.displayName = 'Alert';
export default Alert;
//# sourceMappingURL=Alert.js.map