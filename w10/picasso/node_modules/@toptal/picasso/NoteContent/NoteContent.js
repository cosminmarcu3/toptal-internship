var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import Typography from '../Typography';
export const NoteContent = forwardRef(function NoteContent(_a, ref) {
    var { children } = _a, rest = __rest(_a, ["children"]);
    return (React.createElement(Typography, Object.assign({ ref: ref, as: 'p', size: 'medium', color: 'black' }, rest), children));
});
NoteContent.defaultProps = {};
NoteContent.displayName = 'NoteContent';
export default NoteContent;
//# sourceMappingURL=NoteContent.js.map