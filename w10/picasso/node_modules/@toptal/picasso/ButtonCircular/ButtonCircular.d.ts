import { ReactElement, MouseEvent, ElementType } from 'react';
import { BaseProps, ButtonOrAnchorProps, OverridableComponent } from '@toptal/picasso-shared';
export declare type VariantType = 'primary' | 'flat' | 'transparent';
export interface Props extends BaseProps, ButtonOrAnchorProps {
    /** Show button in the active state (left mouse button down) */
    active?: boolean;
    /** The component used for the root node. Either a string to use a DOM element or a component. */
    as?: ElementType;
    /** Disables button */
    disabled?: boolean;
    /** Set focused style for the button */
    focused?: boolean;
    /** Set hovered style for the button */
    hovered?: boolean;
    /** Add an `<Icon />` along Button's children */
    icon?: ReactElement;
    /** Shows a loading indicator and disables click events */
    loading?: boolean;
    /** Callback invoked when component is clicked */
    onClick?: (event: MouseEvent<HTMLButtonElement & HTMLAnchorElement>) => void;
    /** The variant to use */
    variant?: VariantType;
    /** HTML Value of Button component */
    value?: string | number;
}
export declare const ButtonCircular: OverridableComponent<Props>;
export default ButtonCircular;
