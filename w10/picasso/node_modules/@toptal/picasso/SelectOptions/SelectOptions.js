var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { makeStyles } from '@material-ui/core/styles';
import React from 'react';
import cx from 'classnames';
import ScrollMenu from '../ScrollMenu';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoSelectOptions',
});
const SelectOptions = (props) => {
    const { selectedIndex, onBlur, children, style, fixedHeader, fixedFooter, className, role } = props, rest = __rest(props, ["selectedIndex", "onBlur", "children", "style", "fixedHeader", "fixedFooter", "className", "role"]);
    const classes = useStyles();
    return (React.createElement(ScrollMenu, Object.assign({ className: cx(classes.menu, {
            [classes.withHeader]: Boolean(fixedHeader),
            [classes.withFooter]: Boolean(fixedFooter),
        }, className), style: style, selectedIndex: selectedIndex, fixedFooter: fixedFooter, fixedHeader: fixedHeader, onBlur: onBlur, role: role }, rest), children));
};
SelectOptions.defaultProps = {
    role: 'menu',
};
SelectOptions.displayName = 'SelectOptions';
export default SelectOptions;
//# sourceMappingURL=SelectOptions.js.map