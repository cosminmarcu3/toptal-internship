var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useContext, forwardRef } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import cx from 'classnames';
import { useSidebar } from '@toptal/picasso-provider';
import { PageContext } from '../Page';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoPageContent',
});
export const PageContent = forwardRef(function PageContent(props, ref) {
    const { children, className, style, flex } = props, rest = __rest(props, ["children", "className", "style", "flex"]);
    const classes = useStyles();
    const { width, fullWidth } = useContext(PageContext);
    const { hasSidebar } = useSidebar();
    const innerClassName = cx({
        [classes.fullWidth]: fullWidth || width === 'full',
        [classes.wide]: width === 'wide',
        [classes.flex]: flex,
    }, classes.content);
    return (React.createElement("div", Object.assign({}, rest, { ref: ref, className: cx(classes.root, { [classes.hasSidebar]: hasSidebar }, className), style: style }),
        React.createElement("div", { className: innerClassName }, children)));
});
PageContent.defaultProps = {
    flex: true,
};
PageContent.displayName = 'PageContent';
export default PageContent;
//# sourceMappingURL=PageContent.js.map