import React, { ReactNode, LiHTMLAttributes, HTMLAttributes, ElementType, ReactElement } from 'react';
import { BaseProps, ButtonOrAnchorProps, TextLabelProps, OverridableComponent } from '@toptal/picasso-shared';
import Avatar, { AvatarProps } from '../Avatar';
export declare type VariantType = 'light' | 'dark';
export declare type MenuItemAttributes = LiHTMLAttributes<HTMLLIElement> & HTMLAttributes<HTMLDivElement> & ButtonOrAnchorProps;
export interface Props extends BaseProps, TextLabelProps, MenuItemAttributes {
    /** Component name to render the item as */
    as?: ElementType;
    /** Whether to render disabled item */
    disabled?: boolean;
    /** Whether to render without internal padding */
    disableGutters?: boolean;
    /** Adds an arrow to the item */
    menu?: ReactElement;
    /** Highlights the item as selected */
    selected?: boolean;
    /** Checkmarks the item */
    checkmarked?: boolean;
    /** Value of the item */
    value?: string | Readonly<string[]> | number;
    /** Variant of colors */
    variant?: VariantType;
    /** Disables changing colors on hover/focus */
    nonSelectable?: boolean;
    /** The main content of the item */
    children?: ReactNode;
    /** The additional description */
    description?: ReactNode;
    /** Render an `<Icon />` */
    icon?: ReactElement;
    /** Render an <Avatar /> */
    avatar?: ReactElement<AvatarProps, typeof Avatar>;
    /** Callback when item is clicked */
    onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    /** Callback when item is hovered */
    onMouseEnter?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
}
export declare const MenuItem: OverridableComponent<Props>;
export default MenuItem;
