var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cx from 'classnames';
import React, { forwardRef } from 'react';
import { ButtonBase } from '@material-ui/core';
import { makeStyles } from '@material-ui/core/styles';
import { Container } from '../Container';
import { BackMinor16, ChevronMinor16 } from '../Icon';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoTabScrollButton',
});
export const TabScrollButton = forwardRef(function TabScrollButton(props, ref) {
    const { className, style, direction, disabled } = props, rest = __rest(props, ["className", "style", "direction", "disabled"]);
    const classes = useStyles();
    if (disabled) {
        return null;
    }
    return (React.createElement(Container, Object.assign({}, rest, { ref: ref, className: cx(classes.root, className), style: style }),
        React.createElement(Container, { className: cx(classes.gradient, {
                [classes.left]: direction === 'left',
                [classes.right]: direction === 'right',
            }) },
            React.createElement(ButtonBase, { className: cx(classes.button, {
                    [classes.left]: direction === 'left',
                    [classes.right]: direction === 'right',
                }), "aria-label": `${direction} button`, "data-testid": `tab-scroll-button-${direction}` }, direction === 'left' ? React.createElement(BackMinor16, null) : React.createElement(ChevronMinor16, null)))));
});
TabScrollButton.displayName = 'TabScrollButton';
export default TabScrollButton;
//# sourceMappingURL=TabScrollButton.js.map