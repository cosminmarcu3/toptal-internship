var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef, cloneElement, } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Search16 as Search } from '../Icon';
import Container from '../Container';
import Typography from '../Typography';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoEmptyStateCollection',
});
export const EmptyStateCollection = forwardRef(function EmptyStateCollection(props, ref) {
    const classes = useStyles();
    const { icon, children, style } = props, rest = __rest(props, ["icon", "children", "style"]);
    const iconProps = {
        className: classes.icon,
        color: 'dark-grey',
    };
    const iconElement = icon ? (cloneElement(icon, iconProps)) : (React.createElement(Search, Object.assign({}, iconProps)));
    return (React.createElement(Container, Object.assign({}, rest, { alignItems: 'center', flex: true, ref: ref, style: style }),
        React.createElement(Container, { alignItems: 'center', className: classes.iconWrapper, flex: true, right: 'xsmall' }, iconElement),
        React.createElement(Container, null,
            React.createElement(Typography, { size: 'xsmall' }, children))));
});
EmptyStateCollection.displayName = 'EmptyStateCollection';
export default EmptyStateCollection;
//# sourceMappingURL=EmptyStateCollection.js.map