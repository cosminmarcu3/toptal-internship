import React, { forwardRef, useRef } from 'react';
import QuillEditorView from '../QuillEditorView';
import { useCombinedRefs } from '../utils';
import useQuillInstance from './hooks/useQuillInstance';
import { useFocus, useSubscribeToQuillEvents, useDisabledEditor, useKeyBindings, useSubscribeToTextEditorEvents, } from './hooks';
import useDefaultValue from './hooks/useDefaultValue';
const QuillEditor = forwardRef(function QuillEditor({ defaultValue, disabled, 'data-testid': dataTestId, id, isFocused, placeholder, onTextLengthChange, onSelectionChange, onTextFormat, onTextChange, plugins, }, ref) {
    const quill = useQuillInstance({ id, placeholder, plugins });
    const editorRef = useCombinedRefs(ref, useRef(null));
    useFocus({ isFocused, quill });
    useKeyBindings({ quill, onTextFormat });
    useSubscribeToQuillEvents({
        quill,
        onTextChange,
        onSelectionChange,
        onTextLengthChange,
    });
    useSubscribeToTextEditorEvents({
        editorRef,
        quill,
    });
    useDefaultValue({ defaultValue, quill });
    useDisabledEditor({ disabled, quill });
    return React.createElement(QuillEditorView, { ref: editorRef, "data-testid": dataTestId, id: id });
});
QuillEditor.defaultProps = {
    disabled: false,
    isFocused: false,
    onSelectionChange: () => { },
    onTextFormat: () => { },
    onTextLengthChange: () => { },
    onTextChange: () => { },
};
QuillEditor.displayName = 'QuillEditor';
export default QuillEditor;
//# sourceMappingURL=QuillEditor.js.map