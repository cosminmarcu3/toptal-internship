import { useEffect, useState } from 'react';
import Quill from 'quill';
import 'quill-paste-smart';
import { useTypographyClasses, makeHeaderFormat, makeBoldFormat, makeLinkFormat, } from '../../formats';
export const getModules = (plugins) => {
    const allowLinks = plugins === null || plugins === void 0 ? void 0 : plugins.includes('link');
    const allowedTags = [
        'b',
        'strong',
        'i',
        'em',
        'p',
        'br',
        'ul',
        'ol',
        'li',
        'h3',
    ];
    const allowedAttributes = [];
    if (allowLinks) {
        allowedTags.push('a');
        allowedAttributes.push('href');
    }
    return {
        clipboard: {
            matchVisual: false,
            allowed: {
                // unsupported tags will be also removed on BE side, so before extending
                // make sure, that our API supports new type
                tags: allowedTags,
                attributes: allowedAttributes,
            },
            keepSelection: true,
            substituteBlockElements: true,
        },
        keyboard: {
            // we need to specify default bindings
            // because Quill don't allow us to setup bindings via
            // quill.keyboard.addBinding for default Quill
            // key shortcuts otherwise
            bindings: {
                bold: {
                    key: 'B',
                    metaKey: true,
                    ctrlKey: true,
                    handler: function () { },
                },
                italic: {
                    key: 'I',
                    metaKey: true,
                    ctrlKey: true,
                    handler: function () { },
                },
            },
        },
    };
};
/**
 * Formats we allow to paste into editor
 *
 * This is separate from adding a control in the Toolbar.
 * For example, you can configure Quill to allow bolded
 * content to be pasted into an editor that has no bold
 * button in the toolbar. */
const formats = [
    'bold',
    'italic',
    'header',
    'list',
];
const Inline = Quill.import('blots/inline');
// We need link to be wrapped by other inline HTML tags to keep proper styling
// Lower index means deeper in the DOM tree, since not found (-1) is for embeds
Inline.order = [
    'cursor',
    'link',
    'inline',
    'underline',
    'strike',
    'italic',
    'bold',
    'script',
    'code', // Must be higher
];
const useQuillInstance = ({ id, placeholder, plugins, }) => {
    const [quill, setQuill] = useState();
    const typographyClasses = useTypographyClasses();
    useEffect(() => {
        const extendedFormats = [...formats];
        Quill.register(makeHeaderFormat(typographyClasses), true);
        Quill.register(makeBoldFormat(typographyClasses), true);
        const allowLinks = plugins === null || plugins === void 0 ? void 0 : plugins.includes('link');
        if (allowLinks) {
            Quill.register(makeLinkFormat(typographyClasses), true);
            extendedFormats.push('link');
        }
        setQuill(new Quill(`#${id}`, {
            modules: getModules(plugins),
            formats: extendedFormats,
            placeholder,
        }));
    }, [typographyClasses, id, placeholder, plugins]);
    return quill;
};
export default useQuillInstance;
//# sourceMappingURL=useQuillInstance.js.map