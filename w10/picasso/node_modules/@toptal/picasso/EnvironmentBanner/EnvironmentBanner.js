import React, { forwardRef, useState } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import cx from 'classnames';
import { useAppConfig } from '@toptal/picasso-provider';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoEnvironmentBanner',
});
export const EnvironmentBanner = forwardRef(function EnvironmentBanner(props, ref) {
    const { environment: configEnvironment } = useAppConfig();
    const { environment, productName } = props;
    const classes = useStyles();
    const [isShown, setIsShown] = useState(true);
    const resolvedEnvironment = environment || configEnvironment;
    if (resolvedEnvironment === 'production' ||
        resolvedEnvironment === 'test' ||
        !isShown) {
        return null;
    }
    return (React.createElement("div", { ref: ref, className: cx(classes.root, {
            [classes.rootDevelopment]: resolvedEnvironment === 'development',
            [classes.rootTemploy]: resolvedEnvironment === 'temploy',
            [classes.rootStaging]: resolvedEnvironment === 'staging',
        }) },
        React.createElement("div", { onClick: () => setIsShown(false), className: cx(classes.label, {
                [classes.labelDevelopment]: resolvedEnvironment === 'development',
                [classes.labelTemploy]: resolvedEnvironment === 'temploy',
                [classes.labelStaging]: resolvedEnvironment === 'staging',
            }) }, `${productName} ${resolvedEnvironment}`)));
});
// TODO: remove default environment in v5, so either directly passed version will be used
// or one from config, but not from defaultProps
EnvironmentBanner.defaultProps = { environment: 'production' };
EnvironmentBanner.displayName = 'EnvironmentBanner';
export default EnvironmentBanner;
//# sourceMappingURL=EnvironmentBanner.js.map