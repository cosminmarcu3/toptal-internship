import React, { useState } from 'react';
import { capitalize, makeStyles } from '@material-ui/core';
import cx from 'classnames';
import styles from './styles';
import { Pencil16, Pencil24 } from '../../Icon';
import { AVATAR_DROPZONE_SVG_SHAPES } from '../../AvatarDropzoneSvg';
const useStyles = makeStyles(styles, {
    name: 'PicassoDropzoneSvg',
});
export const AvatarEditContainer = (props) => {
    const { size = 'small', onClick, 'data-testid': dataTestId } = props;
    const [focused, setFocused] = useState(false);
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    const shapes = AVATAR_DROPZONE_SVG_SHAPES[size];
    const classes = useStyles();
    const PencilIconComponent = size === 'xxsmall' || size === 'xsmall' ? Pencil16 : Pencil24;
    const handleFocus = () => {
        setFocused(true);
    };
    const handleBlur = () => {
        setFocused(false);
    };
    return (React.createElement("button", { className: cx(classes.root, classes[`root${capitalize(size)}`]), "data-testid": dataTestId, onClick: onClick, onFocus: handleFocus, onBlur: handleBlur },
        React.createElement("svg", { className: cx(classes.svg, classes[`svg${capitalize(size)}`]), fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            React.createElement("path", { className: classes.background, fillRule: 'evenodd', clipRule: 'evenodd', d: shapes.background }),
            React.createElement("path", { className: cx(classes.outline, {
                    [classes.focused]: focused,
                }), fillRule: 'evenodd', clipRule: 'evenodd', d: shapes.outline, strokeOpacity: '.48', strokeWidth: '3', strokeLinejoin: 'round' })),
        React.createElement(PencilIconComponent, { className: classes.pencilIcon })));
};
AvatarEditContainer.displayName = 'AvatarEditContainer';
AvatarEditContainer.defaultProps = {
    size: 'small',
};
export default AvatarEditContainer;
//# sourceMappingURL=AvatarEditContainer.js.map