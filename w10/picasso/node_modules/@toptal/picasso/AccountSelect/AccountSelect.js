var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import cx from 'classnames';
import UserBadge from '../UserBadge';
import Typography from '../Typography';
import { MenuCompound as Menu } from '../MenuCompound';
import Link from '../Link';
import Container from '../Container';
import { ChevronRight16 } from '../Icon';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoAccountSelect',
});
export const AccountSelect = forwardRef(function AccountSelect(props, ref) {
    const { className, accounts, onSelect, style } = props, rest = __rest(props, ["className", "accounts", "onSelect", "style"]);
    const classes = useStyles();
    return (React.createElement(Menu, Object.assign({}, rest, { ref: ref, className: cx(classes.root, className), style: style }), accounts.map(account => (React.createElement(Menu.Item, { disableGutters: true, className: classes.accountItem, key: `role-${account.id}` },
        React.createElement(Link, { className: classes.accountLink, href: account.href, onClick: () => onSelect(account), noUnderline: true },
            React.createElement(Container, { padded: 'medium', flex: true, direction: 'row', alignItems: 'center', justifyContent: 'space-between' },
                React.createElement(UserBadge, { name: account.name, avatar: account.avatar },
                    React.createElement(Typography, { size: 'xsmall' }, account.position)),
                React.createElement(ChevronRight16, { color: 'dark-grey' }))))))));
});
AccountSelect.defaultProps = {
    onSelect: () => { },
};
AccountSelect.displayName = 'AccountSelect';
export default AccountSelect;
//# sourceMappingURL=AccountSelect.js.map