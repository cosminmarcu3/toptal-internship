var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import cx from 'classnames';
import { MenuList as MUIMenuList } from '@material-ui/core';
import { makeStyles } from '@material-ui/core/styles';
import { BackMinor16 } from '../Icon';
import MenuItem from '../MenuItem';
import Typography from '../Typography';
import { useMenu } from './hooks';
import MenuContext from './MenuContext';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoMenu',
});
export const Menu = forwardRef(function Menu(props, ref) {
    const { children, className, style, variant, allowNestedNavigation, testIds } = props, rest = __rest(props, ["children", "className", "style", "variant", "allowNestedNavigation", "testIds"]);
    const classes = useStyles();
    const { context, innerMenu, hasBackButton } = useMenu({ variant });
    const { onBackClick, onMenuMouseLeave } = context;
    return (React.createElement(MenuContext.Provider, { value: context }, innerMenu !== null && innerMenu !== void 0 ? innerMenu : (React.createElement(MUIMenuList, Object.assign({}, rest, { ref: ref, className: cx(classes.root, className), style: style, onMouseLeave: onMenuMouseLeave }),
        hasBackButton && allowNestedNavigation && (React.createElement(MenuItem, { key: 'back', "data-testid": testIds === null || testIds === void 0 ? void 0 : testIds.menuItem, onClick: onBackClick },
            React.createElement(Typography, { size: 'xsmall', color: 'dark-grey', variant: 'body' },
                React.createElement(BackMinor16, { className: classes.backButtonIcon }),
                "Back"))),
        children))));
});
Menu.defaultProps = {
    variant: 'slide',
    allowNestedNavigation: true,
};
Menu.displayName = 'Menu';
export default Menu;
//# sourceMappingURL=Menu.js.map