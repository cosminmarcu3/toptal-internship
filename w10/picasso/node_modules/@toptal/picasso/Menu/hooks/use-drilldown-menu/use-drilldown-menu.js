import { useCallback, useMemo, useState } from 'react';
const useDrilldownMenu = () => {
    const [activeItemKey, setActiveItemKey] = useState();
    const handleItemMouseEnter = useCallback((key, menu) => {
        if (menu) {
            setActiveItemKey(key);
        }
    }, []);
    const handleMenuMouseLeave = useCallback(() => {
        setActiveItemKey(undefined);
    }, []);
    const handleAwayClick = useCallback(() => {
        setActiveItemKey(undefined);
    }, []);
    const context = useMemo(() => ({
        variant: 'drilldown',
        activeItemKey,
        onItemMouseEnter: handleItemMouseEnter,
        onMenuMouseLeave: handleMenuMouseLeave,
        onAwayClick: handleAwayClick,
    }), [activeItemKey, handleItemMouseEnter, handleMenuMouseLeave, handleAwayClick]);
    return {
        context,
        innerMenu: undefined,
        hasBackButton: false,
    };
};
export default useDrilldownMenu;
//# sourceMappingURL=use-drilldown-menu.js.map