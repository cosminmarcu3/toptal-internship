var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import cx from 'classnames';
import { useTitleCase } from '@toptal/picasso-shared';
import Indicator from '../Indicator';
import Chip from '../Chip';
import toTitleCase from '../utils/to-title-case';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoTagRectangular',
});
export const TagRectangular = forwardRef(function TagRectangular(props, ref) {
    const { 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    color, children, style, className, titleCase: propsTitleCase, variant = 'light-grey', indicator } = props, rest = __rest(props, ["color", "children", "style", "className", "titleCase", "variant", "indicator"]);
    const classes = useStyles();
    const titleCase = useTitleCase(propsTitleCase);
    return (React.createElement(Chip, Object.assign({}, rest, { ref: ref, classes: {
            root: cx(classes.root, classes[variant]),
            label: classes.label,
            icon: classes.icon,
        }, className: className, style: style, icon: indicator ? React.createElement(Indicator, { color: indicator }) : undefined, label: React.createElement("span", { className: cx(classes.innerLabel, {
                [classes.innerLabelDarkText]: variant === 'light-grey',
            }) }, titleCase ? toTitleCase(children) : children) })));
});
TagRectangular.defaultProps = {
    variant: 'light-grey',
};
TagRectangular.displayName = 'TagRectangular';
export default TagRectangular;
//# sourceMappingURL=TagRectangular.js.map