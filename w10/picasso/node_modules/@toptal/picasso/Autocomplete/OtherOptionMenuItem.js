var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { MenuCompound as Menu } from '../MenuCompound';
import Typography from '../Typography';
const OtherOptionMenuItem = (_a) => {
    var { value, otherOptionText, renderOtherOption, classes } = _a, rest = __rest(_a, ["value", "otherOptionText", "renderOtherOption", "classes"]);
    return (React.createElement(Menu.Item, Object.assign({ key: 'other-option', className: `${classes.option} ${classes.otherOption}` }, rest, { titleCase: false }), renderOtherOption ? (renderOtherOption(value)) : (React.createElement("span", { className: classes.stringContent },
        React.createElement(Typography, { as: 'span', color: 'dark-grey' }, otherOptionText),
        value))));
};
OtherOptionMenuItem.displayName = 'OtherOptionMenuItem';
export default OtherOptionMenuItem;
//# sourceMappingURL=OtherOptionMenuItem.js.map