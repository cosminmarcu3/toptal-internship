import React, { ReactNode, ElementType, AnchorHTMLAttributes } from 'react';
import { BaseProps, OverridableComponent } from '@toptal/picasso-shared';
declare type VariantType = 'action' | 'anchor';
declare type ColorType = 'white' | 'blue';
export declare type Props = BaseProps & AnchorHTMLAttributes<HTMLAnchorElement> & {
    /** Content of the component */
    children?: ReactNode;
    /** Destination the link points to */
    href?: string;
    /** Callback invoked when component is clicked */
    onClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;
    /**
     * The component used for the root node.
     * Either a string to use a DOM element or a component.
     */
    as?: ElementType;
    /** Either it's a regular hyperlink or an _action_ */
    variant?: VariantType;
    /** Controls color of the link */
    color?: ColorType;
    /** Indicates the order of receiving focus. If not set will not receive focus. */
    tabIndex?: number;
    /** Indicates that the user cannot interact with the Link or its children */
    disabled?: boolean;
    visited?: boolean;
    /**
     * If true, underline decoration never applies
     */
    noUnderline?: boolean;
    'aria-disabled'?: boolean;
};
export declare const Link: OverridableComponent<Props>;
export default Link;
