import React, { ReactNode, ChangeEvent, HTMLAttributes, ReactElement } from 'react';
import { StandardProps, TransitionProps } from '@toptal/picasso-shared';
export declare type Borders = 'all' | 'middle' | 'none';
export interface Props extends StandardProps, Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Always visible part of accordion */
    children?: ReactNode;
    /** Collapsible content of `Accordion` */
    content: ReactNode;
    /** Define accordion content state, whether it should be collapsed or expanded */
    expanded?: boolean;
    /** Define accordion initial content state */
    defaultExpanded?: boolean;
    /** Whether the Accordion is disabled */
    disabled?: boolean;
    /** Customize icon indicating expanded status */
    expandIcon?: ReactElement;
    /** Defines where the horizontal borders show */
    borders?: Borders;
    /** Callback invoked when `Accordion` item is toggled */
    onChange?: (event: ChangeEvent<{}>, expanded: boolean) => void;
    /** Animation lifecycle callbacks. Backed by [react-transition-group/Transition](https://reactcommunity.org/react-transition-group/transition#Transition-props) */
    transitionProps?: TransitionProps;
    testIds?: {
        emptyAccordionSummary?: string;
        accordionSummary?: string;
    };
}
export declare const Accordion: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLElement>>;
export default Accordion;
