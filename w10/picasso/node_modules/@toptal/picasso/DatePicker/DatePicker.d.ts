import { BaseProps } from '@toptal/picasso-shared';
import { ReactNode } from 'react';
import { InputProps } from '../Input';
import { DayProps } from '../Calendar';
import { DatePickerValue, DatePickerInputCustomValueParser } from './types';
import { Status } from '../OutlinedInput';
export interface Props extends BaseProps, Omit<InputProps, 'value' | 'onSelect' | 'type' | 'multiline' | 'rows' | 'defaultValue' | 'onChange' | 'testIds'> {
    /** Date that will be selected in `DatePicker` */
    value?: DatePickerValue;
    /** Method that will be invoked with selected values */
    onChange: (value: DatePickerValue) => void;
    /** Invoked when user goes away from `DatePicker` input */
    onBlur?: () => void;
    /** Whether calendar supports single date selection or range */
    range?: boolean;
    /** Earliest date available for selection */
    minDate?: Date;
    /** Latest date available for selection */
    maxDate?: Date;
    /** Whether calendar should be closed after date selection. True by default */
    hideOnSelect?: boolean;
    /** Date format that user will see in the input */
    displayDateFormat?: string;
    /** Date range where selection is not allowed */
    disabledIntervals?: {
        start: Date;
        end: Date;
    }[];
    /** Date format that user will see during manual input */
    editDateFormat?: string;
    /** Specify icon which should be rendered inside `DatePicker` */
    icon?: ReactNode;
    /** Specify a value if want to enable browser autofill */
    autoComplete?: string;
    /**
     * @deprecated Use the `status` prop instead to both support success and error states
     * Indicate whether `DatePicker` is in error state
     */
    error?: boolean;
    /** Indicate `DatePicker` status */
    status?: Status;
    /** Function to override default markup to show Date */
    renderDay?: (args: DayProps) => ReactNode;
    popperContainer?: HTMLElement;
    /** Index of the first day of the week (0 - Sunday). Default is 1 - Monday */
    weekStartsOn?: number;
    /** IANA timezone to display and edit date(s) */
    timezone?: string;
    /** Custom parser for `DatePicker`'s input value to process custom input value, like, human-readable dates */
    parseInputValue?: DatePickerInputCustomValueParser;
    /** Additional data-* attrs for the inner Popper */
    popperProps?: {
        [key: `data-${string}`]: unknown;
    };
    testIds?: InputProps['testIds'] & {
        calendar?: string;
        input?: string;
    };
    /** Adds a customized footer at the bottom of the calendar */
    footer?: ReactNode;
    /** Change the footer background color */
    footerBackgroundColor?: string;
    /** Shows orange dot indicator in days between a date range */
    indicatedIntervals?: {
        start: Date;
        end: Date;
    }[];
}
export declare const DatePicker: {
    (props: Props): JSX.Element;
    defaultProps: {
        range: boolean;
        hideOnSelect: boolean;
        onBlur: () => void;
        editDateFormat: string;
        displayDateFormat: string;
        autoComplete: string;
        status: string;
    };
    displayName: string;
};
export default DatePicker;
