import React, { ReactNode } from 'react';
import { Props as ModalProps } from '../Modal';
export declare type VariantType = 'positive' | 'negative';
export declare type PromptOptions = {
    setResult: (newResult: unknown) => void;
    result: unknown;
    setLoading: (loading: boolean) => void;
    loading: boolean;
    setError: (error: boolean) => void;
    error: boolean;
};
export interface Props extends Omit<ModalProps, 'children' | 'onSubmit'> {
    /** Pass input component to allow you get input value from prompt modal */
    children?: (result: PromptOptions) => ReactNode;
    /** Title of modal */
    title: string;
    /** Prompt message */
    message: string;
    /** Different Prompt variants used for different intention */
    variant?: VariantType;
    /** Text on Submit button */
    submitText?: string;
    /** Text on Cancel button */
    cancelText?: string;
    /** Callback on Submit onClick event, returns result of input component if defined */
    onSubmit: (result: unknown) => Promise<unknown> | unknown;
    onAfterSubmit?: () => void;
    /** Callback on Cancel onClick event */
    onCancel?: () => void;
    onClose?: () => void;
    testIds?: {
        title?: string;
        message?: string;
        closeButton?: string;
        submitButton?: string;
    };
}
export declare const PromptModal: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLElement>>;
export default PromptModal;
