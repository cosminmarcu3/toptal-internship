var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef, cloneElement, } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import Container from '../Container';
import Typography from '../Typography';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoEmptyStatePage',
});
export const EmptyStatePage = forwardRef(function EmptyStatePage(props, ref) {
    const classes = useStyles();
    const { image, title, children, style } = props, rest = __rest(props, ["image", "title", "children", "style"]);
    return (React.createElement(Container, Object.assign({}, rest, { direction: 'column', alignItems: 'center', flex: true, ref: ref, style: style }),
        React.createElement(Container, { alignItems: 'center', justifyContent: 'center', bottom: 'small', flex: true }, cloneElement(image, { className: classes.image })),
        title && (React.createElement(Container, { bottom: 'xsmall' },
            React.createElement(Typography, { variant: 'heading', size: 'medium' }, title))),
        React.createElement(Typography, { size: 'xsmall', as: typeof children === 'string' ? 'p' : 'div' }, children)));
});
EmptyStatePage.displayName = 'EmptyStatePage';
export default EmptyStatePage;
//# sourceMappingURL=EmptyStatePage.js.map