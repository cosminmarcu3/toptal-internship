var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import cx from 'classnames';
import { makeStyles } from '@material-ui/core/styles';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'Rotate180',
});
export const Rotate180 = (props) => {
    const { children, style, className, on } = props, rest = __rest(props, ["children", "style", "className", "on"]);
    const classes = useStyles();
    const childProps = Object.assign({ className: cx(className, classes.transition, {
            [classes.rotate180]: on,
        }), style }, rest);
    return (React.createElement(React.Fragment, null, React.Children.map(children, child => React.cloneElement(child, childProps))));
};
Rotate180.displayName = 'Rotate180';
export default Rotate180;
//# sourceMappingURL=Rotate180.js.map