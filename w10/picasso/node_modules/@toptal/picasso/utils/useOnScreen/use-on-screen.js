import { useEffect, useState, useMemo } from 'react';
const useOnScreen = ({ ref, root, rootMargin, threshold, }) => {
    const [isIntersecting, setIntersecting] = useState(false);
    const observer = useMemo(() => new IntersectionObserver(([entry]) => {
        setIntersecting(entry.isIntersecting);
    }, {
        root: root === null || root === void 0 ? void 0 : root.current,
        rootMargin,
        threshold,
    }), [root, rootMargin, threshold]);
    useEffect(() => {
        const element = ref.current;
        if (!element) {
            return;
        }
        observer.observe(element);
        return () => {
            observer.unobserve(element);
        };
    }, [observer, ref]);
    return isIntersecting;
};
export default useOnScreen;
//# sourceMappingURL=use-on-screen.js.map