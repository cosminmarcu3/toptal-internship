import React from 'react';
import unsafeErrorLog from './unsafe-error-log';
const useDeprecationWarning = ({ description, name, newName, }) => {
    const message = `'${name}' component is deprecated and will be removed in the next major release of Picasso.'` +
        `${newName ? ` Please use '${newName}' instead.` : ''}` +
        `${description ? `\n${description}` : ''}`;
    React.useEffect(() => {
        unsafeErrorLog(message);
    }, [message]);
};
const usePropDeprecationWarning = ({ props, componentName, description, name, newName, }) => {
    const message = `${componentName}'s '${name}' prop is deprecated and will be removed in the next major release of Picasso.` +
        `${newName ? ` Please use '${newName}' instead.` : ''}` +
        `${description ? `\n${description}` : ''}`;
    const isDeprecatedPropUsed = name in props;
    React.useEffect(() => {
        if (isDeprecatedPropUsed) {
            unsafeErrorLog(message);
        }
    }, [isDeprecatedPropUsed, message]);
};
export { useDeprecationWarning, usePropDeprecationWarning };
//# sourceMappingURL=use-deprecation-warnings.js.map