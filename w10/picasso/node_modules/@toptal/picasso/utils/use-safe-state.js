import { useRef, useState, useCallback, useEffect } from 'react';
const useSafeState = (initState) => {
    const [state, unsafeSetState] = useState(initState);
    const isMounted = useRef(false);
    useEffect(() => {
        isMounted.current = true;
        return () => {
            isMounted.current = false;
        };
    });
    const setState = useCallback(newState => {
        if (isMounted.current) {
            unsafeSetState(newState);
        }
    }, []);
    return [state, setState];
};
export default useSafeState;
//# sourceMappingURL=use-safe-state.js.map