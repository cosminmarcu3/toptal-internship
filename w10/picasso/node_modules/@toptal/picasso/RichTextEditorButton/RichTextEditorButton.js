var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import cx from 'classnames';
import { makeStyles } from '@material-ui/core';
import ButtonCircular from '../ButtonCircular';
import styles from './styles';
// Using { index: 10 } to inject CSS generated classes after the button's classes
// in order to prevent Button's styles to override custom TextEditorButton styles
// Related Jira issue: https://toptal-core.atlassian.net/browse/FX-1520
const useStyles = makeStyles(styles, {
    name: 'TextEditorButton',
    index: 10,
});
const RichTextEditorButton = (props) => {
    const { icon, onClick, active, className, style, disabled } = props, rest = __rest(props, ["icon", "onClick", "active", "className", "style", "disabled"]);
    const classes = useStyles(props);
    return (React.createElement(ButtonCircular, Object.assign({ variant: 'flat', onClick: onClick, icon: icon, style: style, className: cx(classes.button, {
            [classes.activeButton]: active,
        }, className), disabled: disabled }, rest)));
};
RichTextEditorButton.defaultProps = {
    active: false,
    disabled: false,
    onClick: () => { },
};
RichTextEditorButton.displayName = 'RichTextEditorButton';
export default RichTextEditorButton;
//# sourceMappingURL=RichTextEditorButton.js.map