var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef, useMemo, } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Table as MUITable } from '@material-ui/core';
import TableContext from './TableContext';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'Table',
});
// eslint-disable-next-line react/display-name
export const Table = forwardRef(function Table(props, ref) {
    const { className, style, children, spacing = 'regular', variant = 'bordered' } = props, rest = __rest(props, ["className", "style", "children", "spacing", "variant"]);
    const classes = useStyles();
    const tableConfig = useMemo(() => ({ spacing, variant }), [spacing, variant]);
    return (React.createElement(TableContext.Provider, { value: tableConfig },
        React.createElement(MUITable, Object.assign({}, rest, { ref: ref, classes: classes, className: className, style: style }), children)));
});
Table.defaultProps = {
    spacing: 'regular',
    variant: 'bordered',
};
Table.displayName = 'Table';
export default Table;
//# sourceMappingURL=Table.js.map