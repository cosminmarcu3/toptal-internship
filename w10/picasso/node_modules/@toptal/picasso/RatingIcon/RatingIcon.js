var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import cx from 'classnames';
import { Star16, StarSolid16, Star24, StarSolid24 } from '../Icon';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoRatingIcon',
});
const iconsBySize = {
    small: [Star16, StarSolid16],
    large: [Star24, StarSolid24],
};
const RatingIcon = forwardRef(function RatingIcon(props, ref) {
    const { active, hovered, interactive, size } = props, rest = __rest(props, ["active", "hovered", "interactive", "size"]);
    const classes = useStyles();
    const iconColor = 'yellow';
    const iconClasses = cx({
        [classes.clickableIcon]: interactive,
        [classes.hovered]: hovered,
    });
    const [Icon, IconSolid] = iconsBySize[size] || iconsBySize.small;
    return (React.createElement("span", Object.assign({}, rest, { ref: ref }), active ? (React.createElement(IconSolid, { color: iconColor, className: iconClasses })) : (React.createElement(Icon, { color: iconColor, className: iconClasses }))));
});
RatingIcon.defaultProps = {
    interactive: true,
};
RatingIcon.displayName = 'RatingIcon';
export default RatingIcon;
//# sourceMappingURL=RatingIcon.js.map