var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Tabs as MUITabs } from '@material-ui/core';
import TabScrollButton from '../TabScrollButton';
import styles from './styles';
import useTabAction from './use-tab-action';
const useStyles = makeStyles(styles, {
    name: 'Tabs',
});
export const TabsOrientationContext = React.createContext('horizontal');
// eslint-disable-next-line react/display-name
export const Tabs = forwardRef(function Tabs(props, ref) {
    const { children, orientation, onChange, value, variant = 'scrollable' } = props, rest = __rest(props, ["children", "orientation", "onChange", "value", "variant"]);
    const classes = useStyles(props);
    const action = useTabAction();
    return (React.createElement(TabsOrientationContext.Provider, { value: orientation },
        React.createElement(MUITabs, Object.assign({}, rest, { classes: { root: classes[orientation] }, ref: ref, onChange: onChange, value: value, action: action, scrollButtons: 'auto', ScrollButtonComponent: TabScrollButton, orientation: orientation, variant: variant }), children)));
});
Tabs.displayName = 'Tabs';
Tabs.defaultProps = {
    orientation: 'horizontal',
};
export default Tabs;
//# sourceMappingURL=Tabs.js.map