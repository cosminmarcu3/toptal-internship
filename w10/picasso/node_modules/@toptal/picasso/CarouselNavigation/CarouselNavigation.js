import React, { memo } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import styles from './styles';
import ButtonCircular from '../ButtonCircular';
import Container from '../Container';
import ChevronRight24 from '../Icon/ChevronRight24';
const getJustifyContent = (hasArrows, hasDots) => {
    if (hasArrows && hasDots) {
        return 'space-between';
    }
    if (hasArrows) {
        return 'flex-end';
    }
    if (hasDots) {
        return 'center';
    }
};
const useStyles = makeStyles(styles, { name: 'CarouselNavigation' });
const CarouselNavigation = ({ getDotsProps, getNextProps, getPrevProps, hasArrows, hasDots, testIds, }) => {
    const classes = useStyles();
    return (React.createElement(Container, { className: classes.navigation, flex: true, justifyContent: getJustifyContent(hasArrows, hasDots), "data-testid": testIds.navigation },
        hasDots && (React.createElement("div", Object.assign({}, getDotsProps(), { "data-testid": testIds.dots, className: classes.dots }))),
        hasArrows && (React.createElement(Container, { "data-testid": testIds.arrows },
            React.createElement(ButtonCircular, Object.assign({ className: classes.arrowPrev, "data-testid": testIds.prev, icon: React.createElement(ChevronRight24, null), variant: 'flat' }, getPrevProps())),
            React.createElement(ButtonCircular, Object.assign({ "data-testid": testIds.next, icon: React.createElement(ChevronRight24, null), variant: 'flat' }, getNextProps()))))));
};
export default memo(CarouselNavigation);
//# sourceMappingURL=CarouselNavigation.js.map