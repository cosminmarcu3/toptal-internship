import { isSubstring } from '../../../utils';
import isOptionsType from '../../utils/is-options-type';
import getOptionText from '../get-option-text';
const filterOptions = ({ options, filterOptionsValue, getDisplayValue, filterFlatOptions: filterFlatOptionsFunction = filterFlatOptions, }) => {
    if (isOptionsType(options)) {
        return filterFlatOptionsFunction(options, filterOptionsValue, getDisplayValue);
    }
    return Object.keys(options).reduce((result, group) => {
        const filteredFlatOptions = filterFlatOptionsFunction(options[group], filterOptionsValue, getDisplayValue);
        if (filteredFlatOptions.length > 0) {
            result[group] = filteredFlatOptions;
        }
        return result;
    }, {});
};
export const filterFlatOptions = (options, filterOptionsValue, getDisplayValue = getOptionText) => options.filter(option => isSubstring(filterOptionsValue, getDisplayValue(option)));
export default filterOptions;
//# sourceMappingURL=filter-options.js.map