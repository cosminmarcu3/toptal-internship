import { useCallback } from 'react';
import { normalizeArrowKey, focusRef } from '../../../utils';
const useSearchKeyDownHandler = ({ selectRef, selectProps: { onKeyDown }, handleArrowsKeyDown, handleEnterOrSpaceKeyDown, handleEscapeKeyDown, }) => 
// eslint-disable-next-line complexity
useCallback(
// eslint-disable-next-line complexity
(event) => {
    const key = normalizeArrowKey(event);
    if (key === 'Tab') {
        focusRef(selectRef);
        event.preventDefault();
    }
    else if (key === 'ArrowUp' || key === 'ArrowDown') {
        handleArrowsKeyDown(key, event);
    }
    else if (key === 'Enter') {
        handleEnterOrSpaceKeyDown(event);
    }
    else if (key === 'Escape') {
        handleEscapeKeyDown(event);
    }
    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);
}, [
    selectRef,
    onKeyDown,
    handleArrowsKeyDown,
    handleEnterOrSpaceKeyDown,
    handleEscapeKeyDown,
]);
export default useSearchKeyDownHandler;
//# sourceMappingURL=use-search-keydown-handler.js.map