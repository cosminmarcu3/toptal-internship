import useFocusHandler from './use-focus-handler';
import useClickHandler from './use-click-handler';
import useBlurHandler from './use-blur-handler';
import useSelectHandler from './use-select-handler';
import useSearchBlurHandler from './use-search-blur-handler';
import useEscapeKeyDownHandler from './use-escape-keydown-handler';
import useSearchKeyDownHandler from './use-search-keydown-handler';
import useSelectKeyDownHandler from './use-select-keydown-handler';
import useEnterOrSpaceKeyDownHandler from './use-enter-or-space-keydown-handler';
import useArrowsKeyDownHandler from './use-arrows-keydown-handler';
import useResetClickHandler from './use-reset-click-handler';
import useSearchChangeHandler from './use-search-change-handler';
import useItemOnMouseDownHandler from './use-item-on-mouse-down-handler';
import useItemOnMouseEnter from './use-item-on-mouse-enter-handler';
import useItemOnClick from './use-item-on-click-handler';
const useSelectProps = (props) => {
    const handleFocus = useFocusHandler(props);
    const handleClick = useClickHandler(props);
    const handleBlur = useBlurHandler(props);
    const handleSelect = useSelectHandler(props);
    const handleSearchBlur = useSearchBlurHandler(props);
    const handleEscapeKeyDown = useEscapeKeyDownHandler(props);
    const handleEnterOrSpaceKeyDown = useEnterOrSpaceKeyDownHandler(Object.assign(Object.assign({}, props), { handleSelect }));
    const handleArrowsKeyDown = useArrowsKeyDownHandler(props);
    const handleResetClick = useResetClickHandler(Object.assign(Object.assign({}, props), { handleSelect }));
    const handleSearchChange = useSearchChangeHandler(props);
    const handleItemOnMouseDown = useItemOnMouseDownHandler();
    const handleItemOnMouseEnter = useItemOnMouseEnter(props);
    const handleItemOnClick = useItemOnClick(Object.assign(Object.assign({}, props), { handleSelect }));
    const handleSearchKeyDown = useSearchKeyDownHandler(Object.assign(Object.assign({}, props), { handleArrowsKeyDown,
        handleEnterOrSpaceKeyDown,
        handleEscapeKeyDown }));
    const handleSelectKeyDown = useSelectKeyDownHandler(Object.assign(Object.assign({}, props), { handleArrowsKeyDown,
        handleEnterOrSpaceKeyDown,
        handleEscapeKeyDown }));
    const getItemProps = (item, index) => ({
        onMouseEnter: () => handleItemOnMouseEnter(index),
        onMouseDown: handleItemOnMouseDown,
        onClick: (event) => handleItemOnClick(event, item),
    });
    const getRootProps = () => ({
        onFocus: handleFocus,
        onClick: handleClick,
        onBlur: handleBlur,
    });
    const getInputProps = () => ({
        onKeyDown: handleSelectKeyDown,
        onResetClick: handleResetClick,
    });
    const getSearchInputProps = () => ({
        onChange: handleSearchChange,
        onKeyDown: handleSearchKeyDown,
        onBlur: handleSearchBlur,
    });
    return {
        getItemProps,
        getRootProps,
        getInputProps,
        getSearchInputProps,
    };
};
export default useSelectProps;
//# sourceMappingURL=use-select-props.js.map