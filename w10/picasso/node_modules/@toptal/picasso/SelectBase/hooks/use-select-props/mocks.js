export const getUseSelectPropsMock = () => {
    return {
        searchInputRef: {
            current: {
                focus: jest.fn(),
            },
        },
        selectRef: {
            current: {
                focus: jest.fn(),
            },
        },
        popperRef: {
            current: {
                focus: jest.fn(),
            },
        },
        selectProps: {
            disabled: false,
            error: false,
            loading: false,
            onChange: jest.fn(),
            options: [],
            renderOption: jest.fn(),
            getDisplayValue: jest.fn(),
            value: undefined,
            multiple: false,
            native: false,
            enableReset: false,
        },
        selectState: {
            isOpen: false,
            canOpen: true,
            open: jest.fn(),
            close: jest.fn(),
            highlightedIndex: 0,
            closeOnEnter: true,
            setHighlightedIndex: jest.fn(),
            setFilterOptionsValue: jest.fn(),
            showSearch: false,
            filterOptionsValue: '',
            displayValue: '',
            selection: {
                isSelected: jest.fn(),
                isOptionSelected: jest.fn(),
                display: jest.fn(),
            },
            filteredOptions: [],
            emptySelectValue: '',
            selectedOptions: [],
        },
    };
};
//# sourceMappingURL=mocks.js.map