import { KeyboardEvent } from 'react';
import { ValueType, UseSelectProps } from '../../../types';
import useArrowsKeyDownHandler from '../use-arrows-keydown-handler';
import useEnterOrSpaceKeyDownHandler from '../use-enter-or-space-keydown-handler';
import useEscapeKeyDownHandler from '../use-escape-keydown-handler';
declare const useSearchKeyDownHandler: <T extends ValueType, M extends boolean = false>({ selectRef, selectProps: { onKeyDown }, handleArrowsKeyDown, handleEnterOrSpaceKeyDown, handleEscapeKeyDown, }: UseSelectProps<T, M, M extends true ? T[] : T> & {
    handleArrowsKeyDown: ReturnType<typeof useArrowsKeyDownHandler>;
    handleEnterOrSpaceKeyDown: ReturnType<typeof useEnterOrSpaceKeyDownHandler>;
    handleEscapeKeyDown: ReturnType<typeof useEscapeKeyDownHandler>;
}) => (event: KeyboardEvent<HTMLInputElement>) => void;
export default useSearchKeyDownHandler;
