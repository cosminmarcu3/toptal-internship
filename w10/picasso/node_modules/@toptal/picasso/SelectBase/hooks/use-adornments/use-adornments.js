import React, { useMemo } from 'react';
import InputAdornment from '../../../InputAdornment';
import Loader from '../../../Loader';
export const useAdornments = ({ disabled, position, icon, loading }) => useMemo(() => {
    const adornment = icon ? (React.createElement(InputAdornment, { disabled: disabled, position: position, disablePointerEvents: true }, icon)) : null;
    const startAdornment = position === 'start' ? adornment : null;
    const endIconAdornment = position === 'end' ? adornment : null;
    const endAdornment = loading ? (React.createElement(InputAdornment, { key: 'loading', position: 'end', disablePointerEvents: true },
        React.createElement(Loader, { size: 'small' }))) : (endIconAdornment);
    return [startAdornment, endAdornment];
}, [disabled, position, icon, loading]);
export default useAdornments;
//# sourceMappingURL=use-adornments.js.map