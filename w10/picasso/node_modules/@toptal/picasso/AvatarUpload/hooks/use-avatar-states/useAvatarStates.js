import { useEffect, useState } from 'react';
const useAvatarStates = (props) => {
    const { autoHover, autoFocus, defaultActive, isDropzoneFocused, isDropzoneDragActive, } = props;
    const [{ initiallyFocused, initiallyActive, hovered }, setVisualStates] = useState({
        hovered: Boolean(autoHover),
        initiallyFocused: Boolean(autoFocus),
        initiallyActive: Boolean(defaultActive),
    });
    const onMouseEnter = () => {
        setVisualStates(oldState => (Object.assign(Object.assign({}, oldState), { hovered: true })));
    };
    const onMouseLeave = () => {
        setVisualStates(oldState => (Object.assign(Object.assign({}, oldState), { hovered: false })));
    };
    useEffect(() => {
        if (initiallyActive && isDropzoneDragActive) {
            setVisualStates(oldState => (Object.assign(Object.assign({}, oldState), { initiallyActive: false })));
        }
    }, [initiallyActive, isDropzoneDragActive]);
    useEffect(() => {
        if (initiallyFocused && isDropzoneFocused) {
            setVisualStates(oldState => (Object.assign(Object.assign({}, oldState), { initiallyFocused: false })));
        }
    }, [initiallyFocused, isDropzoneFocused]);
    return {
        hovered,
        onMouseEnter,
        onMouseLeave,
        isFocused: Boolean(initiallyFocused || isDropzoneFocused),
        isDragActive: Boolean(initiallyActive || isDropzoneDragActive),
    };
};
export default useAvatarStates;
//# sourceMappingURL=useAvatarStates.js.map