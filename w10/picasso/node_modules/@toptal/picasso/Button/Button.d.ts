import { ReactNode, ReactElement, MouseEvent, ElementType } from 'react';
import { StandardProps, SizeType, ButtonOrAnchorProps, OverridableComponent, TextLabelProps } from '@toptal/picasso-shared';
export declare type VariantType = 'primary' | 'negative' | 'positive' | 'secondary' | 'transparent';
export declare type IconPositionType = 'left' | 'right';
export interface Props extends StandardProps, TextLabelProps, ButtonOrAnchorProps {
    /** Show button in the active state (left mouse button down) */
    active?: boolean;
    as?: ElementType;
    /** Disables button */
    disabled?: boolean;
    /** Content of Button component */
    children: ReactNode;
    focused?: boolean;
    /** Take the full width of a container */
    fullWidth?: boolean;
    /** Set hovered style for the button */
    hovered?: boolean;
    /** Add an `<Icon />` along Button's children */
    icon?: ReactElement;
    /** Icon can be positioned on the left or right */
    iconPosition?: IconPositionType;
    /** Shows a loading indicator and disables click events */
    loading?: boolean;
    /** Callback invoked when component is clicked */
    onClick?: (event: MouseEvent<HTMLButtonElement & HTMLAnchorElement>) => void;
    /** A button can have different sizes */
    size?: SizeType<'small' | 'medium' | 'large'>;
    /** The variant to use */
    variant?: VariantType;
    /** HTML Value of Button component */
    value?: string | number;
    /** HTML title of Button component */
    title?: string;
    /** HTML type of Button component */
    type?: 'button' | 'reset' | 'submit';
}
export declare const Button: OverridableComponent<Props>;
export default Button;
