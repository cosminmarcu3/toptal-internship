import React, { forwardRef } from 'react';
import cx from 'classnames';
import { makeStyles } from '@material-ui/core/styles';
import kebabToCamelCase from '../utils/kebab-to-camel-case';
import styles from './styles';
const BASE_SIZE = 16;
const useStyles = makeStyles(styles, {
    name: 'PicassoSvgUploadDocument16',
});
const SvgUploadDocument16 = forwardRef(function SvgUploadDocument16(props, ref) {
    const { className, style = {}, color, scale, base, 'data-testid': testId, } = props;
    const classes = useStyles(props);
    const classNames = [classes.root, className];
    const scaledSize = base || BASE_SIZE * Math.ceil(scale || 1);
    const colorClassName = kebabToCamelCase(`${color}`);
    if (classes[colorClassName]) {
        classNames.push(classes[colorClassName]);
    }
    const svgStyle = Object.assign({ minWidth: `${scaledSize}px`, minHeight: `${scaledSize}px` }, style);
    return (React.createElement("svg", { viewBox: '0 0 16 16', className: cx(...classNames), style: svgStyle, ref: ref, "data-testid": testId },
        React.createElement("path", { d: 'M1 15h7v1H0V0h13v8h-1V1H1v14Zm12-3.293V16h-1v-4.293l-1.5 1.5-.707-.707L12.5 9.793l.707.707 2 2-.707.707-1.5-1.5ZM3 4h7v1H3V4Zm0 2h7v1H3V6Zm0 2h3v1H3V8Z' })));
});
SvgUploadDocument16.displayName = 'SvgUploadDocument16';
export default SvgUploadDocument16;
//# sourceMappingURL=UploadDocument16.js.map