import React, { forwardRef } from 'react';
import cx from 'classnames';
import { makeStyles } from '@material-ui/core/styles';
import kebabToCamelCase from '../utils/kebab-to-camel-case';
import styles from './styles';
const BASE_SIZE = 16;
const useStyles = makeStyles(styles, {
    name: 'PicassoSvgFunction16',
});
const SvgFunction16 = forwardRef(function SvgFunction16(props, ref) {
    const { className, style = {}, color, scale, base, 'data-testid': testId, } = props;
    const classes = useStyles(props);
    const classNames = [classes.root, className];
    const scaledSize = base || BASE_SIZE * Math.ceil(scale || 1);
    const colorClassName = kebabToCamelCase(`${color}`);
    if (classes[colorClassName]) {
        classNames.push(classes[colorClassName]);
    }
    const svgStyle = Object.assign({ minWidth: `${scaledSize}px`, minHeight: `${scaledSize}px` }, style);
    return (React.createElement("svg", { viewBox: '0 0 16 16', className: cx(...classNames), style: svgStyle, ref: ref, "data-testid": testId },
        React.createElement("path", { d: 'M7.5 1A2.5 2.5 0 0 1 8 5.95V8h5v3h2v5h-5v-5h2V9H3v2h2v5H0v-5h2V8h5V5.95A2.5 2.5 0 0 1 7.5 1ZM14 12h-3v3h3v-3ZM4 12H1v3h3v-3ZM7.5 2a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3Z' })));
});
SvgFunction16.displayName = 'SvgFunction16';
export default SvgFunction16;
//# sourceMappingURL=Function16.js.map