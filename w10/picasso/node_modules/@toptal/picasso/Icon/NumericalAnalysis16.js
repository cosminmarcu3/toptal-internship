import React, { forwardRef } from 'react';
import cx from 'classnames';
import { makeStyles } from '@material-ui/core/styles';
import kebabToCamelCase from '../utils/kebab-to-camel-case';
import styles from './styles';
const BASE_SIZE = 16;
const useStyles = makeStyles(styles, {
    name: 'PicassoSvgNumericalAnalysis16',
});
const SvgNumericalAnalysis16 = forwardRef(function SvgNumericalAnalysis16(props, ref) {
    const { className, style = {}, color, scale, base, 'data-testid': testId, } = props;
    const classes = useStyles(props);
    const classNames = [classes.root, className];
    const scaledSize = base || BASE_SIZE * Math.ceil(scale || 1);
    const colorClassName = kebabToCamelCase(`${color}`);
    if (classes[colorClassName]) {
        classNames.push(classes[colorClassName]);
    }
    const svgStyle = Object.assign({ minWidth: `${scaledSize}px`, minHeight: `${scaledSize}px` }, style);
    return (React.createElement("svg", { viewBox: '0 0 16 16', className: cx(...classNames), style: svgStyle, ref: ref, "data-testid": testId },
        React.createElement("path", { d: 'M16 0v16H0V0h16Zm-1 1H1v14h14V1Zm-3 12v1h-1v-1h1ZM5.914 9.379l.707.707L5.207 11.5l1.414 1.414-.707.707L4.5 12.207l-1.414 1.414-.707-.707L3.793 11.5l-1.414-1.414.707-.707L4.5 10.793l1.414-1.414ZM14 11v1H9v-1h5Zm-2-2v1h-1V9h1ZM5 2v2h2v1H5v2H4V5H2V4h2V2h1Zm9 2v1H9V4h5Z' })));
});
SvgNumericalAnalysis16.displayName = 'SvgNumericalAnalysis16';
export default SvgNumericalAnalysis16;
//# sourceMappingURL=NumericalAnalysis16.js.map