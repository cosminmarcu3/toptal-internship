import React, { forwardRef } from 'react';
import cx from 'classnames';
import { makeStyles } from '@material-ui/core/styles';
import kebabToCamelCase from '../utils/kebab-to-camel-case';
import styles from './styles';
const BASE_SIZE = 32;
const useStyles = makeStyles(styles, {
    name: 'PicassoSvgCreditCard32',
});
const SvgCreditCard32 = forwardRef(function SvgCreditCard32(props, ref) {
    const { className, style = {}, color, scale, base, 'data-testid': testId, } = props;
    const classes = useStyles(props);
    const classNames = [classes.root, className];
    const scaledSize = base || BASE_SIZE * Math.ceil(scale || 1);
    const colorClassName = kebabToCamelCase(`${color}`);
    if (classes[colorClassName]) {
        classNames.push(classes[colorClassName]);
    }
    const svgStyle = Object.assign({ minWidth: `${scaledSize}px`, minHeight: `${scaledSize}px` }, style);
    return (React.createElement("svg", { viewBox: '0 0 32 32', className: cx(...classNames), style: svgStyle, ref: ref, "data-testid": testId },
        React.createElement("path", { d: 'M31 10V7a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v3h30Zm0 1H1v14a1 1 0 0 0 1 1h28a1 1 0 0 0 1-1V11ZM2 5h28a2 2 0 0 1 2 2v18a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2Zm2 11h10v1H4v-1Zm0 4h5v1H4v-1Zm19-4h5v1h-5v-1Z' })));
});
SvgCreditCard32.displayName = 'SvgCreditCard32';
export default SvgCreditCard32;
//# sourceMappingURL=CreditCard32.js.map