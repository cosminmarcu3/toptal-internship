import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Collapse } from '@material-ui/core';
import styles from './styles';
import FieldRequirementItem from './FieldRequirementItem';
import Typography from '../Typography';
import Grid from '../Grid';
const ANIMATION_TIMEOUT = 500;
const useStyles = makeStyles(styles);
export const FieldRequirements = ({ value, description, open, error, timeout, requirements, className, style, testIds, }) => {
    const classes = useStyles();
    return (React.createElement(Collapse, { style: style, className: className, in: open, timeout: timeout, "data-testid": testIds === null || testIds === void 0 ? void 0 : testIds.root },
        description && (React.createElement(Typography, { "data-testid": testIds === null || testIds === void 0 ? void 0 : testIds.description, variant: 'body', size: 'xxsmall', className: classes.description }, description)),
        React.createElement(Grid, { className: classes.root, spacing: 0, "data-testid": testIds === null || testIds === void 0 ? void 0 : testIds.gridContainer }, requirements.map(requirement => {
            let status = 'default';
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            if (requirement.validator(value)) {
                status = 'success';
            }
            else if (error) {
                status = 'error';
            }
            return (React.createElement(FieldRequirementItem, { key: requirement.message, status: status, testIds: requirement.testIds }, requirement.message));
        }))));
};
FieldRequirements.defaultProps = {
    open: false,
    timeout: ANIMATION_TIMEOUT,
    value: '',
};
FieldRequirements.displayName = 'FieldRequirements';
export default FieldRequirements;
//# sourceMappingURL=FieldRequirements.js.map