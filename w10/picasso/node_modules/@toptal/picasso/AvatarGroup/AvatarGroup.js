import React, { useMemo } from 'react';
import cx from 'classnames';
import { makeStyles } from '@material-ui/core/styles';
import { Container } from '../Container';
import Avatar from '../Avatar';
import AvatarWrapper from '../Avatar/AvatarWrapper/AvatarWrapper';
import TextAvatar from '../Avatar/TextAvatar/TextAvatar';
import styles from './styles';
const useStyles = makeStyles(styles, {
    name: 'PicassoAvatarGroup',
});
const AvatarGroup = ({ className, style, testIds, items, limit, size, }) => {
    const classes = useStyles();
    /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */
    const isOverLimit = items.length > limit;
    // we need to add +1 for the last item that is going to be transformed to numbered Avatar
    /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */
    const itemsOverLimit = items.length - limit + 1;
    const avatarsToRender = useMemo(() => 
    /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */
    isOverLimit ? items.slice(0, limit - 1) : items, [isOverLimit, items, limit]);
    if (items.length === 0) {
        return null;
    }
    return (React.createElement(Container, { className: cx(classes.root, className), "data-testid": testIds === null || testIds === void 0 ? void 0 : testIds.container, flex: true, gap: 'xsmall', style: style },
        avatarsToRender.map(({ alt, name, src, 'data-testid': avatarTestId }, index) => (React.createElement(Avatar, { alt: alt, key: `${name}-${alt}-${String(index)}`, name: name, 
            /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */
            size: size, src: src, "data-testid": avatarTestId }))),
        isOverLimit ? (
        /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */
        React.createElement(AvatarWrapper, { size: size, variant: 'square' },
            React.createElement(TextAvatar, { "data-testid": testIds === null || testIds === void 0 ? void 0 : testIds.overLimit, size: size },
                "+",
                itemsOverLimit))) : null));
};
AvatarGroup.defaultProps = {
    limit: 5,
    size: 'xsmall',
};
export default AvatarGroup;
//# sourceMappingURL=AvatarGroup.js.map